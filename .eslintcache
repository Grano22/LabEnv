[{"C:\\xampp\\htdocs\\LabEnv\\labenv\\src\\App.js":"1","C:\\xampp\\htdocs\\LabEnv\\labenv\\src\\App.test.js":"2","C:\\xampp\\htdocs\\LabEnv\\labenv\\src\\components\\AlgebraComposer\\AlgebraComposer.jsx":"3","C:\\xampp\\htdocs\\LabEnv\\labenv\\src\\components\\Calc\\Calc.actions.jsx":"4","C:\\xampp\\htdocs\\LabEnv\\labenv\\src\\components\\Calc\\Calc.jsx":"5","C:\\xampp\\htdocs\\LabEnv\\labenv\\src\\components\\Converter\\Converter.jsx":"6","C:\\xampp\\htdocs\\LabEnv\\labenv\\src\\components\\Exchanger\\Exchanger.jsx":"7","C:\\xampp\\htdocs\\LabEnv\\labenv\\src\\components\\Formulas\\Formulas.actions.jsx":"8","C:\\xampp\\htdocs\\LabEnv\\labenv\\src\\components\\Formulas\\Formulas.jsx":"9","C:\\xampp\\htdocs\\LabEnv\\labenv\\src\\components\\index.jsx":"10","C:\\xampp\\htdocs\\LabEnv\\labenv\\src\\components\\Labolatory\\Labolatory.actions.jsx":"11","C:\\xampp\\htdocs\\LabEnv\\labenv\\src\\components\\Labolatory\\Labolatory.jsx":"12","C:\\xampp\\htdocs\\LabEnv\\labenv\\src\\components\\Labolatory\\Laboratory.errors.jsx":"13","C:\\xampp\\htdocs\\LabEnv\\labenv\\src\\components\\News\\news.jsx":"14","C:\\xampp\\htdocs\\LabEnv\\labenv\\src\\components\\Symbols\\Symbols.actions.jsx":"15","C:\\xampp\\htdocs\\LabEnv\\labenv\\src\\components\\Symbols\\Symbols.jsx":"16","C:\\xampp\\htdocs\\LabEnv\\labenv\\src\\components\\Symbols\\SymbolView.jsx":"17","C:\\xampp\\htdocs\\LabEnv\\labenv\\src\\components\\Workshop.jsx":"18","C:\\xampp\\htdocs\\LabEnv\\labenv\\src\\iconPacks\\IconPack.jsx":"19","C:\\xampp\\htdocs\\LabEnv\\labenv\\src\\iconPacks\\MaterialIcons\\MaterialIcons.SVG.jsx":"20","C:\\xampp\\htdocs\\LabEnv\\labenv\\src\\index.js":"21","C:\\xampp\\htdocs\\LabEnv\\labenv\\src\\libraries\\ActionsStack.jsx":"22","C:\\xampp\\htdocs\\LabEnv\\labenv\\src\\libraries\\ActionsStackExtended.jsx":"23","C:\\xampp\\htdocs\\LabEnv\\labenv\\src\\libraries\\Browser.jsx":"24","C:\\xampp\\htdocs\\LabEnv\\labenv\\src\\libraries\\Compression.jsx":"25","C:\\xampp\\htdocs\\LabEnv\\labenv\\src\\libraries\\Cryptography.jsx":"26","C:\\xampp\\htdocs\\LabEnv\\labenv\\src\\libraries\\DataProcessing.jsx":"27","C:\\xampp\\htdocs\\LabEnv\\labenv\\src\\libraries\\Events.jsx":"28","C:\\xampp\\htdocs\\LabEnv\\labenv\\src\\libraries\\IO.jsx":"29","C:\\xampp\\htdocs\\LabEnv\\labenv\\src\\libraries\\MathAdv.jsx":"30","C:\\xampp\\htdocs\\LabEnv\\labenv\\src\\libraries\\MathML.jsx":"31","C:\\xampp\\htdocs\\LabEnv\\labenv\\src\\libraries\\MathParser.jsx":"32","C:\\xampp\\htdocs\\LabEnv\\labenv\\src\\libraries\\MathPatterns.jsx":"33","C:\\xampp\\htdocs\\LabEnv\\labenv\\src\\libraries\\Performancer.jsx":"34","C:\\xampp\\htdocs\\LabEnv\\labenv\\src\\packages\\Jumper\\appState.js":"35","C:\\xampp\\htdocs\\LabEnv\\labenv\\src\\packages\\Jumper\\appStateExtended.js":"36","C:\\xampp\\htdocs\\LabEnv\\labenv\\src\\packages\\Jumper\\components.js":"37","C:\\xampp\\htdocs\\LabEnv\\labenv\\src\\packages\\Jumper\\cryptography.js":"38","C:\\xampp\\htdocs\\LabEnv\\labenv\\src\\packages\\Jumper\\dataProcessing.js":"39","C:\\xampp\\htdocs\\LabEnv\\labenv\\src\\packages\\Jumper\\Jumper.js":"40","C:\\xampp\\htdocs\\LabEnv\\labenv\\src\\packages\\Jumper\\languageDescriptor.js":"41","C:\\xampp\\htdocs\\LabEnv\\labenv\\src\\packages\\Jumper\\models.js":"42","C:\\xampp\\htdocs\\LabEnv\\labenv\\src\\packages\\Jumper\\performance.js":"43","C:\\xampp\\htdocs\\LabEnv\\labenv\\src\\packages\\Jumper\\service.js":"44","C:\\xampp\\htdocs\\LabEnv\\labenv\\src\\reportWebVitals.js":"45","C:\\xampp\\htdocs\\LabEnv\\labenv\\src\\service-worker.js":"46","C:\\xampp\\htdocs\\LabEnv\\labenv\\src\\services\\helpdesk.jsx":"47","C:\\xampp\\htdocs\\LabEnv\\labenv\\src\\services\\latest.jsx":"48","C:\\xampp\\htdocs\\LabEnv\\labenv\\src\\setupTests.js":"49","C:\\xampp\\htdocs\\LabEnv\\labenv\\src\\widgets\\FormulaSearchList.jsx":"50","C:\\xampp\\htdocs\\LabEnv\\labenv\\src\\widgets\\OutputContainer.jsx":"51","C:\\xampp\\htdocs\\LabEnv\\labenv\\src\\widgets\\SearchList.jsx":"52","C:\\xampp\\htdocs\\LabEnv\\labenv\\src\\widgets\\Subwindow.jsx":"53","C:\\xampp\\htdocs\\LabEnv\\labenv\\src\\widgets\\TextViewerConfigurable.jsx":"54","C:\\xampp\\htdocs\\LabEnv\\labenv\\src\\widgets\\UnitsExchanger.jsx":"55"},{"size":3575,"mtime":1609758298437,"results":"56","hashOfConfig":"57"},{"size":246,"mtime":499162500000,"results":"58","hashOfConfig":"57"},{"size":0,"mtime":1606835602289,"results":"59","hashOfConfig":"57"},{"size":739,"mtime":1609229847039,"results":"60","hashOfConfig":"57"},{"size":9544,"mtime":1609347831138,"results":"61","hashOfConfig":"57"},{"size":0,"mtime":1606584975228,"results":"62","hashOfConfig":"57"},{"size":941,"mtime":1607726695193,"results":"63","hashOfConfig":"57"},{"size":0,"mtime":1606083432825,"results":"64","hashOfConfig":"57"},{"size":1095,"mtime":1606084967450,"results":"65","hashOfConfig":"57"},{"size":56,"mtime":1604062748076,"results":"66","hashOfConfig":"57"},{"size":3962,"mtime":1609209766561,"results":"67","hashOfConfig":"57"},{"size":15725,"mtime":1609227379349,"results":"68","hashOfConfig":"57"},{"size":0,"mtime":1605102645392,"results":"69","hashOfConfig":"57"},{"size":548,"mtime":1609758913139,"results":"70","hashOfConfig":"57"},{"size":0,"mtime":1606070230152,"results":"71","hashOfConfig":"57"},{"size":6140,"mtime":1606703049012,"results":"72","hashOfConfig":"57"},{"size":13064,"mtime":1606704506160,"results":"73","hashOfConfig":"57"},{"size":167,"mtime":1604233020445,"results":"74","hashOfConfig":"57"},{"size":2992,"mtime":1607048318480,"results":"75","hashOfConfig":"57"},{"size":1516,"mtime":1606672878331,"results":"76","hashOfConfig":"57"},{"size":973,"mtime":1609769734001,"results":"77","hashOfConfig":"57"},{"size":15764,"mtime":1607072993717,"results":"78","hashOfConfig":"57"},{"size":31231,"mtime":1607070912403,"results":"79","hashOfConfig":"57"},{"size":5868,"mtime":1606806205438,"results":"80","hashOfConfig":"57"},{"size":2869,"mtime":1606586669455,"results":"81","hashOfConfig":"57"},{"size":799,"mtime":1604414760075,"results":"82","hashOfConfig":"57"},{"size":443,"mtime":1605055587037,"results":"83","hashOfConfig":"57"},{"size":4358,"mtime":1608776175147,"results":"84","hashOfConfig":"57"},{"size":874,"mtime":1604572559410,"results":"85","hashOfConfig":"57"},{"size":7670,"mtime":1607608413161,"results":"86","hashOfConfig":"57"},{"size":0,"mtime":1604689194914,"results":"87","hashOfConfig":"57"},{"size":11601,"mtime":1607611372318,"results":"88","hashOfConfig":"57"},{"size":6702,"mtime":1606049172224,"results":"89","hashOfConfig":"57"},{"size":411,"mtime":1604363264741,"results":"90","hashOfConfig":"57"},{"size":21100,"mtime":1609653605534,"results":"91","hashOfConfig":"57"},{"size":37444,"mtime":1609331851810,"results":"92","hashOfConfig":"57"},{"size":18918,"mtime":1608859517644,"results":"93","hashOfConfig":"57"},{"size":803,"mtime":1607610945833,"results":"94","hashOfConfig":"57"},{"size":7612,"mtime":1608910389034,"results":"95","hashOfConfig":"57"},{"size":21622,"mtime":1609760142919,"results":"96","hashOfConfig":"57"},{"size":2021,"mtime":1607617760928,"results":"97","hashOfConfig":"57"},{"size":2968,"mtime":1609759117768,"results":"98","hashOfConfig":"57"},{"size":0,"mtime":1609208911990,"results":"99","hashOfConfig":"57"},{"size":4563,"mtime":1609760146839,"results":"100","hashOfConfig":"57"},{"size":362,"mtime":499162500000,"results":"101","hashOfConfig":"57"},{"size":0,"mtime":1607726816087,"results":"102","hashOfConfig":"57"},{"size":0,"mtime":1609653727265,"results":"103","hashOfConfig":"57"},{"size":209,"mtime":1609760161006,"results":"104","hashOfConfig":"57"},{"size":241,"mtime":499162500000,"results":"105","hashOfConfig":"57"},{"size":1546,"mtime":1605926206713,"results":"106","hashOfConfig":"57"},{"size":488,"mtime":1606691956365,"results":"107","hashOfConfig":"57"},{"size":4998,"mtime":1608790343569,"results":"108","hashOfConfig":"57"},{"size":3717,"mtime":1606815762042,"results":"109","hashOfConfig":"57"},{"size":3542,"mtime":1606504050547,"results":"110","hashOfConfig":"57"},{"size":14411,"mtime":1609023624499,"results":"111","hashOfConfig":"57"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114"},"1bi89w4",{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":3,"source":"165"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":33,"fixableErrorCount":0,"fixableWarningCount":3,"source":"168"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":2,"source":"171"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"185","messages":"186","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":1,"source":"187"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":2,"source":"195"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"198","messages":"199","errorCount":0,"warningCount":36,"fixableErrorCount":0,"fixableWarningCount":2,"source":"200"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":42,"fixableErrorCount":0,"fixableWarningCount":2,"source":"203"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":95,"fixableErrorCount":0,"fixableWarningCount":1,"source":"206"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":2,"source":"215"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"224","messages":"225","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"239","messages":"240","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"250","messages":"251","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252"},"C:\\xampp\\htdocs\\LabEnv\\labenv\\src\\App.js",["253","254","255","256","257"],"import React, {Component} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { Link, Route, Switch, NavLink } from 'react-router-dom';\nimport MathAdv from './libraries/MathAdv';\nimport Laboratory from './components/Labolatory/Labolatory';\nimport Workshop from './components/Workshop';\nimport Symbols from './components/Symbols/Symbols';\nimport SymbolView from './components/Symbols/SymbolView';\nimport Exchanger from './components/Exchanger/Exchanger';\nimport Calc from './components/Calc/Calc';\nimport { NewsPostPage } from './components/News/news';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  toggleNavbarMenu(ev) {\n    let hamburger = ev.currentTarget.children[0], navbarMenu = document.getElementById(\"navbar-container\");\n    console.log(navbarMenu);\n    if(navbarMenu.classList.contains(\"active\")) { navbarMenu.classList.remove(\"active\"); hamburger.classList.remove(\"cross\"); } else { navbarMenu.classList.add(\"active\"); hamburger.classList.add(\"cross\"); } \n  }\n\n  render() {\n  return (\n    <div id=\"container\">\n      <nav id=\"navbar\">\n        <div className=\"navbar-inside\">\n          <div className=\"menu-toggle\" onClick={(ev)=>this.toggleNavbarMenu(ev)}>\n            <div className=\"hamburger\">\n              <span></span>\n              <span></span>\n              <span></span>\n            </div>\n            <div className=\"cross\">\n              <span></span>\n              <span></span>\n            </div>\n          </div>\n          <span className=\"vl desktop\"></span>\n          <h4 className=\"desktop\">MathEnv</h4>\n          <span className=\"righty\" title=\"Przybornik\">&#x2692;</span>\n        </div>\n      </nav>\n      <div className=\"container-inside\">\n      <div id=\"navbar-container\" className=\"navbar-menu scrollableContainerThin\">\n          <ul>\n            <div className=\"header-separator\"><h3>Zawartość</h3></div>\n            <Link to=\"/news\">Aktualności</Link>\n            <Link to=\"/learn\">Nauka</Link>\n            <Link to=\"/communityTasks\">Zadania społeczności</Link>\n            <hr/>\n            <div className=\"header-separator\"><h3>Moduły</h3></div>\n            <Link to=\"/\">Labolatorium</Link>\n            <Link to=\"/unitsExchanger\">Zmiana jednostek</Link>\n            <Link to=\"/matrices\">Macierze</Link>\n            <Link to=\"/workshop\">Wizualizator funkcji</Link>\n            <Link to=\"/calc\">MathEnv Calc (Beta)</Link>\n            <hr/>\n            <div className=\"header-separator\"><h3>Narzędzia</h3></div>\n            <Link to=\"/symbols\">Symbole</Link>\n            <hr/>\n            <div className=\"header-separator\"><h3>Inne</h3></div>\n            <Link to=\"/chem\">&#129514; Lab. Chemiczne</Link>\n            <a>Zarządzaj modułami</a>\n          </ul>\n        </div>\n        <div className=\"main-wrapper scrollableContainer\">\n      <Switch>\n        <Route path=\"/\" component={Laboratory} exact />\n        <Route path=\"/news/:post?\" component={NewsPostPage} />\n        <Route path=\"/symbols/:category?/:subcategory?\" exact component={Symbols} />\n        <Route path=\"/symbols/:category/:subcategory/:id\" exact component={SymbolView} />\n        <Route path=\"/unitsExchanger\" component={Exchanger} />\n        <Route path=\"/calc\" component={Calc} />\n        <Route path=\"/workshop\" component={Workshop} />\n        <Route path=\"/formulas\" component={Workshop} />\n      </Switch>\n      <footer id=\"foot\">\n          <section id=\"author\">\n              Grano22 Dev &copy; 2020\n          </section>\n      </footer>\n      </div>\n      </div>\n    </div>\n  );\n  }\n}\n\nexport default App;","C:\\xampp\\htdocs\\LabEnv\\labenv\\src\\App.test.js",[],"C:\\xampp\\htdocs\\LabEnv\\labenv\\src\\components\\AlgebraComposer\\AlgebraComposer.jsx",[],"C:\\xampp\\htdocs\\LabEnv\\labenv\\src\\components\\Calc\\Calc.actions.jsx",["258"],"import { ActionOperation, ActionResumeOperation, TemponaryActionOperation } from 'jumper/appStateExtended';\r\n\r\nexport class CalcValueCellPreparation extends TemponaryActionOperation {\r\n\r\n}\r\n\r\nexport class CalcRowInsert extends ActionOperation {\r\n    onStore(component, inputData) {\r\n        //if(component.currDocument.dimensionY<=0) component.currDocument.dimension;\r\n        component.currDocument.dimensionX += inputData.count;\r\n        return {  };\r\n    }\r\n}\r\n\r\nexport class CalcColumnInsert extends ActionOperation {\r\n    onStore(component, inputData) {\r\n        //if(component.currDocument.dimensionY<=0) component.currDocument.dimension;\r\n        component.currDocument.dimensionY += inputData.count;\r\n        return {  };\r\n    }\r\n}","C:\\xampp\\htdocs\\LabEnv\\labenv\\src\\components\\Calc\\Calc.jsx",["259","260","261","262","263","264","265","266","267","268","269","270","271"],"import React, { Component } from 'react';\r\nimport './Calc.css';\r\nimport { ActionsStack } from 'jumper/appStateExtended';\r\nimport { CalcValueCellPreparation,\r\n    CalcRowInsert,\r\n    CalcColumnInsert } from './Calc.actions';\r\n\r\nclass MathEnvCalcDocument {\r\n    title = \"Sheet\";\r\n    lastSelectedCell = [0, 0];\r\n    currSelected = [0, 0];\r\n    cells = {};\r\n    dimensionX = 0;\r\n    dimensionY = 0;\r\n\r\n    component = null;\r\n\r\n    constructor(component, assocObj={}) {\r\n        this.component = component;\r\n        for(let assocProp in assocObj) {\r\n            switch(assocProp) {\r\n                case \"title\":\r\n                    if(typeof assocObj[assocProp]==\"string\") this.title = assocObj[assocProp];\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    from() {\r\n        \r\n    }\r\n\r\n    get dimension() {\r\n        if(this.dimensionX>0 && this.dimensionY>0) {\r\n            return [this.dimensionY, this.dimensionX];\r\n        } else if(Object.keys(this.cells).length>0) {\r\n            let mx = 16, my = 36;\r\n            for(let cellInd in this.cells) { if(!isNaN(parseInt(cellInd))) { for(let cellPosInd in this.cells[cellInd]) { if(!isNaN(parseInt(cellPosInd))) { mx = Math.max(mx, this.cells[cellInd][cellPosInd].posX); my = Math.max(my, this.cells[cellInd][cellPosInd].posY); } } } } \r\n            this.dimensionX = my; this.dimensionY = mx;\r\n        } else { this.dimensionX = 36; this.dimensionY = 16; return [16, 36]; }\r\n    }\r\n\r\n    getLetterPosition() {\r\n\r\n    }\r\n\r\n    onCellClearSelection(doc) {\r\n        let selEls = document.getElementsByClassName(\"mathEnv-cell\");\r\n        let currSel = selEls[((this.dimension[1] * (doc.currSelected[1] - 1)) - 1) + doc.currSelected[0]];\r\n        if(currSel.children[0].contentEditable) currSel.children[0].contentEditable = false;\r\n        doc.currSelected = [0, 0];\r\n        currSel.classList.remove(\"selected\");\r\n        let mathFormulaBar = document.getElementById(\"mathEnvCalc-formula\");\r\n        mathFormulaBar.value = \"\";\r\n        mathFormulaBar.disabled = true;\r\n    }\r\n\r\n    /*generateGridTemplate() {\r\n        const wnm = 27;\r\n        let total = this.dimension, gridOutput = [], gridRows = [];\r\n        for(let posy = 0;posy<=total[0];posy++) {\r\n            for(let posx = 0;posx<=total[1];posx++) {\r\n                if(posy==0 && posx==0) {\r\n                    gridRows.push(<th>0</th>);\r\n                } else if(posy==0) {\r\n                    let charLiteral = \"A\".repeat(Math.floor(posx/wnm))+(posx<wnm ? String.fromCharCode(posx + 64) : String.fromCharCode(posx - (Math.floor(posx/wnm) * wnm) + 65));\r\n                    gridRows.push(<th className=\"horizontaly\">{charLiteral}</th>);\r\n\r\n                } else if(posx==0) {\r\n                    gridRows.push(<th>{posy}</th>);\r\n                } else {\r\n                    if(typeof this.cells[posy]==\"object\" && typeof this.cells[posy][posx]!=\"undefined\") {\r\n                        gridRows.push(<td>{this.cells[posy][posx].value}</td>);\r\n                    } else gridRows.push(<td></td>);\r\n                }\r\n            }\r\n            gridOutput.push(<tr>{gridRows}</tr>);\r\n            gridRows = [];\r\n        }\r\n        return (<table>{gridOutput}</table>);\r\n    }*/\r\n\r\n    onCellSelect(evt, doc) {\r\n        const wnm = 27;\r\n        let carEl = evt.currentTarget, tgX = parseInt(carEl.getAttribute(\"data-posx\")), tgY = parseInt(carEl.getAttribute(\"data-posy\"));\r\n        if(doc.currSelected[0] != tgX || doc.currSelected[1] != tgY) {\r\n            if(doc.currSelected[0]>0 && doc.currSelected[1]>0) {\r\n                this.onCellClearSelection(doc);\r\n            }\r\n            doc.currSelected = [tgX, tgY];\r\n            doc.lastSelectedCell = doc.currSelected;\r\n            document.getElementById(\"mathEnvCalc-currCell\").value = \"A\".repeat(Math.floor(tgX/wnm))+(tgX<wnm ? String.fromCharCode(tgX + 64) : String.fromCharCode(tgX - (Math.floor(tgX/wnm) * wnm) + 65)) + tgY;\r\n            carEl.classList.add(\"selected\");\r\n            let mathFormulaBar = document.getElementById(\"mathEnvCalc-formula\");\r\n            mathFormulaBar.value = carEl.children[0].textContent;\r\n            mathFormulaBar.disabled = false;\r\n            if(tgX>=doc.dimensionX && tgY>=doc.dimensionY) {\r\n                this.component.actions.addOperations([\r\n                    { operation:new CalcColumnInsert(), inputData:{ count:1 } },\r\n                    { operation:new CalcRowInsert(), inputData:{ count:1 } }\r\n                ]);\r\n            } else if(tgX>=doc.dimensionX) {\r\n                this.component.actions.addOperation(new CalcRowInsert(), { count:1 });\r\n            } else if(tgY>=doc.dimensionY) {\r\n                this.component.actions.addOperation(new CalcColumnInsert(), { count:1 });\r\n            }\r\n        }\r\n    }\r\n\r\n    onCellFocus(evt) {\r\n        let carEl = evt.currentTarget;\r\n        if(carEl.children[0].contentEditable==\"true\" && !carEl.children[0].contentEditable) carEl.children[0].contentEditable = \"false\"; else { carEl.children[0].contentEditable = \"true\"; carEl.children[0].focus(); } \r\n    }\r\n\r\n    onCellsRangeSelect() {\r\n\r\n    }\r\n\r\n    generateGrid() {\r\n        let self = this;\r\n        const wnm = 27;\r\n        let total = this.dimension, gridOutput = [], gridRows = [], thead = [], tbody = [];\r\n        //thead\r\n        for(let posy = 0;posy<=total[0];posy++) {\r\n            if(posy==0) {\r\n                gridRows.push(<tr><th><span className=\"halfTriangle\"></span></th></tr>);\r\n            } else gridRows.push(<tr><th>{posy}</th></tr>);\r\n        }\r\n        gridRows.push(<tr><th className=\"separator\"></th></tr>);\r\n        thead.push(gridRows);\r\n        gridRows = [];\r\n        //tbody\r\n        for(let posy = 0;posy<=total[0];posy++) {\r\n            for(let posx = 1;posx<=total[1];posx++) {\r\n                if(posy==0) {\r\n                    let charLiteral = \"A\".repeat(Math.floor(posx/wnm))+(posx<wnm ? String.fromCharCode(posx + 64) : String.fromCharCode(posx - (Math.floor(posx/wnm) * wnm) + 65));\r\n                    gridRows.push(<th className=\"horizontaly\">{charLiteral}</th>);\r\n                } else {\r\n                    if(typeof this.cells[posy]==\"object\" && typeof this.cells[posy][posx]!=\"undefined\") {\r\n                        gridRows.push(<td className=\"mathEnv-cell\" onClick={ev=>this.onCellSelect(ev, this)} onDoubleClick={ev=>this.onCellFocus(ev)} data-posx={posx} data-posy={posy} ><var contentEditable={false}>{this.cells[posy][posx].value}</var><span className=\"mathEnv-cellCorner\"></span></td>);\r\n                    } else gridRows.push(<td className=\"mathEnv-cell\" onClick={ev=>this.onCellSelect(ev, this)} onDoubleClick={ev=>this.onCellFocus(ev)} data-posx={posx} data-posy={posy} ><var contentEditable={false}></var><span className=\"mathEnv-cellCorner\"></span></td>);\r\n                }\r\n            }\r\n            gridOutput.push(<tr>{gridRows}</tr>);\r\n            gridRows = [];\r\n        }\r\n        tbody.push(gridOutput);\r\n        return (<table><thead>{thead}</thead><tbody>{tbody}</tbody></table>);\r\n    }\r\n}\r\n\r\nclass MathEnvCalcCell {\r\n    _value = null;\r\n    posX = 0;\r\n    posY = 0;\r\n\r\n    set value(val) {\r\n\r\n    }\r\n    get value() {\r\n\r\n    }\r\n\r\n    toString() {\r\n\r\n    }\r\n\r\n    valueOf() {\r\n\r\n    }\r\n}\r\n\r\nexport default class Calc extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        let self = this;\r\n        this.state = {\r\n            currentMenu:\"\"\r\n        }\r\n        this.actions = new ActionsStack(this, [\r\n            CalcRowInsert,\r\n            CalcColumnInsert\r\n        ], { loadResumeable:false });\r\n        let lastData = this.actions.restoreComponentProp(\"currDocument\");\r\n        this.currDocument = lastData!=null ? new MathEnvCalcDocument(this, lastData) : new MathEnvCalcDocument(this, { title:props.title });\r\n        this.actions.addEventListener(\"beforeunload\", function() {\r\n            this.saveComponentProp(\"currDocument\");\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.actions.restoreStacksSessions();\r\n    }\r\n\r\n    menu() {\r\n        switch(this.state.currentMenu) {\r\n            case \"doc\":\r\n\r\n            break;\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let self = this;\r\n        \r\n        return (<>\r\n            <nav id=\"mathEnvCalc-top\"><section><h4>Calc</h4><span className=\"hl\"></span></section><section className=\"navCenter\">{self.currDocument.title}</section><section></section></nav>\r\n            <header id=\"mathEnvCalc-menu\">\r\n                <section id=\"mathEnvCalc-menuCat\">\r\n                    <div className=\"mathEnvCalc-catItem\">Dokument</div>\r\n                    <div className=\"mathEnvCalc-catItem\">Formatowanie</div>\r\n                    <div className=\"mathEnvCalc-catItem\">Wstaw</div>\r\n                    <div className=\"mathEnvCalc-catItem\">Automatyzacja</div>\r\n                    <div className=\"mathEnvCalc-catItem\">Pomoc</div>\r\n                </section>\r\n                <section id=\"mathEnvCalc-menuContent\">\r\n\r\n                </section>\r\n            </header>\r\n            <div className=\"appSingle\">\r\n                <section id=\"mathEnvCalc-formulaBar\"><aside><input id=\"mathEnvCalc-currCell\" type=\"text\" placeholder=\"Komórka\" disabled/></aside><section id=\"mathEnvCalc-formulaSection\"><button id=\"mathEnvCalc-funcBtn\">f(x)</button><input id=\"mathEnvCalc-formula\" type=\"text\" disabled/></section></section>\r\n                <section id=\"mathEnvCalc-gridContainer\">\r\n                    {this.currDocument.generateGrid()}\r\n                </section>\r\n                <footer></footer>\r\n            </div>\r\n        </>);\r\n    }\r\n}","C:\\xampp\\htdocs\\LabEnv\\labenv\\src\\components\\Converter\\Converter.jsx",[],"C:\\xampp\\htdocs\\LabEnv\\labenv\\src\\components\\Exchanger\\Exchanger.jsx",["272"],"import React, {Component} from 'react';\r\nimport Jumper from 'jumper';\r\nimport UnitsExchangerWidget from '../../widgets/UnitsExchanger';\r\nimport LanguageDescriptor from 'jumper/languageDescriptor';\r\nimport CurrentComponentLangDescriptor from './Exchanger.langs.json';\r\nconst currLangDictonary = new LanguageDescriptor(CurrentComponentLangDescriptor);\r\n\r\nexport default class Exchanger extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            title:currLangDictonary.getEntry(\"title\").t\r\n        }\r\n    }\r\n\r\n    outputTypeChange(ev) {\r\n\r\n    }\r\n\r\n    render() {        \r\n        return (<>\r\n            <header className=\"wide\">\r\n                <h1>{this.state.title}</h1>\r\n            </header>\r\n            <div className=\"appSingle\">\r\n                <div className=\"in\">\r\n                    <UnitsExchangerWidget />\r\n                </div>\r\n            </div>\r\n            </>);\r\n    }\r\n}","C:\\xampp\\htdocs\\LabEnv\\labenv\\src\\components\\Formulas\\Formulas.actions.jsx",[],"C:\\xampp\\htdocs\\LabEnv\\labenv\\src\\components\\Formulas\\Formulas.jsx",[],"C:\\xampp\\htdocs\\LabEnv\\labenv\\src\\components\\index.jsx",["273"],"const { default: Labolatory } = require(\"./Labolatory\");","C:\\xampp\\htdocs\\LabEnv\\labenv\\src\\components\\Labolatory\\Labolatory.actions.jsx",["274","275"],"import { ActionsStack, ActionOperation, ActionResumeOperation } from 'jumper/appStateExtended';\r\n\r\nexport class CreateSampleLaboratoryAction extends ActionResumeOperation {\r\n    name = \"User created a laboratory sample\";\r\n    description = \"This action creates a laboratory sample\";\r\n\r\n    onStore(component, inputData) {\r\n        component.samplesList.createSample(inputData.value);\r\n        component.mathPatterns.updateAll(component.samplesList.toArray());\r\n        return {};\r\n    }\r\n\r\n    onResume(component, inputData) {\r\n        console.log(\"reworked!\");\r\n    }\r\n\r\n    onRestore(component, inputData) {\r\n\r\n    }\r\n}\r\n\r\nexport class DeleteSampleLaboratoryAction extends ActionResumeOperation {\r\n    name = \"User deleted a laboratory sample\";\r\n    description = \"User deleted a laboratory sample\";\r\n\r\n    onStore(component, inputData, outputData) {\r\n        component.samplesList.deleteSample(inputData.listID);\r\n        component.mathPatterns.updateAll(component.samplesList.toArray());\r\n    }\r\n\r\n    onResume() {\r\n\r\n    }\r\n\r\n    onRestore(component, inputData) {\r\n\r\n    }\r\n}\r\n\r\nexport class ChangeLaboratorySamplePositionIndex extends ActionResumeOperation {\r\n    name = \"Laboratory sample index position is #{newIndex}\";\r\n    description = \"User changed a laboratory sample index position to #{newIndex}\";\r\n\r\n    onStore(component, inputData, outputData) {\r\n        this.outputData.newIndex = component.samplesList.changeSampleIndex(inputData.lastIndex, inputData.newIndex);\r\n        return {};\r\n    }\r\n\r\n    onResume() {\r\n\r\n    }\r\n\r\n    onRestore(component, inputData) {\r\n        component.samplesList.changeSampleIndex(inputData.lastIndex, inputData.nextIndex);\r\n    }\r\n}\r\n\r\nexport class RandomizeLaboratorySampleItems extends ActionResumeOperation {\r\n    name = \"Laboratory samples randomized to values #{randomizedValues}\";\r\n    description = \"\";\r\n\r\n    onStore(component, inputData) {\r\n        component.samplesList.randomizeSamples(inputData.fromValue, inputData.toValue, inputData.minItems, inputData.maxItems);\r\n        component.mathPatterns.updateAll(component.samplesList.toArray());\r\n    }\r\n}\r\n\r\nexport class SortByIndexes extends ActionResumeOperation {\r\n    name = \"User sorted smaples by their indexes\";\r\n    description = \"\";\r\n\r\n    onStore(component) {\r\n        component.samplesList.sortByIndexes();\r\n    }\r\n}\r\n\r\nexport class PrepareItemsIndexesToPositions extends ActionResumeOperation {\r\n    name = \"User changed samples indexes to positions\";\r\n    description = \"\";\r\n\r\n    onStore(component) {\r\n        component.samplesList.setPositionsToIndexes();\r\n    }\r\n}\r\n\r\nexport class ImportSamplesItems extends ActionResumeOperation {\r\n    name = \"User imported a samples\";\r\n    description = \"\";\r\n\r\n    onStore(component, inputData) {\r\n        component.samplesList.toImportData(inputData.fileType, inputData.fileResource);\r\n    }\r\n\r\n    onResume() {\r\n        \r\n    }\r\n}\r\n\r\nexport class SelectOutputTypeToAdd extends ActionResumeOperation {\r\n    name = \"User added a output data type #{type}\";\r\n    description = \"User added a output data type to set\";\r\n\r\n    onStore(component, inputData) {\r\n        component.mathPatterns.createDataset(inputData.selectedFormula, component.samplesList.toArray());\r\n        console.log(component.mathPatterns);\r\n        return { type:inputData.selectedFormula };\r\n    }\r\n\r\n    onResume() {\r\n        console.log(\"reworked!\");\r\n    }\r\n\r\n    onFlush() {\r\n\r\n    }\r\n}\r\n\r\nexport class ChangeOutputLaboratorySamplePosition extends ActionResumeOperation {\r\n    name = \"User changed an output data index to #{newIndex}\";\r\n    description = \"\"\r\n\r\n    onStore(component, inputData) {\r\n        component.mathPatterns.changeIndex(inputData.lastIndex, inputData.newIndex);\r\n    }\r\n}\r\n\r\nexport class DeleteOutput extends ActionResumeOperation {\r\n    name = \"User deleted an output\";\r\n    description = \"\";\r\n\r\n    onStore(component, inputData) {\r\n        component.mathPatterns.deleteDataset(inputData.lastIndex);\r\n    }\r\n}","C:\\xampp\\htdocs\\LabEnv\\labenv\\src\\components\\Labolatory\\Labolatory.jsx",[],"C:\\xampp\\htdocs\\LabEnv\\labenv\\src\\components\\Labolatory\\Laboratory.errors.jsx",[],"C:\\xampp\\htdocs\\LabEnv\\labenv\\src\\components\\News\\news.jsx",[],"C:\\xampp\\htdocs\\LabEnv\\labenv\\src\\components\\Symbols\\Symbols.actions.jsx",[],"C:\\xampp\\htdocs\\LabEnv\\labenv\\src\\components\\Symbols\\Symbols.jsx",[],"C:\\xampp\\htdocs\\LabEnv\\labenv\\src\\components\\Symbols\\SymbolView.jsx",["276","277","278","279"],"import React, {Component} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport * as MaterialIcons from '../../iconPacks/MaterialIcons/MaterialIcons.SVG';\r\nimport OutputContainer from '../../widgets/OutputContainer';\r\nimport TextViewerConfigurable from '../../widgets/TextViewerConfigurable';\r\nimport { FloatingContainerEvent, FloatingContainerNextToEvent, FloatingContainerCurrentEvent } from '../../libraries/Events';\r\nimport JumperBrowser from '../../libraries/Browser';\r\nimport MathSymbolsEntries from '../../data/MathSymbols';\r\nimport { UTF8ToHex, UTF8ToBin } from '../../libraries/Compression';\r\nimport { ShareSubwindow } from '../../widgets/Subwindow';\r\n\r\nconst currLanguage = JumperBrowser.language.substring(0, 2);\r\n\r\nclass CopySmallButton extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        if(typeof props.copyTarget!=\"undefined\") this.copyTarget = props.copyTarget; else this.copyTarget = \"\";\r\n        this.state = {\r\n            status:0\r\n        }\r\n    }\r\n\r\n    onClick(ev) {\r\n        if(this.setState.status>0) return false;\r\n        console.log(this.copyTarget.toString());\r\n        JumperBrowser.clipboard.copy(this.copyTarget);\r\n        this.setState({status:1});\r\n        setTimeout(()=>{\r\n            this.setState({status:0});\r\n        }, 1000);\r\n    }\r\n\r\n    render() {\r\n        const ClipboardCopyIcon = this.state.status<=0 ? (<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"black\" width=\"18px\" height=\"18px\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm3 4H8c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h11c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2zm0 16H8V7h11v14z\"/></svg>) : (<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"black\" width=\"18px\" height=\"18px\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M9 16.2L4.8 12l-1.4 1.4L9 19 21 7l-1.4-1.4L9 16.2z\"/></svg>)\r\n        return (<span onClick={(ev)=>this.onClick(ev)}>{ClipboardCopyIcon}</span>)\r\n    }\r\n}\r\n\r\nexport default class Symbols extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            title:{ en:\"Cannot find char\", pl:\"Cannot find char\", \"pl-PL\":\"Cannot find char\" },\r\n            selectedSymbol:null,\r\n            filtetedOutput:[]\r\n        }\r\n        this.technicalOutput = React.createRef();\r\n        this.codingOutput = React.createRef();\r\n        this.sourceOutput = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(this.props.match.params) {\r\n            try {\r\n                console.log(this.props.match.params);\r\n                let routingParams = this.props.match.params, goalSymbol = this.getCharEntry(decodeURI(routingParams.category), decodeURI(routingParams.subcategory), decodeURI(routingParams.id));\r\n                console.log(goalSymbol.name[currLanguage]);\r\n                if(goalSymbol) this.setState({ selectedSymbol:goalSymbol, title:goalSymbol.name });\r\n            } catch(RoutingError) {\r\n                console.error(RoutingError);\r\n            }\r\n        }\r\n    }\r\n\r\n    getCharEntry(category, subcategory, charPos) {\r\n        switch(category) {\r\n            case \"mathCategory\":\r\n                for(let mathEntry of MathSymbolsEntries.list) {\r\n                    if(mathEntry.unicodePoint==charPos) {\r\n                        return mathEntry;\r\n                    }\r\n                }\r\n            break;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    render() {\r\n        let self = this;\r\n        console.log(self.state);\r\n        if(self.state.selectedSymbol==null || !self.state.selectedSymbol) {\r\n            return (<div className=\"in\">\r\n            Nie znaleziono\r\n        </div>);\r\n        } else {\r\n        var technicalDescriptions = [\r\n            { id:\"sign\", title:{ en:\"Symbol/Sign\", pl:\"Symbol/Znak\" }, baseValue: self.state.selectedSymbol.char },\r\n            { id:\"fullName\", title:{ en:\"Full name\", pl:\"Pełna nazwa\" }, baseValue: self.state.selectedSymbol.name[currLanguage] },\r\n            { id:\"otherNames\", title:{ en:\"Other names\", pl:\"Inne nazwy\" }, baseValue: self.state.selectedSymbol.synonyms && Array.isArray(self.state.selectedSymbol.synonyms[currLanguage]) ? self.state.selectedSymbol.synonyms[currLanguage].join(\",\") : \"Brak\" },\r\n            { id:\"unicodeNr\", title:{ en:\"Unicode nr\", pl:\"Numer Unicode\" }, baseValue: self.state.selectedSymbol.unicodePoint },\r\n            { id:\"category\", title:{ en:\"Category\", pl:\"Kategoria\" }, baseValue: self.state.selectedSymbol.category },\r\n            { id:\"type\", title:{ en:\"Type\", pl:\"Typ\" }, baseValue: self.state.selectedSymbol[self.state.selectedSymbol.subcategoryName] }\r\n        ],\r\n        codingDescriptions = [\r\n            { id:\"entityName\", title:{ en:\"HTML Entity (Name)\", pl:\"HTML Entity (Nazwa)\" }, baseValue: self.state.selectedSymbol.htmlEntityName ? self.state.selectedSymbol.htmlEntityName : \"Brak\" },\r\n            { id:\"entityHex\", title:{ en:\"HTML Entity (Hex)\", pl:\"HTML Entity (Kod szesnastkowy)\" }, baseValue: self.state.selectedSymbol.htmlEntityHexCodes.join(\",\") },\r\n            { id:\"entityDecimal\", title:{ en:\"HTML Entity (Decimal)\", pl:\"HTML Entity (Kod dziesiętny)\" }, baseValue: self.state.selectedSymbol.htmlEntityDecimalCodes.join(\",\") },\r\n            { id:\"urlEscape\", title:{ en:\"URL Escape\", pl:\"URL Escape\" }, baseValue: encodeURIComponent(self.state.selectedSymbol.char) },\r\n            { id:\"utf8Hex\", title:{ en:\"UTF-8 (Hex)\", pl:\"UTF-8 (Kod szesnastkowy)\" }, baseValue: UTF8ToHex(self.state.selectedSymbol.char) },\r\n            { id:\"utf8Bin\", title:{ en:\"UTF-8 (Binary)\", pl:\"UTF-8 (Binarny)\" }, baseValue: UTF8ToBin(self.state.selectedSymbol.char).map(v=>v.toString(\"2\")).join(\":\") }\r\n        ],\r\n        sourceCodeDescriptions = [\r\n            { id:\"cssSource\", title:{ en:\"CSS\", pl:\"CSS\" }, baseValue: `\\\\${self.state.selectedSymbol.unicodePoint.replace(\"U+\", \"\")}` },\r\n            { id:\"cSource\", title:{ en:\"C, C++\", pl:\"C, C++\" }, baseValue: `\"\\\\u${self.state.selectedSymbol.unicodePoint.replace(\"U+\", \"\")}\"` },\r\n            { id:\"c#Source\", title:{ en:\"C#\", pl:\"C#\" }, baseValue: `@\"\\\\u${self.state.selectedSymbol.unicodePoint.replace(\"U+\", \"\")}\"` },\r\n            { id:\"jsSource\", title:{ en:\"Javascript\", pl:\"Javascript\" }, baseValue: `\"\\\\u${self.state.selectedSymbol.unicodePoint.replace(\"U+\", \"\")}\"` },\r\n            { id:\"perlSource\", title:{ en:\"Perl\", pl:\"Perl\" }, baseValue: `\\\\x{${self.state.selectedSymbol.unicodePoint.replace(\"U+\", \"\")}}` },\r\n            { id:\"python2Source\", title:{ en:\"Python 2\", pl:\"Python 2\" }, baseValue: `u\"\\\\u${self.state.selectedSymbol.unicodePoint.replace(\"U+\", \"\")}\"` },\r\n            { id:\"python3Source\", title:{ en:\"Python 3\", pl:\"Python 3\" }, baseValue: `\\\\u${self.state.selectedSymbol.unicodePoint.replace(\"U+\", \"\")}` },\r\n            { id:\"rubySource\", title:{ en:\"Ruby\", pl:\"Ruby\" }, baseValue: `\\\\u{${self.state.selectedSymbol.unicodePoint.replace(\"U+\", \"\")}}` },\r\n        ];\r\n        function DescriptorGenerator(currDescriptor) {\r\n            let finalElements = [];\r\n            for(let i = 0;i<currDescriptor.length;i++) {\r\n                currDescriptor[i] = Object.assign({ title:{ en:\"Untitled\", pl:\"Bez tytułu\", \"pl-PL\":\"Bez tytułu\" }, baseValue:\"\", copyValue:null }, currDescriptor[i]);\r\n                currDescriptor[i].title[\"pl-PL\"] = currDescriptor[i].title.pl;\r\n                currDescriptor[i].title[\"en-US\"] = currDescriptor[i].title.en;\r\n                if(currDescriptor[i].copyValue==null) currDescriptor[i].copyValue = currDescriptor[i].baseValue;\r\n                if(!self.state.filtetedOutput.includes(currDescriptor[i].id)) finalElements.push((<div className=\"rowItem\"><strong>{currDescriptor[i].title[currLanguage]}</strong>: {currDescriptor[i].baseValue} {(<div className=\"rowOptions\"><CopySmallButton copyTarget={currDescriptor[i].copyValue}/></div>)}</div>));\r\n            }\r\n            return finalElements;\r\n        }\r\n        const checkBoxesTechnicalDescriptors = technicalDescriptions.map((v, ind)=>(<label className=\"checkboxContainer\">{v.title[currLanguage]}\r\n            <input type=\"checkbox\" key={ind} value={v.id} onChange={evt=>{\r\n                let currCheckbox = evt.currentTarget, indicator = self.state.filtetedOutput.indexOf(currCheckbox.value);\r\n                if(currCheckbox.checked) { if(indicator>-1) self.state.filtetedOutput.splice(indicator, 1); } else self.state.filtetedOutput.push(currCheckbox.value);\r\n                self.technicalOutput.setState({ dynamicalContent:DescriptorGenerator(technicalDescriptions) });\r\n            }} defaultChecked={this.state.filtetedOutput.includes(v.id) ? \"\" : \"checked\"}/>\r\n            <span className=\"checkmark\"></span>\r\n        </label>));\r\n        const checkBoxesCodingDescriptors = codingDescriptions.map((v, ind)=>(<label className=\"checkboxContainer\">{v.title[currLanguage]}\r\n            <input type=\"checkbox\" key={ind} value={v.id} onChange={evt=>{\r\n                let currCheckbox = evt.currentTarget, indicator = self.state.filtetedOutput.indexOf(currCheckbox.value);\r\n                if(currCheckbox.checked) { if(indicator>-1) self.state.filtetedOutput.splice(indicator, 1); } else self.state.filtetedOutput.push(currCheckbox.value);\r\n                self.codingOutput.setState({ dynamicalContent:DescriptorGenerator(codingDescriptions) });\r\n            }} defaultChecked={this.state.filtetedOutput.includes(v.id) ? \"\" : \"checked\"}/>\r\n            <span className=\"checkmark\"></span>\r\n        </label>)); \r\n        const checkBoxesSourceDescriptors = sourceCodeDescriptions.map((v, ind)=>(<label className=\"checkboxContainer\">{v.title[currLanguage]}\r\n            <input type=\"checkbox\" key={ind} value={v.id} onChange={evt=>{\r\n                let currCheckbox = evt.currentTarget, indicator = self.state.filtetedOutput.indexOf(currCheckbox.value);\r\n                if(currCheckbox.checked) { if(indicator>-1) self.state.filtetedOutput.splice(indicator, 1); } else self.state.filtetedOutput.push(currCheckbox.value);\r\n                self.sourceOutput.setState({ dynamicalContent:DescriptorGenerator(sourceCodeDescriptions) });\r\n            }} defaultChecked={this.state.filtetedOutput.includes(v.id) ? \"\" : \"checked\"}/>\r\n            <span className=\"checkmark\"></span>\r\n        </label>));\r\n        return (<>\r\n            <header className=\"wide\">\r\n                <h1>{this.state.title[currLanguage]}</h1>\r\n            </header>\r\n            <div className=\"appSingle\">\r\n                {(<div className=\"inside\">\r\n            <nav className=\"topNavigator\"><div className=\"marginedMedium\"><Link to=\"/symbols\">Symbole</Link> -&gt; {this.state.selectedSymbol.name[currLanguage]}</div></nav>\r\n            <div className=\"in\">\r\n                <div className=\"righty relativeContainer\">\r\n                    <span className=\"icon beforeFloating\" onClick={ev=>FloatingContainerCurrentEvent(ev)}>{MaterialIcons.MaterialIconFilterSVGIcon.resize(32, 32).asComponent()}</span>\r\n                    <div className=\"floatingContainer righty scrollableContainerThin\">\r\n                        <header className=\"hoverableHeader\"><h3>Informacje techniczne</h3></header>\r\n                        <div className=\"hoverableContainer\"><div className=\"in\">{checkBoxesTechnicalDescriptors}</div></div>\r\n                        <header className=\"hoverableHeader\"><h3>Kodowanie</h3></header>\r\n                        <div className=\"hoverableContainer\"><div className=\"in\">{checkBoxesCodingDescriptors}</div></div>\r\n                        <header className=\"hoverableHeader\"><h3>Kod źródłowy</h3></header>\r\n                        <div className=\"hoverableContainer\"><div className=\"in\">{checkBoxesSourceDescriptors}</div></div>\r\n                    </div>\r\n                    <span className=\"icon\" onClick={()=>JumperBrowser.share({ title:self.state.selectedSymbol.title, text:self.state.selectedSymbol.name[currLanguage], url:self.props.location.url }, ShareSubwindow)}>{MaterialIcons.MaterialIconShareSVGIcon.resize(32, 32).asComponent()}</span>\r\n                    <span className=\"icon\">{MaterialIcons.MaterialIconPrintSVGIcon.resize(32, 32).asComponent()}</span>\r\n                </div>\r\n                <div className=\"descriptor\">\r\n                    <TextViewerConfigurable textDefaultField={self.state.selectedSymbol.char}/>\r\n                    <h3>Informacje techniczne</h3><hr className=\"smooth\"/>\r\n                    <OutputContainer ref={oc=>this.technicalOutput = oc} newTagName=\"section\" newContent={DescriptorGenerator(technicalDescriptions)} />\r\n                    <h3>Kodowanie</h3><hr className=\"smooth\"/>\r\n                    <OutputContainer ref={oc=>this.codingOutput = oc} newTagName=\"section\" newContent={DescriptorGenerator(codingDescriptions)}/>\r\n                    <h3>Kod źródłowy</h3><hr className=\"smooth\"/>\r\n                    <OutputContainer ref={oc=>this.sourceOutput = oc} newTagName=\"section\" newContent={DescriptorGenerator(sourceCodeDescriptions)}/>\r\n                </div>\r\n            </div>\r\n        </div>)}\r\n            </div>\r\n        </>);\r\n        }\r\n    }\r\n}","C:\\xampp\\htdocs\\LabEnv\\labenv\\src\\components\\Workshop.jsx",[],"C:\\xampp\\htdocs\\LabEnv\\labenv\\src\\iconPacks\\IconPack.jsx",["280","281","282"],"import React, { Component } from 'react';\r\nimport ReactCreateClass from 'create-react-class';\r\n/* Icon Pack by Grano22 | Module v.1 */\r\nexport class Icon {\r\n    name = \"Unnamed\";\r\n\r\n    iconStructure = \"\";\r\n    get iconBefore() { return \"\"; }\r\n    get iconAfter() { return \"\"; }\r\n\r\n    width = 24;\r\n    height = 24;\r\n\r\n    color = \"black\";\r\n    fill = \"transparent\";\r\n\r\n    constructor(initFunc=null) {\r\n        if(initFunc!=null) { \r\n            var initObj = initFunc(this) || {};\r\n            for(let objParam in initObj) this[objParam] = initObj[objParam];\r\n        }\r\n    }\r\n\r\n    get completeStructure() {return this.iconBefore + this.iconStructure + this.iconAfter}\r\n\r\n    asComponent() {\r\n        var self = this, RenderedContext = ReactCreateClass({ render:function() { return (<div dangerouslySetInnerHTML={{__html: self.completeStructure }}></div>); }});\r\n        return (<RenderedContext/>);\r\n    }\r\n\r\n    asNativeElement() {\r\n        let temp = document.createElement('div');\r\n        temp.innerHTML = this.completeStructure;\r\n        return temp.firstChild;\r\n    }\r\n\r\n    fromTextAttributes(stringStyle) {\r\n        if(typeof stringStyle.fontSize!=\"undefined\") {\r\n            this.width = this.height = stringStyle.fontSize;\r\n        }\r\n    }\r\n}\r\n\r\nexport class SVGIcon extends Icon {\r\n    static iterator = 0;\r\n    get iconBefore() { return '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 '+this.width+' '+this.height+'\" width=\"'+this.width+'\" height=\"'+this.height+'\" '+(typeof this.containerAttributes!=\"undefined\" && Object.entries(this.containerAttributes).map((attr, ind, arr)=>attr[0]+'=\"'+attr[1]+'\"').join(\" \"))+'>'; } //+(arr.length - 1>ind && \" \")\r\n    get iconAfter() { return '&#9633;</svg>'; }\r\n\r\n    constructor(initFunc=null, outputType=\"\") {\r\n        super(initFunc);\r\n        this.id = SVGIcon.iterator++;\r\n        if(this.iconStructure==\"\") this.iconStructure = '<rect x=\"0\" y=\"0\" width=\"'+this.width+'\" height=\"'+this.height+'\" style=\"fill:transparent;stroke:#000;stroke-width:10\" />';\r\n        this.outputType = outputType;\r\n    }\r\n\r\n    resize(newWidth, newHeight) {\r\n        this.width = newWidth;\r\n        this.height = newHeight;\r\n        return this;\r\n    }\r\n\r\n    get completeStructure() {\r\n        let iconBefore = \"\", iconAfter = \"\";\r\n        switch(this.outputType) {\r\n            case \"symbol\":\r\n                iconBefore = this.iconBefore + `<symbol id=\"iconPackOutput${this.id}\" viewBox=\"0 0 ${this.originWidth || this.width} ${this.originHeight || this.height}\" >`;\r\n                iconAfter = `</symbol><use xlink:href=\"#iconPackOutput${this.id}\" width=\"${this.width}\" height=\"${this.height}\"></use>` + this.iconAfter;\r\n            break;\r\n            case \"preseved\":\r\n                this.containerAttributes = Object.assign(this.containerAttributes, { preserveAspectRatio:\"none\" });\r\n                iconBefore = this.iconBefore;\r\n            default:\r\n        }\r\n        return iconBefore + this.iconStructure + iconAfter;\r\n    }\r\n}","C:\\xampp\\htdocs\\LabEnv\\labenv\\src\\iconPacks\\MaterialIcons\\MaterialIcons.SVG.jsx",[],"C:\\xampp\\htdocs\\LabEnv\\labenv\\src\\index.js",["283"],"import Jumper from 'jumper';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nconsole.log(Jumper);\nJumper.Console.init(true, {\n    ignoreTypes:[\"warn\"]\n});\nconsole.log(Jumper.Console.byLabel(\"jumper\"), \"Welcome to jumper!\");\nconsole.log(Jumper.Console);\n\nconst Routing = (<Router>\n  <Route path=\"/*\" component={App}/>\n</Router>);\n\n//React.StrictMode\nvar targetContainer = document.getElementById('root');\nif(targetContainer!=null) {\n  ReactDOM.render(\n      Routing,\n      targetContainer\n  );\n} else console.error(\"React runtime error, lack of root container\");\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n","C:\\xampp\\htdocs\\LabEnv\\labenv\\src\\libraries\\ActionsStack.jsx",["284","285","286","287","288","289","290","291","292","293","294","295","296","297","298","299","300","301","302","303","304","305","306","307","308","309","310","311","312"],"/* Jumper Library by Grano22 | v 1.0 | React */\r\nimport { JSONSafteyParse } from './DataProcessing';\r\nimport { basicHashString, cyrb53 } from './Cryptography';\r\n\r\nclass JumperConsoleEntry {\r\n    constructor(selfExecution=true) {\r\n        if(selfExecution) this.execute();\r\n    }\r\n    execute() {/* Console Native Code */}\r\n}\r\n\r\nclass JumperLog extends JumperConsoleEntry {\r\n    name = \"(Unknown Name)\";\r\n    description = \"(Uknown Description)\";\r\n\r\n    constructor(selfExecution=true, name=\"\", description=\"\") {\r\n        super(selfExecution);\r\n        this.name = name;\r\n        this.description = description;\r\n    }\r\n    execute() {console.log(`Name:\\n\\t${this.name}\\nDescription:\\n\\t${this.description}`);}\r\n}\r\n\r\nexport class JumperError extends JumperConsoleEntry {\r\n    name = \"(Unknown Name)\";\r\n    description = \"(Uknown Description)\";\r\n    no = -1;\r\n\r\n    constructor(selfExecution=true, no=-1, name=\"\", description=\"\") {\r\n        super(selfExecution);\r\n        this.no = no;\r\n        this.name = name;\r\n        this.description = description;\r\n    }\r\n    execute() {console.error(`Name:\\n\\t${this.name}\\nDescription:\\n\\t${this.description}`);}\r\n}\r\n\r\nexport class JumperWarn {\r\n    name = \"(Unknown Name)\"; \r\n    description = \"(Uknown Description)\";\r\n\r\n    constructor(selfExecution=true) {\r\n        if(selfExecution) this.execute();\r\n    }\r\n    execute() {console.warn(`Name:\\n\\t${this.name}\\nDescription:\\n\\t${this.description}`);}\r\n}\r\n\r\nexport class JumperInfo {\r\n    name = \"(Unknown Name)\";\r\n    description = \"(Uknown Description)\";\r\n\r\n    constructor(selfExecution=true) {\r\n        if(selfExecution) this.execute();\r\n    }\r\n    execute() {console.info(`Name:\\n\\t${this.name}\\nDescription:\\n\\t${this.description}`);}\r\n}\r\n\r\nexport const JumperLogger = new class {\r\n    logsStack = [];\r\n    errorsStack = [];\r\n    warnsStack = [];\r\n    infoStack = [];\r\n\r\n    log() {\r\n        this.logsStack.push(new JumperLog());\r\n    }\r\n    error() {\r\n        this.errorsStack.push(new JumperError());\r\n    }\r\n    warn() {\r\n        this.warnsStack.push(new JumperWarn());\r\n    }\r\n    info() {\r\n        this.infoStack.push(new JumperInfo());\r\n    }\r\n    critical() {\r\n        new JumperCriticalError();\r\n    }\r\n    delete() {\r\n\r\n    }\r\n    deleteAll() {\r\n        \r\n    }\r\n}\r\n\r\nexport class JumperMemoryLeak extends JumperError {\r\n\r\n}\r\n\r\nexport class JumperCriticalError extends JumperError {\r\n    constructor(selfExecution=true) {\r\n        if(selfExecution) this.execute();\r\n    }\r\n    execute() {\r\n        let errCont = document.createElement(\"div\");\r\n        errCont.innerHTML = `<style id=\"jumper_debuger_styles\" type=\"text/css\">\r\n        #jumper_debuger_fullwidth_error {\r\n            position: fixed;\r\n            width: 100%;\r\n            height: 100%;\r\n        }\r\n        #jumper_debuger_message_box {\r\n\r\n        }\r\n        </style><div id=\"jumper_debuger_fullwidth_error\"><div id=\"jumper_debuger_message_box\">\r\n        \r\n        </div></div>`;\r\n        document.body.appendChild(errCont);\r\n    }\r\n}\r\n\r\nexport function splitByParsing(str, occur, escape=\"/\") {\r\n    let arr = [], inStr = false, partStr = \"\";\r\n    for(let word in str) {\r\n        if(word==str.length - 1) { partStr += str[word]; arr.push(partStr); }\r\n        else if(str[word]==\"'\") inStr = !inStr;\r\n        else if(!inStr && str[word]==occur) { if(str[word - 1]!=escape) { arr.push(partStr); partStr = \"\"; } }\r\n        else { partStr += str[word]; }\r\n    }\r\n    return arr;\r\n}\r\n\r\nexport const ActionsErrors = [\r\n    \"memoryLeaks\",\r\n\r\n];\r\n\r\nexport class ActionError {\r\n\r\n\r\n    constructor(desc) {\r\n        this.description = desc;\r\n    }\r\n\r\n    toString() {\r\n\r\n    }\r\n}\r\n\r\nexport class ActionModule {\r\n    constructor() {}\r\n\r\n    static asPointer(actionClass) {\r\n        return {\r\n            pointer: actionClass,\r\n            toString:()=>{\r\n\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport class ActionsStack {\r\n    static version = 1.1;\r\n\r\n    component = null;\r\n    operationsHistoryStack = new Array();\r\n    operationsRestoredStack = new Array();\r\n\r\n    errorsStack = new Array(); //window.globalLogsHandler.traceLocalStack();\r\n\r\n    namespaceRange = new Array();\r\n\r\n    lastAction = \"\";\r\n    stackHistorySize = 20;\r\n    stackRestoredSize = 20;\r\n    //options = {};\r\n\r\n    constructor(component, inArr, loadResumeable=true, options={stackSize:20, debug:false}) {\r\n        this.component = component;\r\n        this.component.state = Object.assign(this.component.state || {}, {});\r\n        this.stackSize = options.stackSize;\r\n        this.setOperationsNamespace(inArr);\r\n        if(loadResumeable) this.restoreStacksSessions();\r\n        function onBeforePageUnload() {\r\n            this.saveStacksSessions();\r\n            console.log(\"really\");\r\n        }\r\n        window.addEventListener(\"beforeunload\", onBeforePageUnload.bind(this));\r\n    }\r\n    addError(newErr) {\r\n        this.errorsStack.push(newErr);\r\n        console.error(newErr);\r\n    }\r\n    setOperationsNamespace(inArr) {\r\n        if(!Array.isArray(inArr)) { this.addError(new ActionError(\"Invaild input, array expected\", 0, \"\")); return this; }\r\n        for(let classAction of inArr) this.namespaceRange.push(classAction); //.prototype.constructor.name .prototype.constructor.name\r\n        return this;\r\n    }\r\n    getOperationByNamespace(name) {\r\n        for(let classOnce of this.namespaceRange) { if(classOnce.prototype.constructor.name==name) return classOnce; }\r\n        return null;\r\n    }\r\n    flush() {\r\n        this.lastAction = \"flush\";\r\n        while(this.operationsHistoryStack.length>0) { let iOper = this.operationsHistoryStack[this.operationsHistoryStack.length - 1]; iOper.onFlush(this.component, iOper.inputData); this.operationsHistoryStack.pop(); }\r\n        this.operationsRestoredStack = new Array();\r\n        this.component.setState({actionHandler:this.dump()});\r\n    }\r\n    flushTyped(filter, withRestored=false) {\r\n        this.lastAction = \"flushTyped(\"+filter+\",\"+withRestored+\")\";\r\n        this.operationsHistoryStack = this.operationsHistoryStack.map(filter);\r\n        if(withRestored) this.operationsRestoredStack = this.operationsRestoredStack.map(filter);\r\n        this.component.setState({actionHandler:this.dump()});\r\n    }\r\n    addOperation(newOperation, inputData = {}) {\r\n        try {\r\n            this.lastAction = \"addOperation\";\r\n            if(!this.namespaceRange.map(v=>v.prototype.constructor.name).includes(newOperation.constructor.name)) throw \"Unexpected Action class, use one of registered: \"+this.namespaceRange.map(v=>v.prototype.constructor.name).join(\",\");\r\n            newOperation.inputData = inputData;\r\n            newOperation.lastInputData = inputData;\r\n            let matchRes = newOperation.name.match(/\\$\\{(\\w\\d?)+\\}/g);\r\n            if(matchRes!=null) { for(let matchRe in matchRes) { let wd = matchRes[matchRe].substring(0, matchRes[matchRe].length - 2).substring(0, 2); newOperation.name.replace(matchRes[matchRe], inputData[wd]); } }\r\n            let outCpt = newOperation.onStore(this.component, inputData, this.component.state) || {}; // newOperation.outputData\r\n            matchRes = newOperation.name.match(/\\#\\{(\\w\\d?)+\\}/g);\r\n            if(matchRes!=null) { for(let matchRe in matchRes) { let wd = matchRes[matchRe].substring(0, matchRes[matchRe].length - 2).substring(0, 2); newOperation.name.replace(matchRes[matchRe], outCpt[wd]); } }\r\n            this.operationsHistoryStack.push(newOperation);\r\n            if(this.operationsHistoryStack.length>=this.stackSize) this.operationsHistoryStack.shift();\r\n            this.component.setState(Object.assign(outCpt, {actionHandler:this.dump()}));\r\n        } catch(e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n    invokeEmptyOperation() { this.component.setState(Object.assign(this.component.state || {}, {lastActionDate:new Date()})); }\r\n    restoreLastOperation() {\r\n        this.operationsRestoredStack.push(this.operationsHistoryStack[this.operationsHistoryStack.length - 1]);\r\n        this.operationsHistoryStack.pop();\r\n        let iOper = this.operationsRestoredStack[this.operationsRestoredStack.length - 1];\r\n        iOper.onRestore(this.component, iOper.inputData, iOper.outputData);\r\n    }\r\n    undoRestoring() {\r\n        this.operationsHistoryStack.push(this.operationsRestoredStack[this.operationsRestoredStack.length - 1]);\r\n        this.operationsRestoredStack.pop();\r\n        let iOper = this.operationsHistoryStack[this.operationsHistoryStack.length - 1];\r\n        iOper.onRestore(this.component, iOper.inputData, iOper.outputData);\r\n    }\r\n    restoreOperations(number) {\r\n        for(let i = 0;i<number;i++) this.restoreLastOperation();\r\n    }\r\n    resumeAll() {\r\n        for(let oper in this.operationsHistoryStack) {\r\n            if(this.operationsHistoryStack[oper].type==2) this.operationsHistoryStack[oper].onResume();\r\n        }\r\n    }\r\n    resume(filter, firstOccur=false) {\r\n        for(let oper in this.operationsHistoryStack) {\r\n            let res = filter(this.operationsHistoryStack[oper], oper);\r\n            if(this.operationsHistoryStack[oper].type==2 && res) this.operationsHistoryStack[oper].onResume();\r\n            if(res && firstOccur) break;\r\n        }\r\n    }\r\n    setTypeRange() {\r\n\r\n    }\r\n    saveStacksSessions() {\r\n        let accessHash = this.component.constructor.name+\"#\"+cyrb53(this.component.constructor.toString());\r\n        window.sessionStorage.setItem(\"jumper_c_\"+accessHash, this.toString());\r\n        let hl = \"\", rl = \"\";\r\n        for(let ha in this.operationsHistoryStack) { if(this.operationsHistoryStack[ha].type==3) { hl += this.operationsHistoryStack[ha].toString().replace(/\\&/g, \"\\\\&\"); if(ha!=this.operationsHistoryStack.length - 1) hl += \"&\"; } }\r\n        window.sessionStorage.setItem(\"jumper_sh_\"+accessHash, hl);\r\n        for(let ra in this.operationsRestoredStack) { if(this.operationsHistoryStack[ra].type==3) { rl += this.operationsRestoredStack[ra].toString().replace(/\\&/g, \"\\\\&\"); if(ra!=this.operationsRestoredStack.length - 1) rl += \"&\"; } }\r\n        window.sessionStorage.setItem(\"jumper_sr_\"+accessHash, rl);\r\n    }\r\n    restoreStacksSessions() {\r\n        let resActions = null, accessHash = this.component.constructor.name+\"#\"+cyrb53(this.component.constructor.toString());\r\n        if(resActions = window.sessionStorage.getItem(\"jumper_c_\"+accessHash)!=null) {\r\n            try {\r\n            this.lastAction = \"operationsLoad\";\r\n            resActions = splitByParsing(resActions, \";\", \"/\");\r\n            let jumperS1 = window.sessionStorage.getItem(\"jumper_sh_\"+accessHash);\r\n            if(jumperS1!=null) {\r\n                jumperS1 = splitByParsing(jumperS1, \"&\", \"/\");\r\n                console.log(jumperS1);\r\n                let outCpt = {};\r\n                for(let onceRes in jumperS1) {\r\n                    console.log(jumperS1[onceRes]);\r\n                    if(this.stackHistorySize>=this.operationsHistoryStack.length) {\r\n                    let jumperAParams = splitByParsing(jumperS1[onceRes], \";\", \"/\"), jumperA = new (this.getOperationByNamespace(jumperAParams[0]));\r\n                    console.log(jumperAParams);\r\n                    let cd = jumperAParams[1].split(/[- :]/);\r\n                    jumperA.creationDate = new Date(Date.UTC(cd[0], cd[1]-1, cd[2], cd[3], cd[4], cd[5]));\r\n                    let ud = jumperAParams[2].split(/[- :]/);\r\n                    jumperA.updateDate = new Date(Date.UTC(ud[0], ud[1]-1, ud[2], ud[3], ud[4], ud[5]));\r\n                    jumperA.outputData = JSONSafteyParse(jumperAParams[3], {}, (err)=>{});\r\n                    jumperA.lastInputData = JSONSafteyParse(jumperAParams[4], {}, (err)=>{});\r\n                    console.log(jumperA);\r\n                    outCpt = jumperA.onStore(this.component, jumperA.lastInputData, jumperA.outputData) || {};\r\n                    this.operationsHistoryStack.push(jumperA);\r\n                    jumperA.onResume(this.component, jumperA.lastInputData);\r\n                    \r\n                    }\r\n                }\r\n                this.component.setState(Object.assign(outCpt, {actionHandler:this.dump()}));\r\n            }\r\n            let jumperS2 = window.sessionStorage.getItem(\"jumper_sr_\"+accessHash);\r\n            if(jumperS2!=null) {\r\n                jumperS2 = splitByParsing(jumperS2, \"&\", \"/\");\r\n                let outCpt = {};\r\n                for(let onceRes in jumperS2) {\r\n                    if(this.stackRestoredSize>=this.operationsRestoredStack.length) {\r\n                    let jumperAParams = splitByParsing(jumperS2[onceRes], \";\", \"/\"), jumperA = new (this.getOperationByNamespace(jumperAParams[0]));\r\n                    let cd = jumperAParams[1].split(/[- :]/);\r\n                    jumperA.creationDate = new Date(Date.UTC(cd[0], cd[1]-1, cd[2], cd[3], cd[4], cd[5]));\r\n                    let ud = jumperAParams[2].split(/[- :]/);\r\n                    jumperA.updateDate = new Date(Date.UTC(ud[0], ud[1]-1, ud[2], ud[3], ud[4], ud[5]));\r\n                    jumperA.outputData = JSONSafteyParse(jumperAParams[3], {}, (err)=>{});\r\n                    jumperA.lastInputData = JSONSafteyParse(jumperAParams[4], {}, (err)=>{});\r\n                    outCpt = jumperA.onStore(this.component, jumperA.lastInputData, jumperA.outputData) || {};\r\n                    this.operationsRestoredStack.push(jumperA, jumperA.lastInputData);\r\n                    jumperA.onResume(this.component, jumperA.lastInputData);\r\n                    }\r\n                }\r\n                this.component.setState(Object.assign(outCpt, {actionHandler:this.dump()}));\r\n            }\r\n            } catch(e) {\r\n                console.error(e);\r\n            }\r\n        }\r\n    }\r\n    toString() { return `${cyrb53(this.component.constructor.toString())}h;${cyrb53(this.component.constructor.toString())}r;${this.lastAction}`; }\r\n    dump() { return `${this.lastAction}`; }\r\n    /* Events */\r\n    onRestore() {/* Native Code */}\r\n}\r\n\r\nexport class ActionOperation {\r\n    name = \"\";\r\n    description = \"\";\r\n    type = -1;\r\n    mark = \"all\";\r\n    creationDate = new Date();\r\n    updateDate = new Date();\r\n    lastInputData = {};\r\n    outputData = {};\r\n    constructor(mark=\"all\", name, desc=\"\", type=1) {\r\n        this.mark = mark;\r\n        this.name = name;\r\n        this.description = desc;\r\n        this.type = type;\r\n    }\r\n    onStart(c, i, o) {/* Native Code */}\r\n    onStore(c, i, o) {/* Native Code */}\r\n    onRestore() {/* Native Code */}\r\n    onFlush() {/* Native Code */}\r\n    onUpdate() {/* Native Code */}\r\n    toString() {return `${this.constructor.name};${this.creationDate.toISOString().slice(0, 19).replace('T', ' ')};${this.updateDate.toISOString().slice(0, 19).replace('T', ' ')};${JSON.stringify(this.outputData)};${JSON.stringify(this.lastInputData)}`;}\r\n}\r\n\r\nexport class ActionEventsOperation extends ActionOperation {\r\n    type = 2;\r\n    events = [];\r\n\r\n    constructor(mark=\"all\") {\r\n        super(mark);\r\n    }\r\n\r\n    onRestore() {this.restoreEventEntries();}\r\n\r\n    addEventEntry(elRef, evName, evFn) {\r\n        this.events.push({element:elRef, eventName:evName, event:evFn});   \r\n    }\r\n\r\n    restoreEventEntries() {\r\n        this.events.forEach((val, ind, arr)=>{\r\n            if(typeof val.element==\"string\") {\r\n                let el = document.querySelector(val.element);\r\n                el.addEventListener(val.eventName, val.event);\r\n            } else {\r\n                val.element.addEventListener(val.eventName, val.event);\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport class ActionResumeOperation extends ActionOperation {\r\n    type = 3;\r\n    events = [];\r\n\r\n    constructor(mark=\"all\") {\r\n        super(mark);\r\n    }\r\n    onBeforeStore(s, i) {return true;}\r\n    onResume(s, i) {/* Native Code */}\r\n}\r\n\r\nexport default { ActionsStack, ActionOperation, ActionResumeOperation };","C:\\xampp\\htdocs\\LabEnv\\labenv\\src\\libraries\\ActionsStackExtended.jsx",["313","314","315","316","317","318","319","320","321","322","323","324","325","326","327","328","329","330","331","332","333","334","335","336","337","338","339","340","341","342","343","344","345"],"import React, {Component} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { JSONSafteyParse } from './DataProcessing';\r\nimport { basicHashString, cyrb53 } from './Cryptography';\r\n/*  Jumper Diagnostic Extension \r\n    Version: 0.1\r\n\r\n*/\r\nfunction microtime(getAsFloat) {\r\n    var s, now, multiplier;\r\n    if(typeof performance !== 'undefined' && performance.now) {\r\n        if(typeof performance.timeOrigin!=\"undefined\") now = (performance.now() + parseFloat(performance.timeOrigin)) / 1000; else now = (performance.now() + parseFloat(performance.timing.navigationStart)) / 1000;\r\n        multiplier = 1e6; // 1,000,000 for microseconds\r\n    }\r\n    else {\r\n        now = (Date.now ? Date.now() : new Date().getTime()) / 1000;\r\n        multiplier = 1e3; // 1,000\r\n    }\r\n    if(getAsFloat) return now;\r\n    s = now | 0;\r\n    return (Math.round((now - s) * multiplier ) / multiplier ) + ' ' + s;\r\n}\r\nfunction sizeOf(obj) {\r\n    let bytes = 0;\r\n    if(obj === null && obj === undefined) return -1; \r\n        switch(typeof obj) {\r\n            case 'number':\r\n                bytes += 8; break;\r\n            case 'string':\r\n                bytes += obj.length * 2; break;\r\n            case 'boolean':\r\n                bytes += 4; break;\r\n            case 'object':\r\n                var objClass = Object.prototype.toString.call(obj).slice(8, -1);\r\n                if(objClass === 'Object' || objClass === 'Array') {\r\n                    for(var key in obj) {\r\n                        if(!obj.hasOwnProperty(key)) continue;\r\n                        bytes += sizeOf(obj[key]);\r\n                    }\r\n                } else bytes += obj.toString().length * 2;\r\n                break;\r\n        }\r\n    return bytes;\r\n}\r\nfunction formatByteSize(bytes) {\r\n    if(bytes < 1024) return bytes + \" bytes\";\r\n    else if(bytes < 1048576) return(bytes / 1024).toFixed(3) + \" KiB\";\r\n    else if(bytes < 1073741824) return(bytes / 1048576).toFixed(3) + \" MiB\";\r\n    else return(bytes / 1073741824).toFixed(3) + \" GiB\";\r\n};\r\n\r\nexport class JumperToolbar extends Component {\r\n    totalMemoryFillment = 0;\r\n    loadingLibraryTime = 0;\r\n    get sessionRestoringDataTime() {return this.currentContext.restoredMemoryTime;}\r\n    totalExectuionActionsTime = 0;\r\n    executionActionsTime = [];\r\n\r\n    currentContext = null;\r\n\r\n    get registeredActionsNamespaces() {return this.currentContext.namespaceRange.map(v=>(<>{v.prototype.constructor.name},<br/></>))}\r\n\r\n    currentStyle = `\r\n    #jumper_toolbar_debuger {\r\n        position: fixed;\r\n        z-index: 99999999;\r\n        bottom: 0; left: 0;\r\n        border-top: 1px solid #fff;\r\n        background: #333333;\r\n        width: 100%;\r\n        height: 78px;\r\n        color: #e0e0e0;\r\n        transition: 0.3s ease-out;\r\n    }\r\n    #jumper_toolbar_debuger.hidden {\r\n        opacity: 0.5;\r\n        transform: translateX(calc(100% - 72px));\r\n        transition: 0.3s ease-in;\r\n    }\r\n    #jumper_toolbar_debuger > span {\r\n        display: inline-block;\r\n        vertical-align: middle;\r\n        position: relative;\r\n        margin-right: 10px;\r\n        padding: 5px;\r\n        cursor: pointer;\r\n    }\r\n    #jumper_toolbar_debuger > span:hover { background: #454545; }\r\n    #jumper_toolbar_debuger > span i {\r\n        font-size: 25px;\r\n        font-style: normal;\r\n    }\r\n    .jumper_shadow_box {\r\n        position: absolute;\r\n        background: #4a4a4a;\r\n        \r\n        padding: 7px 12px;\r\n        bottom: -100%;\r\n        z-index: -1;\r\n        opacity: 0;\r\n        transition: 0.3s ease-out;\r\n    }\r\n    .jumper_shadow_box.visible {\r\n        bottom: 55px;\r\n        opacity: 1;\r\n        transition: 0.3s ease-in;\r\n    }\r\n    .jumper-color { color: #196a36; }\r\n    .react-color { color: #61DBFB;  }\r\n    `;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.currentContext = props.context;\r\n        this.loadingLibraryTime = microtime(true) - startTime;\r\n    }\r\n\r\n    toggleShadowBox(evt) {\r\n        if(evt.target.tagName==\"SPAN\") {\r\n        let cont = evt.currentTarget;\r\n        for(let chld of cont.children) {\r\n            if(chld.classList.contains(\"jumper_shadow_box\")) chld.classList.toggle(\"visible\");\r\n        }\r\n        }\r\n    }\r\n\r\n    toggle(evt) {\r\n        let currCont = evt.currentTarget.parentElement;\r\n        currCont.classList.toggle(\"hidden\");\r\n    }\r\n\r\n    render() {\r\n    return (<><style id=\"jumper_toolbar_deubger_styles\">{this.currentStyle}</style><div id=\"jumper_toolbar_debuger\">\r\n        <span onClick={(ev)=>this.toggle(ev)}>\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.0\" width=\"64px\" height=\"64px\" viewBox=\"0 0 5120 5120\" preserveAspectRatio=\"xMidYMid meet\">\r\n            <g id=\"layer101\" fill=\"#003b00\" stroke=\"none\">\r\n            <path d=\"M880 4020 l0 -150 475 0 475 0 0 -100 0 -100 -475 0 -475 0 0 -150 0 -150 363 -2 362 -3 -47 -28 c-26 -15 -74 -52 -107 -82 l-59 -55 -256 0 -256 0 0 -150 0 -150 250 0 250 0 41 -45 c23 -25 69 -63 103 -85 l61 -40 -353 0 -352 0 0 -150 0 -150 481 0 c435 0 481 -2 475 -16 -3 -9 -6 -56 -6 -105 l0 -89 -475 0 -475 0 0 -150 0 -150 583 0 c320 0 836 -1 1147 -1 311 0 805 0 1098 0 l532 1 0 150 0 150 -427 0 -428 0 -1 105 -2 105 429 0 429 0 0 150 0 150 -307 0 -306 0 59 39 c32 21 79 59 104 85 l44 46 203 0 203 0 0 150 0 150 -212 0 -213 0 -39 41 c-22 22 -69 59 -104 82 l-63 42 315 3 316 2 0 150 0 150 -425 0 -425 0 0 100 0 100 425 0 425 0 0 150 0 150 -1680 0 -1680 0 0 -150z m1628 -169 c25 -22 27 -34 9 -53 -7 -7 -34 -39 -61 -70 l-48 -58 -233 0 -232 0 -7 31 c-8 42 -8 154 1 162 3 4 128 7 277 7 250 -1 273 -2 294 -19z m776 -12 c8 -40 8 -98 0 -138 l-7 -31 -235 2 -235 3 -60 73 -60 72 23 25 23 25 272 0 273 0 6 -31z m-639 -129 c16 -16 26 -32 23 -35 -3 -4 -31 -5 -62 -3 l-56 3 26 33 c14 17 29 32 33 32 4 0 20 -13 36 -30z m-734 -377 c6 -21 20 -59 30 -85 l19 -48 -208 0 -207 0 30 24 c52 42 275 144 317 146 3 0 12 -17 19 -37z m264 -5 c-14 -24 -36 -62 -48 -86 -32 -64 -54 -55 -88 38 -16 41 -28 78 -28 83 -1 4 42 7 95 7 l95 0 -26 -42z m739 9 c11 -17 32 -56 48 -84 l30 -53 -111 0 c-104 0 -114 2 -152 27 -29 19 -58 28 -100 31 -71 5 -95 0 -143 -33 -36 -24 -44 -25 -150 -23 l-113 3 49 83 49 82 287 0 287 0 19 -33z m296 30 c0 -8 -38 -113 -50 -139 -22 -47 -44 -34 -94 52 -25 44 -46 82 -46 85 0 3 43 5 95 5 52 0 95 -2 95 -3z m205 -32 c75 -28 187 -86 225 -115 l25 -20 -202 0 -202 0 25 68 c14 37 27 73 29 80 6 18 26 15 100 -13z m-1458 -452 c-3 -10 -16 -48 -29 -85 -21 -61 -26 -68 -50 -68 -55 0 -256 90 -323 145 l-30 24 219 1 c203 0 218 -1 213 -17z m151 -5 c6 -13 27 -51 46 -85 l36 -63 -89 0 -89 0 25 68 c14 37 27 75 30 85 7 24 28 21 41 -5z m348 1 c35 -39 89 -59 156 -59 64 0 105 16 154 61 19 17 34 19 128 17 l107 -3 -48 -80 -48 -80 -296 -3 -297 -2 -46 78 c-25 43 -46 82 -46 85 0 4 49 7 108 7 98 0 111 -2 128 -21z m715 -59 c16 -41 29 -78 29 -82 0 -5 -38 -8 -85 -8 -47 0 -85 2 -85 4 0 16 94 166 102 164 6 -2 24 -37 39 -78z m484 55 c-64 -53 -267 -145 -319 -145 -20 0 -27 11 -53 85 l-30 85 216 0 216 -1 -30 -24z m-1192 -526 l69 -81 -23 -24 -23 -24 -275 2 -276 3 -3 30 c-2 17 -1 63 3 103 l7 72 226 0 227 0 68 -81z m208 64 c-5 -10 -21 -29 -35 -43 l-27 -24 -42 42 -42 42 78 0 c71 0 77 -2 68 -17z m603 1 c3 -9 6 -56 6 -105 l0 -89 -274 0 c-271 0 -275 0 -300 23 l-25 22 70 83 70 82 224 0 c194 0 224 -2 229 -16z\"/>\r\n            </g>\r\n            <g id=\"layer102\" fill=\"#196a36\" stroke=\"none\">\r\n            <path d=\"M241 4353 c0 -328 -3 -623 -7 -655 l-7 -58 174 0 c96 0 184 -3 197 -6 l22 -6 0 224 c0 124 3 313 7 421 l6 197 1937 0 1937 0 6 -197 c4 -108 7 -296 7 -417 l0 -221 192 3 c106 2 193 4 193 5 3 10 -17 1285 -20 1295 -4 9 -477 12 -2324 12 l-2320 0 0 -597z\"/>\r\n            <path d=\"M880 4020 l0 -150 474 0 475 0 11 58 c24 115 77 194 155 228 25 11 -62 13 -542 14 l-573 0 0 -150z\"/>\r\n            <path d=\"M2230 4146 c110 -39 228 -111 328 -201 l53 -47 57 50 c117 101 284 200 362 215 14 2 -175 5 -420 5 l-445 2 65 -24z\"/>\r\n            <path d=\"M3220 4154 c19 -8 48 -27 64 -42 37 -35 84 -134 92 -194 l7 -48 428 0 429 0 0 150 0 150 -527 0 c-481 -1 -525 -2 -493 -16z\"/>\r\n            <path d=\"M2040 4063 c-43 -16 -85 -82 -96 -152 l-7 -41 274 0 274 1 -30 25 c-146 123 -332 198 -415 167z\"/>\r\n            <path d=\"M3022 4050 c-67 -24 -127 -59 -215 -124 l-69 -51 268 -3 c147 -1 269 0 271 2 3 3 -3 31 -12 62 -12 40 -29 70 -55 96 -33 34 -43 38 -86 38 -27 -1 -73 -9 -102 -20z\"/>\r\n            <path d=\"M880 3520 l0 -150 365 0 c365 0 366 0 413 24 26 13 84 36 130 52 80 27 83 29 77 53 -4 14 -13 58 -19 96 l-12 70 -477 3 -477 2 0 -150z\"/>\r\n            <path d=\"M1940 3658 c0 -17 29 -150 33 -154 2 -2 55 5 118 16 63 11 130 20 149 20 60 0 77 10 124 71 l46 59 -235 0 c-181 0 -235 -3 -235 -12z\"/>\r\n            <path d=\"M2501 3618 l-40 -53 74 -3 c41 -2 109 -2 151 0 l76 3 -42 53 -42 52 -68 0 -69 0 -40 -52z\"/>\r\n            <path d=\"M2820 3665 c0 -12 74 -106 90 -115 10 -6 33 -10 50 -10 18 0 88 -9 157 -21 68 -12 127 -18 130 -15 6 6 32 128 33 154 0 9 -52 12 -230 12 -126 0 -230 -2 -230 -5z\"/>\r\n            <path d=\"M3386 3658 c-5 -15 -31 -169 -31 -181 0 -5 38 -23 85 -41 47 -18 100 -40 119 -49 30 -15 73 -17 358 -17 l323 0 0 150 0 150 -425 0 c-332 0 -426 -3 -429 -12z\"/>\r\n            <path d=\"M2480 3452 l-105 -3 -22 -34 c-13 -19 -23 -37 -23 -40 0 -3 126 -5 281 -5 l280 0 -18 31 c-10 17 -22 34 -28 38 -12 10 -218 17 -365 13z\"/>\r\n            <path d=\"M2117 3419 c-60 -9 -111 -20 -114 -23 -17 -17 18 -26 102 -26 92 0 94 0 115 29 11 16 17 31 13 34 -5 2 -57 -4 -116 -14z\"/>\r\n            <path d=\"M2996 3401 l19 -32 97 3 c55 2 99 7 101 13 2 11 -80 30 -177 41 l-59 7 19 -32z\"/>\r\n            <path d=\"M880 3050 l0 -150 250 0 250 0 -21 41 c-30 60 -28 146 5 206 15 25 26 47 26 49 0 2 -115 4 -255 4 l-255 0 0 -150z\"/>\r\n            <path d=\"M1523 3185 c-36 -25 -83 -106 -83 -142 0 -42 13 -68 53 -110 l31 -33 220 0 221 0 28 68 c15 38 27 72 27 78 0 5 -14 42 -32 82 l-32 72 -206 0 c-165 0 -210 -3 -227 -15z\"/>\r\n            <path d=\"M2076 3185 c4 -8 10 -12 15 -9 14 8 10 24 -6 24 -9 0 -12 -6 -9 -15z\"/>\r\n            <path d=\"M2180 3120 l-40 -80 36 -70 36 -70 109 0 109 0 -19 33 c-39 69 -37 161 5 223 13 19 24 37 24 39 0 3 -49 5 -110 5 l-110 0 -40 -80z\"/>\r\n            <path d=\"M2797 3158 c24 -37 28 -53 28 -118 0 -55 -5 -83 -17 -103 -10 -14 -18 -29 -18 -32 0 -3 48 -4 107 -3 l107 3 35 67 36 66 -40 81 -39 81 -113 0 -113 0 27 -42z\"/>\r\n            <path d=\"M3110 3196 c0 -2 6 -9 14 -15 10 -9 15 -8 20 4 4 10 -1 15 -14 15 -11 0 -20 -2 -20 -4z\"/>\r\n            <path d=\"M3251 3178 c-5 -13 -20 -49 -34 -80 l-26 -58 31 -70 31 -70 217 0 c236 0 227 -2 275 63 48 65 31 147 -46 212 -31 25 -31 25 -235 25 -203 0 -205 0 -213 -22z\"/>\r\n            <path d=\"M3848 3153 c36 -64 38 -159 5 -215 l-22 -38 204 0 205 0 0 150 0 150 -209 0 -210 0 27 -47z\"/>\r\n            <path d=\"M880 2580 l0 -150 478 0 478 0 12 73 c6 39 14 81 17 92 5 17 -5 24 -75 48 -44 15 -108 41 -142 57 l-62 30 -353 0 -353 0 0 -150z\"/>\r\n            <path d=\"M2006 2714 c-3 -9 -6 -17 -6 -19 0 -5 93 -23 168 -33 34 -5 62 -6 62 -3 0 3 -9 21 -20 39 l-20 32 -89 0 c-72 0 -90 -3 -95 -16z\"/>\r\n            <path d=\"M2320 2725 c0 -3 12 -23 26 -45 33 -50 52 -53 302 -48 210 3 194 -1 237 71 l16 27 -290 0 c-160 0 -291 -2 -291 -5z\"/>\r\n            <path d=\"M3002 2694 c-13 -20 -22 -37 -20 -39 4 -3 100 11 176 26 41 8 52 14 52 30 0 17 -8 19 -92 19 l-93 0 -23 -36z\"/>\r\n            <path d=\"M3570 2705 c-25 -13 -84 -38 -132 -56 -49 -17 -88 -34 -88 -37 0 -8 20 -133 26 -159 l4 -23 430 0 430 0 0 150 0 150 -312 -1 c-307 -1 -314 -2 -358 -24z\"/>\r\n            <path d=\"M1962 2544 c-6 -27 -14 -64 -17 -81 l-7 -33 227 0 c125 0 225 3 223 8 -1 4 -18 28 -37 55 -26 35 -42 47 -60 47 -25 0 -223 31 -287 45 -31 7 -32 6 -42 -41z\"/>\r\n            <path d=\"M3180 2580 c-19 -5 -90 -17 -158 -26 l-122 -18 -41 -53 -40 -53 226 0 225 0 -1 28 c-2 54 -24 127 -39 128 -8 1 -31 -2 -50 -6z\"/>\r\n            <path d=\"M2460 2524 c0 -4 16 -27 36 -50 l35 -44 78 0 78 0 29 38 c53 66 60 62 -105 62 -83 0 -151 -3 -151 -6z\"/>\r\n            <path d=\"M880 2070 l0 -150 568 0 c479 1 562 3 537 14 -68 30 -125 118 -144 221 -6 32 -11 60 -11 62 0 2 -214 3 -475 3 l-475 0 0 -150z\"/>\r\n            <path d=\"M1943 2175 c9 -63 42 -122 79 -141 43 -22 136 -14 209 19 56 25 169 96 224 142 l30 25 -274 0 -274 0 6 -45z\"/>\r\n            <path d=\"M2770 2189 c103 -89 241 -161 330 -174 85 -11 148 48 169 159 l8 46 -271 0 -271 -1 35 -30z\"/>\r\n            <path d=\"M3376 2179 c-18 -111 -71 -205 -135 -239 -36 -19 -33 -19 482 -20 l517 0 0 150 0 150 -429 0 -428 0 -7 -41z\"/>\r\n            <path d=\"M2560 2149 c-103 -93 -231 -173 -335 -210 -49 -17 -45 -18 375 -18 359 0 420 2 390 13 -103 38 -272 149 -344 225 -17 17 -32 31 -35 31 -3 -1 -26 -19 -51 -41z\"/>\r\n            <path d=\"M207 1833 c-3 -4 -8 -67 -12 -140 l-7 -131 43 -6 c24 -3 107 -10 184 -16 159 -11 817 -60 1600 -120 753 -57 1475 -110 1496 -110 24 0 27 14 34 160 l7 125 -463 34 c-255 18 -480 34 -499 36 -19 2 -132 10 -250 19 -214 16 -392 30 -545 42 -120 9 -152 12 -245 18 -47 4 -112 9 -145 11 -131 11 -1035 77 -1112 81 -44 3 -83 2 -86 -3z\"/>\r\n            <path d=\"M3255 1126 c-852 -321 -1550 -587 -1552 -592 -2 -5 19 -67 46 -139 37 -98 53 -129 65 -127 24 4 3110 1163 3118 1171 4 4 -14 65 -41 136 -37 99 -53 130 -67 132 -11 1 -716 -260 -1569 -581z\"/>\r\n            </g></svg>\r\n        </span>\r\n        <span onClick={(ev)=>this.toggleShadowBox(ev)}>\r\n            <span className=\"jumper-color\">{ActionsStack.version}</span> | <span className=\"react-color\">{React.version}</span>\r\n            <div className=\"jumper_shadow_box\">\r\n            <strong>Wersja React</strong>: {React.version}<br/>\r\n            <strong>Wersja Jumper.React</strong>: {ActionsStack.version}\r\n            </div>\r\n        </span>\r\n        <span onClick={(ev)=>this.toggleShadowBox(ev)}>\r\n            Komponent: {this.currentContext.component.constructor.name}\r\n            <div className=\"jumper_shadow_box\">\r\n                {this.registeredActionsNamespaces}\r\n            </div>\r\n        </span>\r\n        <span onClick={(ev)=>this.toggleShadowBox(ev)}>\r\n            {this.loadingLibraryTime.toFixed(3)}ms\r\n            <div className=\"jumper_shadow_box\">\r\n                <strong>Czas ładowania biblioteki: </strong> {this.loadingLibraryTime.toFixed(3)}ms<br/>\r\n                <strong>Czas ładowania danych z pamięci sesji: </strong> {this.sessionRestoringDataTime.toFixed(3)}ms\r\n            </div>\r\n        </span>\r\n        <span>\r\n            <i>&#x29D7;</i>\r\n        </span>\r\n        <span>\r\n            <i>&#171;</i>\r\n        </span>\r\n        <span>\r\n            <i>&#187;</i>\r\n        </span>\r\n        <span>\r\n            <i>&#x2608;</i>\r\n        </span>\r\n        <span>\r\n            <i>&#9735;</i>\r\n        </span>\r\n        <span>\r\n            <i>&#9746;</i>\r\n        </span>\r\n        <span>\r\n            <i>&#x26A0;</i>\r\n        </span>\r\n    </div></>);\r\n    }\r\n}\r\n\r\n/* END Jumper Diagnostic Extension */\r\n\r\nvar startTime = microtime(true);\r\nconsole.log(startTime);\r\n\r\nclass JumperConsoleEntry {\r\n    constructor(selfExecution=true) {\r\n        if(selfExecution) this.execute();\r\n    }\r\n    execute() {/* Console Native Code */}\r\n}\r\n\r\nclass JumperLog extends JumperConsoleEntry {\r\n    name = \"(Unknown Name)\";\r\n    description = \"(Uknown Description)\";\r\n\r\n    constructor(selfExecution=true, name=\"\", description=\"\") {\r\n        super(selfExecution);\r\n        this.name = name;\r\n        this.description = description;\r\n    }\r\n    execute() {console.log(`Name:\\n\\t${this.name}\\nDescription:\\n\\t${this.description}`);}\r\n}\r\n\r\nexport class JumperError extends JumperConsoleEntry {\r\n    name = \"(Unknown Name)\";\r\n    description = \"(Uknown Description)\";\r\n    no = -1;\r\n\r\n    constructor(selfExecution=true, no=-1, name=\"\", description=\"\") {\r\n        super(selfExecution);\r\n        this.no = no;\r\n        this.name = name;\r\n        this.description = description;\r\n    }\r\n    execute() {console.error(`Name:\\n\\t${this.name}\\nDescription:\\n\\t${this.description}`);}\r\n}\r\n\r\nexport class JumperWarn {\r\n    name = \"(Unknown Name)\"; \r\n    description = \"(Uknown Description)\";\r\n\r\n    constructor(selfExecution=true) {\r\n        if(selfExecution) this.execute();\r\n    }\r\n    execute() {console.warn(`Name:\\n\\t${this.name}\\nDescription:\\n\\t${this.description}`);}\r\n}\r\n\r\nexport class JumperInfo {\r\n    name = \"(Unknown Name)\";\r\n    description = \"(Uknown Description)\";\r\n\r\n    constructor(selfExecution=true) {\r\n        if(selfExecution) this.execute();\r\n    }\r\n    execute() {console.info(`Name:\\n\\t${this.name}\\nDescription:\\n\\t${this.description}`);}\r\n}\r\n\r\nexport const JumperLogger = new class {\r\n    logsStack = [];\r\n    errorsStack = [];\r\n    warnsStack = [];\r\n    infoStack = [];\r\n\r\n    log() {\r\n        this.logsStack.push(new JumperLog());\r\n    }\r\n    error() {\r\n        this.errorsStack.push(new JumperError());\r\n    }\r\n    warn() {\r\n        this.warnsStack.push(new JumperWarn());\r\n    }\r\n    info() {\r\n        this.infoStack.push(new JumperInfo());\r\n    }\r\n    critical() {\r\n        new JumperCriticalError();\r\n    }\r\n    delete() {\r\n\r\n    }\r\n    deleteAll() {\r\n\r\n    }\r\n}\r\n\r\nexport class JumperMemoryLeak extends JumperError {\r\n\r\n}\r\n\r\nexport class JumperCriticalError extends JumperError {\r\n    constructor(selfExecution=true) {\r\n        if(selfExecution) this.execute();\r\n    }\r\n    execute() {\r\n        let errCont = document.createElement(\"div\");\r\n        errCont.innerHTML = `<style id=\"jumper_debuger_styles\" type=\"text/css\">\r\n        #jumper_debuger_fullwidth_error {\r\n            position: fixed;\r\n            width: 100%;\r\n            height: 100%;\r\n        }\r\n        #jumper_debuger_message_box {\r\n\r\n        }\r\n        </style><div id=\"jumper_debuger_fullwidth_error\"><div id=\"jumper_debuger_message_box\">\r\n        \r\n        </div></div>`;\r\n        document.body.appendChild(errCont);\r\n    }\r\n}\r\n\r\nexport function splitByParsing(str, occur, escape=\"/\") {\r\n    let arr = [], inStr = false, partStr = \"\";\r\n    for(let word in str) {\r\n        if(word==str.length - 1) { partStr += str[word]; arr.push(partStr); }\r\n        else if(str[word]==\"'\") inStr = !inStr;\r\n        else if(!inStr && str[word]==occur) { if(str[word - 1]!=escape) { arr.push(partStr); partStr = \"\"; } }\r\n        else { partStr += str[word]; }\r\n    }\r\n    return arr;\r\n}\r\n\r\nexport const ActionsErrors = [\r\n    \"memoryLeaks\",\r\n\r\n];\r\n\r\nexport class ActionError {\r\n\r\n\r\n    constructor(desc) {\r\n        this.description = desc;\r\n    }\r\n\r\n    toString() {\r\n\r\n    }\r\n}\r\n\r\nexport class ActionModule {\r\n    constructor() {}\r\n\r\n    static asPointer(actionClass) {\r\n        return {\r\n            pointer: actionClass,\r\n            toString:()=>{\r\n\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport class ActionsStack {\r\n    static version = 1.1;\r\n\r\n    component = null;\r\n    operationsHistoryStack = new Array();\r\n    operationsRestoredStack = new Array();\r\n\r\n    errorsStack = new Array(); //window.globalLogsHandler.traceLocalStack();\r\n\r\n    namespaceRange = new Array();\r\n\r\n    lastAction = \"\";\r\n    stackHistorySize = 20;\r\n    stackRestoredSize = 20;\r\n    //options = {};\r\n\r\n    //Measuring\r\n    restoredMemoryTime = -1;\r\n\r\n    constructor(component, inArr, loadResumeable=true, options={stackSize:20, debug:false}) {\r\n        this.component = component;\r\n        this.component.state = Object.assign(this.component.state || {}, {});\r\n        this.stackSize = options.stackSize;\r\n        this.setOperationsNamespace(inArr);\r\n        if(loadResumeable) this.restoredMemoryTime = this.restoreStacksSessions();\r\n        function onBeforePageUnload() {\r\n            this.saveStacksSessions();\r\n        }\r\n        window.addEventListener(\"beforeunload\", onBeforePageUnload.bind(this));\r\n        //Toolbar\r\n        if(document.getElementById(\"jumper-debuger-container\")==null) {\r\n        let debugContainer = document.createElement(\"div\");\r\n        debugContainer.id = \"jumper-debuger-container\";\r\n        document.body.appendChild(debugContainer);\r\n        console.log(component.componentWillUnmount);\r\n        ReactDOM.render(<JumperToolbar context={this}/>, debugContainer);\r\n        if(typeof component.componentWillUnmount!=\"undefined\") { let callback = component.componentWillUnmount.bind(component); component.componentWillUnmount = function() { callback(); debugContainer.remove(); } } else component.componentWillUnmount = function() { /*ReactDOM.unmountComponentAtNode();*/ debugContainer.remove(); }\r\n        }\r\n        console.log(\"Init\");\r\n        //END Toolbar\r\n    }\r\n    addError(newErr) {\r\n        this.errorsStack.push(newErr);\r\n        console.error(newErr);\r\n    }\r\n    setOperationsNamespace(inArr) {\r\n        if(!Array.isArray(inArr)) { this.addError(new ActionError(\"Invaild input, array expected\", 0, \"\")); return this; }\r\n        for(let classAction of inArr) this.namespaceRange.push(classAction); //.prototype.constructor.name .prototype.constructor.name\r\n        return this;\r\n    }\r\n    getOperationByNamespace(name) {\r\n        for(let classOnce of this.namespaceRange) { if(classOnce.prototype.constructor.name==name) return classOnce; }\r\n        return null;\r\n    }\r\n    flush() {\r\n        this.lastAction = \"flush\";\r\n        while(this.operationsHistoryStack.length>0) { let iOper = this.operationsHistoryStack[this.operationsHistoryStack.length - 1]; iOper.onFlush(this.component, iOper.inputData); this.operationsHistoryStack.pop(); }\r\n        this.operationsRestoredStack = new Array();\r\n        this.component.setState({actionHandler:this.dump()});\r\n    }\r\n    flushTyped(filter, withRestored=false) {\r\n        this.lastAction = \"flushTyped(\"+filter+\",\"+withRestored+\")\";\r\n        this.operationsHistoryStack = this.operationsHistoryStack.map(filter);\r\n        if(withRestored) this.operationsRestoredStack = this.operationsRestoredStack.map(filter);\r\n        this.component.setState({actionHandler:this.dump()});\r\n    }\r\n    addOperation(newOperation, inputData = {}) {\r\n        try {\r\n            this.lastAction = \"addOperation\";\r\n            if(!this.namespaceRange.map(v=>v.prototype.constructor.name).includes(newOperation.constructor.name)) throw \"Unexpected Action class, use one of registered: \"+this.namespaceRange.map(v=>v.prototype.constructor.name).join(\",\");\r\n            newOperation.inputData = inputData;\r\n            newOperation.lastInputData = inputData;\r\n            let matchRes = newOperation.name.match(/\\$\\{(\\w\\d?)+\\}/g);\r\n            if(matchRes!=null) { for(let matchRe in matchRes) { let wd = matchRes[matchRe].substring(0, matchRes[matchRe].length - 2).substring(0, 2); newOperation.name.replace(matchRes[matchRe], inputData[wd]); } }\r\n            let outCpt = newOperation.onStore(this.component, inputData, newOperation.outputData) || {};\r\n            matchRes = newOperation.name.match(/\\#\\{(\\w\\d?)+\\}/g);\r\n            if(matchRes!=null) { for(let matchRe in matchRes) { let wd = matchRes[matchRe].substring(0, matchRes[matchRe].length - 2).substring(0, 2); newOperation.name.replace(matchRes[matchRe], outCpt[wd]); } }\r\n            this.operationsHistoryStack.push(newOperation);\r\n            if(this.operationsHistoryStack.length>=this.stackSize) this.operationsHistoryStack.shift();\r\n            this.component.setState(Object.assign(outCpt, {actionHandler:this.dump()}));\r\n        } catch(e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n    invokeEmptyOperation() { this.component.setState(Object.assign(this.component.state || {}, {lastActionDate:new Date()})); }\r\n    restoreLastOperation() {\r\n        this.operationsRestoredStack.push(this.operationsHistoryStack[this.operationsHistoryStack.length - 1]);\r\n        this.operationsHistoryStack.pop();\r\n        let iOper = this.operationsRestoredStack[this.operationsRestoredStack.length - 1];\r\n        iOper.onRestore(this.component, iOper.inputData, iOper.outputData);\r\n    }\r\n    undoRestoring() {\r\n        this.operationsHistoryStack.push(this.operationsRestoredStack[this.operationsRestoredStack.length - 1]);\r\n        this.operationsRestoredStack.pop();\r\n        let iOper = this.operationsHistoryStack[this.operationsHistoryStack.length - 1];\r\n        iOper.onRestore(this.component, iOper.inputData, iOper.outputData);\r\n    }\r\n    restoreOperations(number) {\r\n        for(let i = 0;i<number;i++) this.restoreLastOperation();\r\n    }\r\n    resumeAll() {\r\n        for(let oper in this.operationsHistoryStack) {\r\n            if(this.operationsHistoryStack[oper].type==2) this.operationsHistoryStack[oper].onResume();\r\n        }\r\n    }\r\n    resume(filter, firstOccur=false) {\r\n        for(let oper in this.operationsHistoryStack) {\r\n            let res = filter(this.operationsHistoryStack[oper], oper);\r\n            if(this.operationsHistoryStack[oper].type==2 && res) this.operationsHistoryStack[oper].onResume();\r\n            if(res && firstOccur) break;\r\n        }\r\n    }\r\n    setTypeRange() {\r\n\r\n    }\r\n    saveStacksSessions() {\r\n        let accessHash = this.component.constructor.name+\"#\"+cyrb53(this.component.constructor.toString());\r\n        window.sessionStorage.setItem(\"jumper_c_\"+accessHash, this.toString());\r\n        let hl = \"\", rl = \"\";\r\n        for(let ha in this.operationsHistoryStack) { if(this.operationsHistoryStack[ha].type==3) { hl += this.operationsHistoryStack[ha].toString().replace(/\\&/g, \"\\\\&\"); if(ha!=this.operationsHistoryStack.length - 1) hl += \"&\"; } }\r\n        window.sessionStorage.setItem(\"jumper_sh_\"+accessHash, hl);\r\n        for(let ra in this.operationsRestoredStack) { if(this.operationsHistoryStack[ra].type==3) { rl += this.operationsRestoredStack[ra].toString().replace(/\\&/g, \"\\\\&\"); if(ra!=this.operationsRestoredStack.length - 1) rl += \"&\"; } }\r\n        window.sessionStorage.setItem(\"jumper_sr_\"+accessHash, rl);\r\n    }\r\n    restoreStacksSessions() {\r\n        var startActionsRestoringTime = microtime(true);\r\n        let resActions = null, accessHash = this.component.constructor.name+\"#\"+cyrb53(this.component.constructor.toString());\r\n        if(resActions = window.sessionStorage.getItem(\"jumper_c_\"+accessHash)!=null) {\r\n            try {\r\n            this.lastAction = \"operationsLoad\";\r\n            resActions = splitByParsing(resActions, \";\", \"/\");\r\n            let jumperS1 = window.sessionStorage.getItem(\"jumper_sh_\"+accessHash);\r\n            if(jumperS1!=null) {\r\n                jumperS1 = splitByParsing(jumperS1, \"&\", \"/\");\r\n                console.log(jumperS1);\r\n                let outCpt = {};\r\n                for(let onceRes in jumperS1) {\r\n                    console.log(jumperS1[onceRes]);\r\n                    if(this.stackHistorySize>=this.operationsHistoryStack.length) {\r\n                    let jumperAParams = splitByParsing(jumperS1[onceRes], \";\", \"/\"), jumperA = new (this.getOperationByNamespace(jumperAParams[0]));\r\n                    console.log(jumperAParams);\r\n                    let cd = jumperAParams[1].split(/[- :]/);\r\n                    jumperA.creationDate = new Date(Date.UTC(cd[0], cd[1]-1, cd[2], cd[3], cd[4], cd[5]));\r\n                    let ud = jumperAParams[2].split(/[- :]/);\r\n                    jumperA.updateDate = new Date(Date.UTC(ud[0], ud[1]-1, ud[2], ud[3], ud[4], ud[5]));\r\n                    jumperA.outputData = JSONSafteyParse(jumperAParams[3], {}, (err)=>{});\r\n                    jumperA.lastInputData = JSONSafteyParse(jumperAParams[4], {}, (err)=>{});\r\n                    console.log(jumperA);\r\n                    outCpt = jumperA.onStore(this.component, jumperA.lastInputData, jumperA.outputData) || {};\r\n                    this.operationsHistoryStack.push(jumperA);\r\n                    jumperA.onResume(this.component, jumperA.lastInputData);\r\n                    \r\n                    }\r\n                }\r\n                this.component.setState(Object.assign(outCpt, {actionHandler:this.dump()}));\r\n            }\r\n            let jumperS2 = window.sessionStorage.getItem(\"jumper_sr_\"+accessHash);\r\n            if(jumperS2!=null) {\r\n                jumperS2 = splitByParsing(jumperS2, \"&\", \"/\");\r\n                let outCpt = {};\r\n                for(let onceRes in jumperS2) {\r\n                    if(this.stackRestoredSize>=this.operationsRestoredStack.length) {\r\n                    let jumperAParams = splitByParsing(jumperS2[onceRes], \";\", \"/\"), jumperA = new (this.getOperationByNamespace(jumperAParams[0]));\r\n                    let cd = jumperAParams[1].split(/[- :]/);\r\n                    jumperA.creationDate = new Date(Date.UTC(cd[0], cd[1]-1, cd[2], cd[3], cd[4], cd[5]));\r\n                    let ud = jumperAParams[2].split(/[- :]/);\r\n                    jumperA.updateDate = new Date(Date.UTC(ud[0], ud[1]-1, ud[2], ud[3], ud[4], ud[5]));\r\n                    jumperA.outputData = JSONSafteyParse(jumperAParams[3], {}, (err)=>{});\r\n                    jumperA.lastInputData = JSONSafteyParse(jumperAParams[4], {}, (err)=>{});\r\n                    outCpt = jumperA.onStore(this.component, jumperA.lastInputData, jumperA.outputData) || {};\r\n                    this.operationsRestoredStack.push(jumperA, jumperA.lastInputData);\r\n                    jumperA.onResume(this.component, jumperA.lastInputData);\r\n                    }\r\n                }\r\n                this.component.setState(Object.assign(outCpt, {actionHandler:this.dump()}));\r\n            }\r\n            } catch(e) {\r\n                console.error(e);\r\n            }\r\n            \r\n        }\r\n        return microtime(true) - startActionsRestoringTime;\r\n    }\r\n    toString() { return `${cyrb53(this.component.constructor.toString())}h;${cyrb53(this.component.constructor.toString())}r;${this.lastAction}`; }\r\n    dump() { return `${this.lastAction}`; }\r\n    /* Events */\r\n    onRestore() {/* Native Code */}\r\n}\r\n\r\nexport class ActionOperation {\r\n    name = \"\";\r\n    description = \"\";\r\n    type = -1;\r\n    mark = \"all\";\r\n    creationDate = new Date();\r\n    updateDate = new Date();\r\n    lastInputData = {};\r\n    outputData = {};\r\n    constructor(mark=\"all\", name, desc=\"\", type=1) {\r\n        this.mark = mark;\r\n        this.name = name;\r\n        this.description = desc;\r\n        this.type = type;\r\n    }\r\n    onStart(c, i, o) {/* Native Code */}\r\n    onStore(c, i, o) {/* Native Code */}\r\n    onRestore() {/* Native Code */}\r\n    onFlush() {/* Native Code */}\r\n    onUpdate() {/* Native Code */}\r\n    toString() {\r\n        return `${this.constructor.name};${this.creationDate.toISOString().slice(0, 19).replace('T', ' ')};${this.updateDate.toISOString().slice(0, 19).replace('T', ' ')};${JSON.stringify(this.outputData)};${JSON.stringify(this.lastInputData)}`;\r\n    }\r\n}\r\n\r\nexport class ActionEventsOperation extends ActionOperation {\r\n    type = 2;\r\n    events = [];\r\n\r\n    constructor(mark=\"all\") {\r\n        super(mark);\r\n    }\r\n\r\n    onRestore() {this.restoreEventEntries();}\r\n\r\n    addEventEntry(elRef, evName, evFn) {\r\n        this.events.push({element:elRef, eventName:evName, event:evFn});   \r\n    }\r\n\r\n    restoreEventEntries() {\r\n        this.events.forEach((val, ind, arr)=>{\r\n            if(typeof val.element==\"string\") {\r\n                let el = document.querySelector(val.element);\r\n                el.addEventListener(val.eventName, val.event);\r\n            } else {\r\n                val.element.addEventListener(val.eventName, val.event);\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport class ActionResumeOperation extends ActionOperation {\r\n    type = 3;\r\n    events = [];\r\n\r\n    constructor(mark=\"all\") {\r\n        super(mark);\r\n    }\r\n    onResume(s, i) {/* Native Code */}\r\n}\r\n\r\nexport default { ActionsStack, ActionOperation, ActionResumeOperation };","C:\\xampp\\htdocs\\LabEnv\\labenv\\src\\libraries\\Browser.jsx",["346","347","348","349","350","351","352"],"import ReactDOM from 'react-dom';\r\n//import Jumper, { JumperModule } from 'jumper';\r\n\r\n/* Browser Jumper */\r\nexport const JumperBrowser = new class {\r\n    constructor() {\r\n        Object.defineProperty(window, \"subwindow\", { value:null, enumerable:false, writable:true })\r\n    }\r\n    async share(shareData, component=null) {\r\n        try {\r\n            if(typeof navigator.share!=\"undefined\") {\r\n                await navigator.share(shareData);\r\n            } else if(component!=null) {\r\n                await this.shareViaComponent(shareData, component);\r\n            }\r\n        } catch(ShareError) {\r\n            console.error(ShareError);\r\n        }\r\n    }\r\n    async shareViaComponent(shareData, ShareComponent) {\r\n        try {\r\n            const initiationComponent = <ShareComponent terminateWindow={this.closeWindow} {...shareData}/>;\r\n            await this.createWindow(initiationComponent);\r\n        } catch(ShareError) {\r\n            console.error(ShareError);\r\n        }\r\n    }\r\n    async createWindow(component) {\r\n        if(document.getElementById(\"subwindowContainer\")!=null) return false;\r\n        var windowContainer = document.createElement(\"div\"), windowStyles = `#subwindowContainer { position:fixed; left: 0; top: 0; height: 100vh; width: 100%; background: rgba(0, 0, 0, 0.9); display: flex; justify-content: center; align-items: center; }`, stylesContainer = document.createElement(\"style\"), subwindowHolder = document.createElement(\"div\");\r\n        windowContainer.id = \"subwindowContainer\";\r\n            stylesContainer.setAttribute(\"type\", \"text/css\");\r\n            /* Registered Components Styles */\r\n            let subwindowComponentCSS = \"\";\r\n            console.log(component);\r\n            if(typeof component.type.styles!=\"undefined\") {\r\n            for(let styleContName in component.type.styles) {\r\n                for(let styleContDef in component.type.styles[styleContName]) {\r\n                    subwindowComponentCSS += ` #subwindowContainer ${styleContDef.replace(\"&\", styleContName)} {`;\r\n                    for(let propDef in component.type.styles[styleContName][styleContDef]) {\r\n                        subwindowComponentCSS += `${propDef}:${component.type.styles[styleContName][styleContDef][propDef]};`;\r\n                    }\r\n                    subwindowComponentCSS += '}';\r\n                }\r\n            }};\r\n            /* END Registered Component Styles */\r\n            stylesContainer.textContent = windowStyles + subwindowComponentCSS;\r\n            windowContainer.appendChild(stylesContainer);\r\n            subwindowHolder.id = \"subwindowHolder\";\r\n            windowContainer.appendChild(subwindowHolder);\r\n        document.body.appendChild(windowContainer);\r\n        window.subwindow = windowContainer;\r\n        ReactDOM.render(component, subwindowHolder);\r\n    }\r\n    async closeWindow() {\r\n        if(window.subwindow==null) { console.error(\"Current subwindow context is inactive\"); return false; }\r\n        window.subwindow.remove();\r\n        window.subwindow = null;\r\n    }\r\n    async terminateWindow() {\r\n\r\n    }\r\n    get language() {\r\n        if(typeof window.navigator.languages[0]!=\"undefined\") return window.navigator.languages[0];\r\n        if(typeof window.navigator.language!=\"undefined\") return window.navigator.language;\r\n        else if(typeof window.navigator.userLanguage!=\"undefined\") return window.navigator.userLanguage;\r\n    }\r\n    get clipboard() {\r\n        var lastError = null;\r\n        return new class {\r\n            copyText(targetStr) {\r\n                try {\r\n                    if(typeof targetStr!==\"string\") return false;\r\n                    if(typeof document.execCommand!=\"undefined\") {\r\n                        if(typeof document.queryCommandSupported!=\"undefined\") {\r\n                            if(document.queryCommandSupported('copy')) {\r\n                                var avoidCont = document.createElement(\"textarea\");\r\n                                avoidCont.style = { visibility: \"hidden\", position:\"absolute\", left:\"-1000px\", top: \"-1000px\" };\r\n                                avoidCont.value = targetStr.toString();\r\n                                document.body.appendChild(avoidCont);\r\n                                avoidCont.select();\r\n                                let res = document.execCommand('copy');\r\n                                document.body.removeChild(avoidCont);\r\n                                console.log(targetStr);\r\n                                return !!res;\r\n                            } else return false;\r\n                        } else {\r\n                            let res = document.execCommand('copy');\r\n                            return !!res;\r\n                        }\r\n                    } else if(typeof window.clipboardData!=\"undefined\") {\r\n                        window.clipboardData.setData('Text', targetStr);\r\n                    } else throw \"No Method\";\r\n                } catch(clipboardError) {\r\n                    console.error(\"Jumper.Browser.Clipboard.Error: \"+clipboardError.toString());\r\n                }\r\n            }\r\n            async copyTextAwaited(targetStr) {\r\n                try {\r\n                    await navigator.clipboard.writeText(targetStr);\r\n                } catch(clipboardError) {\r\n                    console.error(\"Jumper.Browser.Clipboard.Error: \"+clipboardError.toString());\r\n                }\r\n            }\r\n            copy(copyRes) {\r\n                switch(typeof copyRes) {\r\n                    case \"string\":\r\n                        this.copyText(copyRes);\r\n                }\r\n            }\r\n            async copyAwiated(copyRes) {\r\n                switch(typeof copyRes) {\r\n                    case \"string\":\r\n                        await this.copyTextAwaited(copyRes);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default JumperBrowser;","C:\\xampp\\htdocs\\LabEnv\\labenv\\src\\libraries\\Compression.jsx",["353"],"/* Compression Library by Grano22 */\r\nexport function compressStringToBufer(str) {\r\n    var buf = new ArrayBuffer(str.length*2);\r\n    var bufView = new Uint32Array(buf);\r\n    for (var i=0, strLen=str.length; i<strLen; i++) {\r\n        bufView[i] = str.charCodeAt(i);\r\n        console.log(bufView,  bufView.toString().replace(\",\", \"\"));\r\n    }\r\n    return buf;\r\n}\r\n\r\nexport function compressString(str, asArray=false, dictSize=256) {\r\n\tlet dictionary = {}, uncompressed = str, c, wc, w = \"\", ASCIIRes = asArray ? [] : '';\r\n\tfor (let i = 0; i < dictSize; i += 1) dictionary[String.fromCharCode(i)] = i;\r\n\tfor (let i = 0; i < uncompressed.length; i += 1) {\r\n\t\tc = uncompressed.charAt(i);\r\n\t\twc = w + c;\r\n\t\tif (dictionary.hasOwnProperty(wc)) { w = wc; } else {\r\n\t\t\tif(asArray) ASCIIRes.push(dictionary[w]); else ASCIIRes += String.fromCharCode(dictionary[w]);\r\n\t\t\tdictionary[wc] = dictSize++;\r\n\t\t\tw = String(c); }\r\n\t}\r\n\tif (w !== \"\") if(asArray) ASCIIRes.push(dictionary[w]); else ASCIIRes += String.fromCharCode(dictionary[w]);\r\n\treturn ASCIIRes;\r\n}\r\n\r\nexport function decompressString(str, dictSize=256) {\r\n    let dictionary = [], compressed = str, w, result, k, entry = \"\";\r\n    for (let i = 0; i < dictSize; i += 1) dictionary[i] = String.fromCharCode(i);\r\n    if(compressed && typeof compressed === 'string') {\r\n        let tmp = [];\r\n        for(let i = 0; i < compressed.length; i += 1) tmp.push(compressed[i].charCodeAt(0));\r\n        compressed = tmp; tmp = null;\r\n    }\r\n    w = String.fromCharCode(compressed[0]);\r\n    result = w;\r\n    for (let i = 1; i < compressed.length; i += 1) {\r\n        k = compressed[i];\r\n        if (dictionary[k]) {\r\n            entry = dictionary[k];\r\n        } else {\r\n            if (k === dictSize) entry = w + w.charAt(0); else return null;\r\n        }\r\n        result += entry;\r\n        dictionary[dictSize++] = w + entry.charAt(0);\r\n        w = entry;\r\n    }\r\n    return result;\r\n}\r\n\r\n/* Encoding */\r\nexport function UTF8ToHex(str) {\r\n    return Array.from(str).map(c => \r\n        c.charCodeAt(0) < 128 ? c.charCodeAt(0).toString(16) : \r\n        encodeURIComponent(c).replace(/\\%/g,' Ox').substring(1)\r\n    ).join('');\r\n}\r\n\r\nexport function HexToUTF8() {\r\n\r\n}\r\n\r\nexport function UTF8ToBin(str) {\r\n    var utf8 = unescape(encodeURIComponent(str));\r\n    var arr = [];\r\n    for (var i = 0; i < utf8.length; i++) {\r\n        arr.push(utf8.charCodeAt(i));\r\n    }\r\n    return arr;\r\n}\r\n\r\nexport function encodeUTF16(str) {\r\n    var buf = new ArrayBuffer(str.length*2), bufView = new Uint16Array(buf);\r\n    for (var i=0, strLen=str.length; i < strLen; i++) bufView[i] = str.charCodeAt(i);\r\n    return bufView;\r\n}\r\n\r\nexport function encodeUTF32(str) {\r\n    var buf = new ArrayBuffer(str.length*4), bufView = new Uint32Array(buf);\r\n    for (var i=0, strLen=str.length; i < strLen; i++) bufView[i] = str.charCodeAt(i);\r\n    return bufView;\r\n}","C:\\xampp\\htdocs\\LabEnv\\labenv\\src\\libraries\\Cryptography.jsx",["354"],"export function basicHashString(str) {\r\n    var hash = 0;\r\n    if (str.length == 0) return hash;\r\n    for (var i = 0; i < str.length; i++) {\r\n        var char = str.charCodeAt(i);\r\n        hash = ((hash<<5)-hash)+char;\r\n        hash = hash & hash;\r\n    }\r\n    return Math.abs(hash);\r\n}\r\n\r\nexport function cyrb53(str, seed = 0) {\r\n    let h1 = 0xdeadbeef ^ seed, h2 = 0x41c6ce57 ^ seed;\r\n    for (let i = 0, ch; i < str.length; i++) {\r\n        ch = str.charCodeAt(i);\r\n        h1 = Math.imul(h1 ^ ch, 2654435761);\r\n        h2 = Math.imul(h2 ^ ch, 1597334677);\r\n    }\r\n    h1 = Math.imul(h1 ^ (h1>>>16), 2246822507) ^ Math.imul(h2 ^ (h2>>>13), 3266489909);\r\n    h2 = Math.imul(h2 ^ (h2>>>16), 2246822507) ^ Math.imul(h1 ^ (h1>>>13), 3266489909);\r\n    return 4294967296 * (2097151 & h2) + (h1>>>0);\r\n};","C:\\xampp\\htdocs\\LabEnv\\labenv\\src\\libraries\\DataProcessing.jsx",[],"C:\\xampp\\htdocs\\LabEnv\\labenv\\src\\libraries\\Events.jsx",["355","356","357","358","359","360","361","362","363","364","365","366"],"/* Events by Grano22 */\r\nexport function FloatingContainerEvent(elEvent, evType=\"toggle\", tgClass=\"floatingContainer\", tgActiveClass=\"active\") {\r\n    try {\r\n        if(!(elEvent instanceof Event) && elEvent.__proto__.constructor.name!=\"SyntheticBaseEvent\") throw \"Not event type\";\r\n        let currCont = elEvent.currentTarget;\r\n        for(let contChild in currCont.children) { \r\n            if(currCont.children.hasOwnProperty(contChild) && currCont.children[contChild].classList.contains(tgClass)) {\r\n                switch(evType) {\r\n                    case \"toggle\":\r\n                        currCont.children[contChild].classList.toggle(tgActiveClass);\r\n                    break;\r\n                    case \"add\":\r\n                        currCont.children[contChild].classList.add(tgActiveClass);\r\n                    break;\r\n                    case \"remove\":\r\n                        currCont.children[contChild].classList.remove(tgActiveClass);\r\n                }\r\n            }\r\n        }\r\n    } catch(EventError) {\r\n        console.error(EventError);\r\n    }\r\n}\r\n\r\nexport function FloatingContainerNextToEvent(elEvent, evType=\"toggle\", tgActiveClass=\"active\") {\r\n    try {\r\n        if(!(elEvent instanceof Event) && elEvent.__proto__.constructor.name!==\"SyntheticBaseEvent\") throw \"Not event type\";\r\n        let currCont = elEvent.currentTarget;\r\n        for(let contChild in currCont.parentElement.children) {\r\n            if(currCont.parentElement.children.hasOwnProperty(contChild) && currCont.parentElement.children[contChild]==currCont) {\r\n                let nextCont = currCont.parentElement.children[parseInt(contChild) + 1];\r\n                switch(evType) {\r\n                    case \"toggle\":\r\n                        nextCont.classList.toggle(tgActiveClass);\r\n                    break;\r\n                    case \"add\":\r\n                        nextCont.classList.add(tgActiveClass);\r\n                    break;\r\n                    case \"remove\":\r\n                        nextCont.classList.remove(tgActiveClass);\r\n                }\r\n                break;\r\n            }\r\n        }\r\n    } catch(EventError) {\r\n        console.error(EventError);\r\n    }\r\n}\r\n\r\n\r\nexport function FloatingContainerCurrentEvent(elEvent, evType=\"toggle\", tgActiveClass=\"active\") {\r\n    try {\r\n        if(!(elEvent instanceof Event) && elEvent.__proto__.constructor.name!=\"SyntheticBaseEvent\") throw \"Not event type\";\r\n        let currCont = elEvent.currentTarget;\r\n        switch(evType) {\r\n            case \"toggle\":\r\n                currCont.classList.toggle(tgActiveClass);\r\n            break;\r\n            case \"add\":\r\n                currCont.classList.add(tgActiveClass);\r\n            break;\r\n            case \"remove\":\r\n                currCont.classList.remove(tgActiveClass);\r\n        }\r\n    } catch(EventError) {\r\n        console.error(EventError);\r\n    }\r\n}\r\n\r\n/*export function HoverableContainerEvent(elEvent, evType=\"toggle\", tgClass=\"floatingContainer\", tgContentClass=\"\", tgActiveClass=\"active\") {\r\n    try {\r\n        if(!(elEvent instanceof Event)) throw \"Not event type\";\r\n        let currCont = elEvent.currentTarget;\r\n        for(let contChild in currCont.parentElement.children) {\r\n            if(currCont.children[contChild]==currCont) {\r\n                let nextCont = currCont.children[contChild + 1];\r\n                switch(evType) {\r\n                    case \"expand\":\r\n                        nextCont.classList.add(tgActiveClass);\r\n                }\r\n                break;\r\n            }\r\n        }\r\n    } catch(EventError) {\r\n        console.error(EventError);\r\n    }\r\n}*/\r\n\r\nexport function HoverableContainerEvent(elEvent, evType=\"toggle\", tgActiveClass=\"active\") {\r\n    try {\r\n        if(!(elEvent instanceof Event) && elEvent.__proto__.constructor.name!=\"SyntheticBaseEvent\") throw \"Not event type\";\r\n        let currCont = elEvent.currentTarget;\r\n        switch(evType) {\r\n            case \"toggle\":\r\n                currCont.classList.toggle(tgActiveClass);\r\n                break;\r\n            case \"expand\":\r\n                currCont.classList.add(tgActiveClass);\r\n                break;\r\n            case \"fold\":\r\n                currCont.classList.remove(tgActiveClass);\r\n                break;\r\n        }\r\n    } catch(EventError) {\r\n        console.error(EventError);\r\n    }\r\n}\r\n\r\nexport class JumperEvents {\r\n\r\n}","C:\\xampp\\htdocs\\LabEnv\\labenv\\src\\libraries\\IO.jsx",[],"C:\\xampp\\htdocs\\LabEnv\\labenv\\src\\libraries\\MathAdv.jsx",["367","368","369","370","371","372","373","374","375","376"],"/* MathAdv Library V1 */\r\nexport const MathAdv = new class {\r\n    sum() { let sum = 0; console.log(arguments); for(let sumarg in arguments) sum+=parseFloat(arguments[sumarg]);return sum;}\r\n    artavg() { let sum = this.sum.apply(this, arguments);return sum/arguments.length;}\r\n    powAll() { let powers = 1;for(let powarg in arguments) powers*= parseFloat(arguments[powarg]);return powers;}\r\n    geoavg() {let powers = this.powAll.apply(this, arguments);return Math.pow(powers, 1/powers.length);}\r\n    fharmavg(){let par = 0;for(let parArg in arguments) par += 1/parseFloat(parArg);return arguments.length/par;}\r\n\r\n    sigma() {\r\n\r\n    }\r\n}\r\n\r\nexport class ComplexNumber {\r\n    _rz = 0;\r\n    _im = 0;\r\n\r\n    constructor(rz, im) {\r\n        this._rz = rz;\r\n        this._im = im;\r\n        /*return new Proxy(this, {\r\n            get: function(complexn, fieldname) {\r\n                switch(fieldname) {\r\n                    default: return ()=>[complexn._rz, complexn._im];\r\n                }\r\n            }\r\n        });*/\r\n        Object.defineProperties(this, {\r\n            valueOf:{ \r\n                value:function() { return [ this._rz, this._im]; },\r\n                configurable:false,\r\n                enumerable:false,\r\n                writable:false\r\n            },\r\n            toString:{\r\n                value:function() {  }\r\n            }\r\n        });\r\n    }\r\n\r\n    get rz() {return this._rz;}\r\n    get im() {return this._im;}\r\n\r\n    sum() {\r\n        let rzSum = 0, imSum = 0;\r\n        for(let arg in arguments) {\r\n            rzSum += arguments[arg].rz;\r\n            imSum += arguments[arg].im;\r\n        }\r\n        return new ComplexNumber(rzSum, imSum);\r\n    }\r\n\r\n    pow() {\r\n\r\n    }\r\n\r\n    sqrt() {\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport class Matrix {\r\n    _accessor = [];\r\n\r\n    constructor() {\r\n        let matrixMaxRowsLen = 0;\r\n        try {\r\n            for(let matrixRow in arguments) {\r\n                if(Array.isArray(arguments[matrixRow])) matrixMaxRowsLen = Math.max(matrixMaxRowsLen, arguments[matrixRow].length);\r\n            }\r\n            for(let matrixRow in arguments) {\r\n                let matRow = new Array(matrixMaxRowsLen).fill(0);\r\n                for(let j = 0;j<arguments[matrixRow].length;j++) matRow[j] = arguments[matrixRow][j];\r\n                this._accessor.push(matRow);\r\n            }\r\n        } catch(MatrixError) {\r\n            console.error(MatrixError);\r\n        }\r\n    }\r\n    getItem(indexRow, indexColumn) {return this._accessor[indexRow][indexColumn]}\r\n    setItem(newValue, indexRow, indexColumn) {\r\n        try {\r\n            if(!isNaN(parseFloat(newValue))) this._accessor[indexRow][indexColumn] = parseFloat(newValue); else throw \"Matrix items must be a number or number convertable value!\";\r\n        } catch(MatrixError) {\r\n            console.error(MatrixError);\r\n        }\r\n    }\r\n    getRow(indexRow) {return this._accessor[indexRow];}\r\n    getColumn(indexColumn) {\r\n        let column = [];\r\n        for(let matrixRow in this._accessor) column.push(this._accessor[matrixRow][indexColumn]);\r\n        return column;\r\n    }\r\n    transparent() {\r\n        let transparented = [];\r\n        for(let i = 0;i<this._accessor.length;i++) transparented.push(this.getColumn(i));\r\n        return new Matrix(...transparented);\r\n    }\r\n    getDiagonalToRight(fromRowIndex=0, fromColumnIndex=0, customAccessor=null) {\r\n        if(customAccessor==null) customAccessor = this._accessor;\r\n        let outputRow = [];\r\n        for(let matrixRow in customAccessor) {\r\n            for(let matrixColumn in customAccessor[matrixRow]) {\r\n                if(matrixRow==fromRowIndex && matrixColumn==fromColumnIndex) {\r\n                    outputRow.push(customAccessor[matrixRow][matrixColumn]);\r\n                    fromRowIndex++;\r\n                    fromColumnIndex++;\r\n                }\r\n            }\r\n        }\r\n        return outputRow;\r\n    }\r\n    getDiagonalToLeft(fromRowIndex=0, fromColumnIndex=-1, customAccessor=null) {\r\n        if(customAccessor==null) customAccessor = this._accessor;\r\n        if(fromColumnIndex<0) fromColumnIndex = this.columnLength - 1;\r\n        let outputRow = [];\r\n        for(let matrixRow in customAccessor) {\r\n            for(let matrixColumn = customAccessor[matrixRow].length - 1;matrixColumn>=0;matrixColumn--) {\r\n                if(matrixRow==fromRowIndex && matrixColumn==fromColumnIndex) {\r\n                    outputRow.push(customAccessor[matrixRow][matrixColumn]);\r\n                    fromRowIndex++;\r\n                    fromColumnIndex--;\r\n                }\r\n            }\r\n        }\r\n        return outputRow;\r\n    }\r\n    getDiagonalRevesedToLeft(fromRowIndex=-1, fromColumnIndex=-1) {\r\n        if(fromRowIndex<0) fromRowIndex = this.rowLength - 1;\r\n        if(fromColumnIndex<0) fromColumnIndex = this.columnLength - 1;\r\n        let outputRow = [];\r\n        for(let matrixRow = this._accessor.length - 1;matrixRow>=0;matrixRow--) {\r\n            for(let matrixColumn = this._accessor[matrixRow].length - 1;matrixColumn>=0;matrixColumn--) {\r\n                if(matrixRow==fromRowIndex && matrixColumn==fromColumnIndex) {\r\n                    outputRow.push(this._accessor[matrixRow][matrixColumn]);\r\n                    fromRowIndex--;\r\n                    fromColumnIndex--;\r\n                }\r\n            }\r\n        }\r\n        return outputRow;\r\n    }\r\n    calculateMainDeterminant() {\r\n        let fromLeftSum = 0, fromRightSum = 0, combinedAccessor = [...this._accessor, ...this._accessor];\r\n        if(this._accessor.length>2) {\r\n        for(let matrixRow in this._accessor) {\r\n            fromLeftSum += this.getDiagonalToRight(matrixRow, 0, combinedAccessor).reduce((prev, next)=>prev*next);\r\n            //console.log(fromLeftSum);\r\n            fromRightSum += this.getDiagonalToLeft(matrixRow, -1, combinedAccessor).reduce((prev, next)=>prev*next);\r\n            //console.log(fromRightSum);\r\n        }\r\n        } else { fromLeftSum = this.getDiagonalToRight(0, 0, combinedAccessor).reduce((prev, next)=>prev*next); fromRightSum = this.getDiagonalToLeft(0, -1, combinedAccessor).reduce((prev, next)=>prev*next); }\r\n        return fromLeftSum - fromRightSum;\r\n    }\r\n\r\n    range() {\r\n        let impliter = Math.min(this.rowLength, this.columnLength);\r\n        if(this.rowLength>this.columnLength) {\r\n            let moverWidth = 0, maxWidth = this.rowLength - impliter;\r\n            for(;moverWidth<maxWidth;moverWidth++) {\r\n                \r\n            }\r\n        } else {\r\n            let movedHeight = 0, maxHeight = this.columnLength - impliter;\r\n\r\n        }\r\n    }\r\n\r\n    inversed() {\r\n\r\n    }\r\n\r\n    get lastRow() {return this._accessor[this._accessor.length - 1];}\r\n    get lastColumn() {return this.getColumn(this.columnLength);}\r\n    get rowLength() { let len = 0; for(let matrixRow in this._accessor) len = Math.max(len, this._accessor[matrixRow].length); return len; }\r\n    get columnLength() {return this._accessor.length}\r\n    get length() {return this.columnLength * this.rowLength;}\r\n\r\n    toString() {\r\n        let outputStr = \"\", totalLen;\r\n        for(let matrixRow in this._accessor) totalLen = Math.max(totalLen, this._accessor[matrixRow].join(\" \").length);\r\n        for(let matrixRow in this._accessor) {\r\n            outputStr += '|';\r\n            for(let matrixColumn in this._accessor) {\r\n                let repeater = (totalLen/this._accessor[matrixRow].length)-this._accessor[matrixRow][matrixColumn].length;\r\n                outputStr += `${\"\".repeat(repeater)}${this._accessor[matrixRow][matrixColumn]}${\"\".repeat(repeater)}`;\r\n            }\r\n            outputStr += '|\\n';\r\n        }\r\n        return outputStr;\r\n    }\r\n}\r\n\r\nexport default MathAdv;","C:\\xampp\\htdocs\\LabEnv\\labenv\\src\\libraries\\MathML.jsx",[],"C:\\xampp\\htdocs\\LabEnv\\labenv\\src\\libraries\\MathParser.jsx",["377","378","379","380","381","382","383","384","385","386","387","388","389","390","391","392","393","394","395","396","397"],"/* Math Parser by Grano22 Dev | V1 */\r\nconst MathConstans = {\r\n    \"e\":Math.e\r\n}\r\n\r\nexport class MathLinearItem {\r\n    _value = null;\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    set value(val) {\r\n        this._value = val;\r\n    }\r\n    get value() {\r\n\r\n    }\r\n}\r\n\r\nexport class MathLinearValue {\r\n\r\n}\r\n\r\nexport class MathLinearOperator {\r\n\r\n}\r\n\r\nexport class MathLinearVariable {\r\n\r\n}\r\n\r\nexport class MathLinearParser {\r\n\r\n    lastNumber = 0;\r\n    lastOperator = \"\";\r\n\r\n    parsedPieces = [];\r\n    lastPieces = [];\r\n    asserts = [];\r\n    operations = [];\r\n    pattern = \"\";\r\n    variables = null;\r\n\r\n    constructor(initPattern=\"\") {\r\n        this.pattern = initPattern;\r\n        if(initPattern!=\"\") this.parse(this.pattern);\r\n    }\r\n\r\n    get assertion() { return this.asserts.map(ae=>ae.join(\" \")).join(\" = \"); }\r\n\r\n    factorial() {\r\n        for(let pieceEl in this.lastPieces) {\r\n            if(typeof this.lastPieces[pieceEl]==\"string\" && this.lastPieces[pieceEl].indexOf(\"!\")==0) {\r\n                let rep = parseFloat(this.lastPieces[pieceEl].replace(\"!\", \"\")), sp = 1;\r\n                if(isFinite(rep)) {\r\n                    for(let i = rep;i>0;i--) sp = sp * i;\r\n                    this.lastPieces[pieceEl] = sp;\r\n                    sp = 1;\r\n                }\r\n            }\r\n        }\r\n        this.asserts.push(this.lastPieces.map(v=>v));\r\n    }\r\n\r\n    multiplication() {\r\n        return this.beetwenOperation(\"*\", (lastNum, nextNum)=>{ \r\n           return isFinite(lastNum) && isFinite(nextNum) ? parseFloat(lastNum) * parseFloat(nextNum) : lastNum + nextNum;\r\n        });\r\n    }\r\n\r\n    diff() {\r\n        return this.beetwenOperation(\"-\", (lastNum, nextNum)=>parseFloat(lastNum) - parseFloat(nextNum))\r\n    }\r\n\r\n    sum() {\r\n        return this.beetwenOperation(\"+\", (lastNum, nextNum)=>parseFloat(lastNum) + parseFloat(nextNum))\r\n    }\r\n\r\n    division() {\r\n        return this.beetwenOperation(\"/\", (lastNum, nextNum)=>isFinite(lastNum) && isFinite(nextNum) ? parseFloat(lastNum) / parseFloat(nextNum) : lastNum + \"/\" + nextNum);\r\n    }\r\n\r\n    pow() {\r\n        return this.beetwenOperation(\"^\", (lastNum, nextNum)=>isFinite(lastNum) && isFinite(nextNum) ? Math.pow(parseFloat(lastNum), parseFloat(nextNum)) : lastNum + \"^\" + nextNum);\r\n    }\r\n\r\n    beetwenOperation(symbol, returnVal, requireNum=false) {\r\n        try {\r\n            for(let pieceEl in this.lastPieces) {\r\n                if(this.lastPieces[pieceEl]==symbol) {\r\n                    if(typeof this.lastPieces[parseInt(pieceEl) - 1]!=\"undefined\") {\r\n                        if(typeof this.lastPieces[parseInt(pieceEl) + 1]!=\"undefined\") {\r\n                        let lastNum = this.lastPieces[parseInt(pieceEl) - 1], nextNum = this.lastPieces[parseInt(pieceEl) + 1];\r\n                        if(!requireNum || (isFinite(lastNum) && isFinite(nextNum))) {\r\n                            this.lastPieces[pieceEl] = returnVal(lastNum, nextNum);\r\n                            this.lastPieces.splice(parseInt(pieceEl) - 1, 1);\r\n                            this.lastPieces.splice(parseInt(pieceEl), 1);\r\n                        } else throw \"This operator requires number beetwen operator \"+symbol;\r\n                        } else throw \"Next item is unavailable\";\r\n                    } else throw \"Previous item is unavailable\";\r\n                }\r\n            }\r\n            this.asserts.push(this.lastPieces.map(v=>v));\r\n            return this.lastPieces;\r\n        } catch(ErrorBeetweenOperation) {\r\n            console.error(ErrorBeetweenOperation);\r\n            return null;\r\n        }\r\n    }\r\n\r\n    getOperations() {\r\n        for(let pieceName of this.lastPieces) {\r\n            switch(pieceName) {\r\n                case \"+\":\r\n                    if(typeof this.operations[5]==\"undefined\") this.operations[20] = \"+\";\r\n                break;\r\n                case \"-\":\r\n                    if(typeof this.operations[5]==\"undefined\") this.operations[19] = \"-\";\r\n                break;\r\n                case \"*\":\r\n                    if(typeof this.operations[5]==\"undefined\") this.operations[18] = \"*\";\r\n                break;\r\n                case \"/\":\r\n                    if(typeof this.operations[5]==\"undefined\") this.operations[17] = \"/\";\r\n                break;\r\n                case \"^\":\r\n                    if(typeof this.operations[5]==\"undefined\") this.operations[16] = \"^\";\r\n                break;\r\n                case \"!\":\r\n                    if(typeof this.operations[5]==\"undefined\") this.operations[15] = \"!\";\r\n                break;\r\n            }\r\n        }\r\n        this.operations = Object.values(this.operations);\r\n        return this.operations.length>0 ? this.operations : null;\r\n    }\r\n\r\n    parse(tgPattern) {\r\n        try {\r\n        this.parsedPieces = [];\r\n        let objsmpl = \"\", inNr = false, openedBrackets = 0, closedBrackets = 0;\r\n        for(let patternSample in tgPattern) {\r\n            if(openedBrackets>0 || tgPattern[patternSample]!=\" \") objsmpl += tgPattern[patternSample];\r\n            switch(tgPattern[patternSample]) {\r\n                case \"(\":\r\n                case \"[\":\r\n                    openedBrackets+=1;\r\n                break;\r\n            }\r\n            if(openedBrackets<=0) {\r\n            switch(tgPattern[patternSample]) {\r\n                case \"+\":\r\n                    if(typeof this.operations[20]==\"undefined\") this.operations[20] = \"+\";\r\n                    this.parsedPieces.push(objsmpl);\r\n                    objsmpl = \"\";\r\n                break;\r\n                case \"-\":\r\n                    if(typeof this.operations[19]==\"undefined\") this.operations[19] = \"-\";\r\n                    this.parsedPieces.push(objsmpl);\r\n                    objsmpl = \"\";\r\n                break;\r\n                case \"*\":\r\n                    if(typeof this.operations[18]==\"undefined\") this.operations[18] = \"*\";\r\n                    this.parsedPieces.push(objsmpl);\r\n                    objsmpl = \"\";\r\n                break;\r\n                case \"/\":\r\n                    if(typeof this.operations[17]==\"undefined\") this.operations[17] = \"/\";\r\n                    this.parsedPieces.push(objsmpl);\r\n                    objsmpl = \"\";\r\n                break;\r\n                case \"^\":\r\n                    if(typeof this.operations[16]==\"undefined\") this.operations[16] = \"^\";\r\n                    this.parsedPieces.push(objsmpl);\r\n                    objsmpl = \"\";\r\n                break;\r\n                case \"!\":\r\n                    if(typeof this.operations[15]==\"undefined\") this.operations[15] = \"!\";\r\n                    inNr = true;\r\n                break;\r\n                default:\r\n                    let patternAsNum = parseFloat(tgPattern[patternSample]);\r\n                    if(!inNr && !isNaN(patternAsNum) && isFinite(patternAsNum)) {\r\n                        if(isNaN(parseFloat(tgPattern[parseInt(patternSample) + 1]))) { this.parsedPieces.push(patternAsNum); objsmpl = \"\"; } else inNr = true;\r\n                    } else if(typeof MathConstans[tgPattern[patternSample]]!=\"undefined\") {\r\n                        this.parsedPieces.push(objsmpl);\r\n                        objsmpl = \"\";\r\n                    } else if(tgPattern[patternSample]!=\".\" && inNr && isNaN(tgPattern[parseInt(patternSample) + 1]) && tgPattern[parseInt(patternSample) + 1]!=\".\") { \r\n                        if(isNaN(parseFloat(objsmpl)) && objsmpl[0]!=\"!\") throw \"Unknown operator before number\";\r\n                        this.parsedPieces.push(parseFloat(objsmpl) || objsmpl);\r\n                        objsmpl = \"\";\r\n                        inNr = false;\r\n                    } else if(!inNr && tgPattern[patternSample]==\".\") {\r\n                        inNr = true;\r\n                    } else if(typeof tgPattern[patternSample]==\"string\" && tgPattern[patternSample].charCodeAt()>=97 && tgPattern[patternSample].charCodeAt()<=122) {\r\n                        this.parsedPieces.push(objsmpl);\r\n                        objsmpl = \"\";\r\n                    } else if(!inNr && tgPattern[patternSample]!=\" \") throw \"Unknown character \"+tgPattern[patternSample]+\" on index \"+patternSample;\r\n            }\r\n            }\r\n            if(openedBrackets>0) {\r\n                switch(tgPattern[patternSample]) { case \")\": case \"]\": closedBrackets+=1; break; }\r\n                if(openedBrackets==closedBrackets) {\r\n                    this.parsedPieces.push(objsmpl);\r\n                    objsmpl = \"\";\r\n                    openedBrackets = 0;\r\n                    closedBrackets = 0;\r\n                }\r\n            }\r\n        }\r\n        this.asserts.push(this.parsedPieces.map(v=>v));\r\n        this.lastPieces = this.parsedPieces.map(v=>v);\r\n        } catch(LinearMathParserError) {\r\n            console.error(LinearMathParserError);\r\n        }\r\n        return this.parsedPieces;\r\n    }\r\n\r\n    calculate() {\r\n        this.lastPieces = this.parsedPieces.map(v=>v);\r\n        if(this.variables!=null) {\r\n            let varsNames = Object.keys(this.variables);\r\n            for(let pieceInd in this.lastPieces) { \r\n                if(varsNames.includes(this.lastPieces[pieceInd])) this.lastPieces[pieceInd] = this.variables[this.lastPieces[pieceInd]];\r\n            } \r\n        }\r\n        for(let operName of this.operations) {\r\n            if(typeof operName!=\"undefined\") {\r\n            if(typeof operName==\"string\") {\r\n                switch(operName) {\r\n                    case \"!\":\r\n                        this.factorial();\r\n                    break;\r\n                    case \"^\":\r\n                        this.pow();\r\n                    break;\r\n                    case \"/\":\r\n                        this.division();\r\n                    break;\r\n                    case \"*\":\r\n                        this.multiplication();\r\n                    break;\r\n                    case \"-\":\r\n                        this.diff();\r\n                    break;\r\n                    case \"+\":\r\n                        this.sum();\r\n                    break;\r\n                }\r\n            }\r\n            }\r\n        }\r\n        this.operations = {};\r\n        let operations = this.getOperations();\r\n        if(operations!=null) return this.calculate(); else return this.lastPieces;\r\n    }\r\n\r\n    bind(inArr) { this.variables = inArr; return this; }\r\n\r\n    changePattern(newPattern) {\r\n        this.pattern = newPattern;\r\n        this.parse(newPattern);\r\n        return this;\r\n    }\r\n\r\n    invertionSumDiff() {\r\n        let outputPattern = \"\";\r\n        for(let pw in this.pattern) {\r\n            switch(this.pattern[pw]) {\r\n                case \"+\":\r\n                    outputPattern += \"-\";\r\n                break;\r\n                case \"-\":\r\n                    outputPattern += \"+\";\r\n                break;\r\n                default: outputPattern += this.pattern[pw];\r\n            }\r\n        }\r\n        this.changePattern(outputPattern);\r\n        return this;\r\n    }\r\n\r\n    invertion() {\r\n        let outputPattern = \"\";\r\n        for(let pw in this.pattern) {\r\n            switch(this.pattern[pw]) {\r\n                case \"+\":\r\n                    outputPattern += \"-\";\r\n                break;\r\n                case \"-\":\r\n                    outputPattern += \"+\";\r\n                break;\r\n                case \"*\":\r\n                    outputPattern += \"/\";\r\n                break;\r\n                case \"/\":\r\n                    outputPattern += \"*\";\r\n                break;\r\n                default: outputPattern += this.pattern[pw];\r\n            }\r\n        }\r\n        this.changePattern(outputPattern);\r\n        return this;\r\n    }\r\n\r\n    toString() {\r\n\r\n    }\r\n\r\n    valueOf() {\r\n\r\n    }\r\n}","C:\\xampp\\htdocs\\LabEnv\\labenv\\src\\libraries\\MathPatterns.jsx",["398","399","400","401","402","403","404","405"],"import MathAdv from './MathAdv';\r\n//Images\r\nimport defaultFormulaImg from '../images/formulas/defaultFormula.png';\r\nimport sumFormulaImg from '../images/formulas/sum.png';\r\nimport sumAvgFormulaImg from '../images/formulas/sumAvg.png';\r\n\r\nexport const MathFormulaTypes = [\r\n    \"arthimetic\",\r\n    \"statistic\",\r\n    \"sampling\",\r\n    \"probability\"\r\n];\r\n\r\nexport class MathFormula {\r\n    name = {\r\n        \"en\":\"Unknown formula\",\r\n        \"pl\":\"Nieznany wzór\"\r\n    };\r\n    description = {\r\n        \"en\":\"Unknown mathematic formula without description\",\r\n        \"pl\":\"Nieznany wzór matematyczny bez opisu\"\r\n    };\r\n    icon = defaultFormulaImg;\r\n\r\n    constructor() {}\r\n    project() {/* Native Code */}\r\n    bind() {/* Native Code */}\r\n    bindArguments() {/* Native Code */}\r\n    calculateSet(setID) { this.calculate.apply(this, this.dataSets[setID]); }\r\n    calculate() {/* Native Code */}\r\n    toFormulaString() {/* Native Code */}\r\n    toFormulaImage() {/* Native Code */}\r\n    toString() {/* Native Code */}\r\n}\r\n\r\nexport class MathSum extends MathFormula {\r\n    name = {\r\n        \"en\":\"Sum of n numbers\",\r\n        \"pl\":\"Suma n liczb\"\r\n    }\r\n    description = {\r\n        \"en\":\"\",\r\n        \"pl\":\"\"\r\n    }\r\n    icon = sumFormulaImg;\r\n    types = [0, 1, 2];\r\n\r\n    project() {\r\n\r\n    }\r\n    calculate() {return MathAdv.sum(...Array.from(arguments));}\r\n}\r\n\r\nexport class ArtimeticAverage extends MathFormula {\r\n    name = {\r\n        \"en\":\"Artimetic average\",\r\n        \"pl\":\"Średnia arytmetyczna\"\r\n    }\r\n    description = {\r\n        \"en\":\"Średnia arytmetyczna pozwoli obliczyć średnią wartość sum wyrazów\",\r\n        \"pl\":\"Średnia arytmetyczna pozwoli obliczyć średnią wartość sum wyrazów\"\r\n    }\r\n    icon = sumAvgFormulaImg;\r\n    types = [1, 2];\r\n    subformulas = [MathSum]\r\n\r\n    project() {\r\n\r\n    }\r\n    calculate() {return MathAdv.artavg.apply(MathAdv, arguments);}\r\n}\r\n\r\nexport class GeometricAverage extends MathFormula {\r\n    name = {\r\n        \"en\":\"Geometric average\",\r\n        \"pl\":\"Średnia geometryczna\"\r\n    }\r\n    description = {\r\n        \"en\":\"\",\r\n        \"pl\":\"\"\r\n    }\r\n    types = [1, 2];\r\n\r\n    calculate() {return MathAdv.geoavg.apply(MathAdv, arguments);}\r\n}\r\n\r\nexport class HarmonicAverage extends MathFormula {\r\n    name = {\r\n        \"en\":\"Harmonic Averange\",\r\n        \"pl\":\"Średnia harmoniczna\"\r\n    }\r\n    description = {\r\n        \"pl\":\"\",\r\n        \"en\":\"\"\r\n    }\r\n    types = [1, 2];\r\n\r\n    calculate() {return MathAdv.harmavg.apply(MathAdv, arguments);}\r\n}\r\n\r\nexport class MathFormulas {\r\n    loadedFormulas = [];\r\n    dataSets = [];\r\n    constructor(formulasLists=[], options={}) {\r\n        this.options = Object.assign({lang:\"pl\"}, options);\r\n        if(formulasLists.length>0) {\r\n            for(let formItem in formulasLists) { if(formulasLists[formItem].prototype instanceof MathFormula) this.loadedFormulas.push(new formulasLists[formItem]); else console.error(\"Given formula must be an child of MathFormula\"); }\r\n        }\r\n    }\r\n    iterator = 0;\r\n    get length() {return this.dataSets.length;}\r\n    createDataset(formula, vars) {\r\n        let newDataSet = new MathDataSet(this.loadedFormulas[formula], vars);\r\n        this.dataSets.push(newDataSet);\r\n        this.iterator++;\r\n    }\r\n    deleteDataset(indx) { this.dataSets.splice(indx, 1); }\r\n    loadFormula(newFormula) {\r\n        if(newFormula.prototype instanceof MathFormula) this.formulasLists.push(new newFormula); else console.error(\"Given formula must be an child of MathFormula\");\r\n    }\r\n    onSelectItem() {/* Native Code */}\r\n    onUpdate() {/* Native Code */}\r\n    toOutput() {\r\n        return this.dataSets.map((oi, i, arr)=>oi.toOutput(i, arr.length));\r\n    }\r\n    render(mode=\"list\", withContainer=true, filter=[]) {\r\n        let self = this;\r\n        switch(mode) {\r\n            default:\r\n            case \"list\": //this.loadedFormulas[parseInt(liNode.id.replace(\"formulaItem\", \"\"))]\r\n                let loadedCopy = this.loadedFormulas;\r\n                if(Array.isArray(filter) && filter.length>0) loadedCopy = loadedCopy.filter(lf=>{ for(let type of lf.types) if(filter.includes(type)) return true; return false; });\r\n                const listItems = loadedCopy.map((f, ind)=>(<li id={\"formulaItem\"+ind} title={f.description[this.options.lang]}><img src={f.icon}/><h4>{f.name[this.options.lang]}</h4></li>));\r\n                return withContainer ? (<ul className=\"propsalList\" onClick={(ev)=>{ if(ev.target.tagName!=\"UL\") { let liNode = function() { let currNode = ev.target; while(currNode.tagName!=\"LI\") currNode = currNode.parentElement; return currNode; }(); self.onSelectItem(ev, parseInt(liNode.id.replace(\"formulaItem\", \"\"))); } }}>\r\n                    {listItems}\r\n                </ul>) : listItems;\r\n        }\r\n    }\r\n    updateAll(newvars) {\r\n        for(let dataSet of this.dataSets) {\r\n            dataSet.update(newvars);\r\n        }\r\n    }\r\n    changeIndex(lastIndex, newInd) {\r\n        let tgIndex = 0, currListItem = null, lastIndexNum = -1;\r\n        for(let item in this.dataSets) if(this.dataSets[item].index==lastIndex) { currListItem = this.dataSets[item]; lastIndexNum = item; }\r\n        if((typeof newInd==\"number\" && newInd<0) || (typeof newInd==\"string\" && (newInd[0]===\"+\" || newInd[0]===\"-\"))) {\r\n            tgIndex = parseInt(lastIndexNum) + parseInt(newInd);\r\n        } else tgIndex = parseInt(newInd);\r\n        if (tgIndex < this.dataSets.length && tgIndex>=0) {\r\n            console.log(lastIndexNum, newInd);\r\n            this.dataSets.splice(tgIndex, 0, this.dataSets.splice(lastIndexNum, 1)[0]);\r\n        }\r\n        console.log(tgIndex);\r\n        return tgIndex;\r\n    }\r\n}\r\n\r\nexport class MathDataSet {\r\n    vars = [];\r\n    consts = [];\r\n    funcs = [];\r\n\r\n    formula = null;\r\n    index = 0;\r\n\r\n    constructor(formula, vars) {\r\n        if(formula.__proto__ instanceof MathFormula) { \r\n            this.formula = formula;\r\n            this.vars = vars;\r\n        }\r\n    }\r\n    update(newvars) {\r\n        this.vars = newvars;\r\n    }\r\n    onClose() {\r\n\r\n    }\r\n    toOutput(indx, lngth) {\r\n        return (<div id={\"math-calculation-output#\"+indx} data-index={indx} className=\"math-calculation-output\"><div class=\"in\"><strong>{this.formula.name[\"pl\"]}</strong>: <output>{this.formula.calculate(...this.vars)}</output><div className=\"options\">{indx>0 && (<span className=\"upper\">&#x21bf;</span>)}{((lngth - 1)>indx) && (<span className=\"downer\">&#x21c2;</span>)}<span className=\"deletion\">&times;</span></div></div><div className=\"rightybar\"></div></div>);\r\n        //onClick={(ev)=>{ this.onClose(ev); }}\r\n    }\r\n}\r\n\r\nexport const MathStandardFormulas = [\r\n    MathSum,\r\n    ArtimeticAverage,\r\n    GeometricAverage,\r\n    HarmonicAverage\r\n];","C:\\xampp\\htdocs\\LabEnv\\labenv\\src\\libraries\\Performancer.jsx",[],"C:\\xampp\\htdocs\\LabEnv\\labenv\\src\\packages\\Jumper\\appState.js",["406","407","408","409","410","411","412","413","414","415","416","417","418","419","420","421","422","423","424","425","426","427","428","429","430","431","432","433","434","435","436","437","438","439","440","441"],"/* Jumper Library by Grano22 | v 1.0 | React */\r\nimport { JSONSafteyParse } from './Jumper.dataProcessing';\r\nimport { basicHashString, cyrb53 } from './Jumper.cryptography';\r\nimport { Console, JumperError } from 'jumper';\r\n\r\nexport class JumperMemoryLeak extends JumperError {\r\n\r\n}\r\n\r\nexport function splitByParsing(str, occur, escape=\"/\") {\r\n    let arr = [], inStr = false, partStr = \"\";\r\n    for(let word in str) {\r\n        if(word==str.length - 1) { partStr += str[word]; arr.push(partStr); }\r\n        else if(str[word]==\"'\") inStr = !inStr;\r\n        else if(!inStr && str[word]==occur) { if(str[word - 1]!=escape) { arr.push(partStr); partStr = \"\"; } }\r\n        else { partStr += str[word]; }\r\n    }\r\n    return arr;\r\n}\r\n\r\nexport class ActionError {\r\n\r\n\r\n    constructor(desc) {\r\n        this.description = desc;\r\n    }\r\n\r\n    toString() {\r\n\r\n    }\r\n}\r\n\r\nexport class ActionModule {\r\n    constructor() {}\r\n\r\n    static asPointer(actionClass) {\r\n        return {\r\n            pointer: actionClass,\r\n            toString:()=>{\r\n\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport class ActionsStack {\r\n    static version = 1.1;\r\n\r\n    component = null;\r\n    operationsHistoryStack = new Array();\r\n    operationsRestoredStack = new Array();\r\n\r\n    errorsStack = Console.traceLocalStack() || new Array();\r\n\r\n    namespaceRange = new Array();\r\n\r\n    lastAction = \"\";\r\n    stackHistorySize = 20;\r\n    stackRestoredSize = 20;\r\n\r\n    _events = {\r\n        \"beforeunload\":[],\r\n        \"visibilitychange\":[],\r\n        \"beforecomponentunmount\":[]\r\n    };\r\n    _lastID = 0;\r\n\r\n    //States\r\n    isReady = false;\r\n    \r\n    get isUpdated() {\r\n        let ld = this.getComponentLastSavedData();\r\n        if(ld==null) return false;\r\n        return parseInt(ld[0])==this._lastID;\r\n    }\r\n    \r\n    constructor(component, inArr, options={stackSize:20, debug:false, loadResumeable:true}) {\r\n        let self = this;\r\n        this.component = component;\r\n        if(typeof this.component.state==\"undefined\") this.component.state = {};\r\n        this.stackSize = options.stackSize;\r\n        this.setOperationsNamespace(inArr);\r\n        if(options.loadResumeable) this.restoreStacksSessions();\r\n        function onBeforePageUnload() {\r\n            this.saveStacksSessions();\r\n        }\r\n        window.addEventListener(\"beforeunload\", onBeforePageUnload.bind(this));\r\n        function onPageVisibilityChange() {\r\n            if (document.visibilityState === 'visible') {\r\n                console.log(\"Now visible!\");\r\n            } else {\r\n                console.log(\"Now not viisble!\");\r\n                //this.saveStacksSessions();\r\n            }\r\n        }\r\n        document.addEventListener(\"visibilitychange\", onPageVisibilityChange.bind(this));\r\n        function onComponentWillUnmount() {}\r\n        if(typeof component.componentWillUnmount!=\"undefined\") {\r\n            let originalEvt = component.componentWillUnmount;\r\n            component.componentWillUnmount = function(props) {\r\n                for(let evtTypeName in self._events[\"beforecomponentunmount\"]) {\r\n                    self._events[\"beforecomponentunmount\"][evtTypeName].call(self);\r\n                }\r\n                originalEvt(props);\r\n            }\r\n        } else {\r\n            component.componentWillUnmount = function(props) {\r\n                for(let evtTypeName in self._events[\"beforecomponentunmount\"]) {\r\n                    self._events[\"beforecomponentunmount\"][evtTypeName].call(self);\r\n                }\r\n            }\r\n        }\r\n        this.isReady = true;\r\n    }\r\n    addError(newErr) {\r\n        this.errorsStack.push(newErr);\r\n        console.error(newErr);\r\n    }\r\n    setOperationsNamespace(inArr) {\r\n        if(!Array.isArray(inArr)) { this.addError(new ActionError(\"Invaild input, array expected\", 0, \"\")); return this; }\r\n        for(let classAction of inArr) this.namespaceRange.push(classAction); //.prototype.constructor.name .prototype.constructor.name\r\n        return this;\r\n    }\r\n    getOperationByNamespace(name) {\r\n        for(let classOnce of this.namespaceRange) { if(classOnce.prototype.constructor.name==name) return classOnce; }\r\n        return null;\r\n    }\r\n    flush() {\r\n        this.lastAction = \"flush\";\r\n        while(this.operationsHistoryStack.length>0) { let iOper = this.operationsHistoryStack[this.operationsHistoryStack.length - 1]; iOper.onFlush(this.component, iOper.inputData); this.operationsHistoryStack.pop(); }\r\n        this.operationsRestoredStack = new Array();\r\n        this.component.setState({actionHandler:this.dump()});\r\n    }\r\n    flushTyped(filter, withRestored=false) {\r\n        this.lastAction = \"flushTyped(\"+filter+\",\"+withRestored+\")\";\r\n        this.operationsHistoryStack = this.operationsHistoryStack.map(filter);\r\n        if(withRestored) this.operationsRestoredStack = this.operationsRestoredStack.map(filter);\r\n        this.component.setState({actionHandler:this.dump()});\r\n    }\r\n    checkOperationIsRegistered(targetOperation) {\r\n        for(let namespaceNm in this.namespaceRange) {\r\n            if(this.namespaceRange[namespaceNm].prototype.constructor.name==targetOperation.constructor.name) return true;\r\n        }\r\n        return false;\r\n    }\r\n    addOperation(newOperation, inputData = {}) {\r\n        try {\r\n            let matchRes = null;\r\n            this.lastAction = \"addOperation\";\r\n            if(typeof newOperation!=\"object\") throw \"Unexpected argument #1 - \"+newOperation+\", you need to pass a instance of JumperOperation\";\r\n            if(!this.checkOperationIsRegistered(newOperation)) throw \"Unexpected Action class, use one of registered: \"+this.namespaceRange.map(v=>v.prototype.constructor.name).join(\",\");\r\n            newOperation.id = this._lastID;\r\n            this._lastID++;\r\n            if(typeof inputData==\"object\" && inputData!=null) {\r\n                newOperation.inputData = inputData;\r\n                newOperation.lastInputData = inputData;\r\n                if(typeof newOperation.name==\"string\") { matchRes = newOperation.name.match(/\\$\\{(\\w\\d?)+\\}/g);\r\n                if(matchRes!=null) { for(let matchRe in matchRes) { let wd = matchRes[matchRe].substring(0, matchRes[matchRe].length - 2).substring(0, 2); newOperation.name.replace(matchRes[matchRe], inputData[wd]); } } }\r\n                if(typeof newOperation.description==\"string\") { matchRes = newOperation.description.match(/\\$\\{(\\w\\d?)+\\}/g);\r\n                if(matchRes!=null) { for(let matchRe in matchRes) { let wd = matchRes[matchRe].substring(0, matchRes[matchRe].length - 2).substring(0, 2); newOperation.description.replace(matchRes[matchRe], inputData[wd]); } } }\r\n            } else newOperation.inputData = {};\r\n            let outCpt = newOperation.onStore(this.component, newOperation.inputData, this.component.state); // newOperation.outputData\r\n            if(typeof outCpt==\"object\" && outCpt!=null) {\r\n                if(typeof newOperation.name==\"string\") { matchRes = newOperation.name.match(/\\#\\{(\\w\\d?)+\\}/g);\r\n                if(matchRes!=null) { for(let matchRe in matchRes) { let wd = matchRes[matchRe].substring(0, matchRes[matchRe].length - 2).substring(0, 2); newOperation.name.replace(matchRes[matchRe], outCpt[wd]); } } }\r\n                if(typeof newOperation.description==\"string\") { matchRes = newOperation.description.match(/\\#\\{(\\w\\d?)+\\}/g);\r\n                if(matchRes!=null) { for(let matchRe in matchRes) { let wd = matchRes[matchRe].substring(0, matchRes[matchRe].length - 2).substring(0, 2); newOperation.description.replace(matchRes[matchRe], outCpt[wd]); } } }\r\n            }\r\n            this.operationsHistoryStack.push(newOperation);\r\n            if(this.operationsHistoryStack.length>=this.stackSize) this.operationsHistoryStack.shift();\r\n            this.component.setState(Object.assign(outCpt, {lastActionDate:new Date(), actionHandler:this.dump()}));\r\n        } catch(e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n    addOperations(newOperations) {\r\n        try {\r\n            let newOperation = null, finalState = {}, matchRes = null;\r\n            this.lastAction = 'addOperations('+newOperations.toString()+')';\r\n            if(Array.isArray(newOperations)) {\r\n                if(newOperations.length>0) {\r\n                    for(let operInd in newOperations) {\r\n                        if(typeof newOperations[operInd]!=\"object\") throw \"\";\r\n                        if(typeof newOperations[operInd].operation!=\"object\") throw \"Unexpected input array item \"+operInd+\" - in argument 1 , \"+newOperation+\", you need to pass a instance of JumperOperation\";\r\n                        newOperation = newOperations[operInd].operation;\r\n                        if(!this.checkOperationIsRegistered(newOperation)) throw \"Unexpected Action class, use one of registered: \"+this.namespaceRange.map(v=>v.prototype.constructor.name).join(\",\");\r\n                        newOperation.id = this._lastID;\r\n                        this._lastID++;\r\n                        if(typeof newOperations[operInd].inputData==\"object\") {\r\n                            newOperation.inputData = newOperations[operInd].inputData;\r\n                            newOperation.lastInputData = newOperations[operInd].inputData;\r\n                            if(typeof newOperation.name==\"string\") { matchRes = newOperation.name.match(/\\$\\{(\\w\\d?)+\\}/g);\r\n                            if(matchRes!=null) { for(let matchRe in matchRes) { let wd = matchRes[matchRe].substring(0, matchRes[matchRe].length - 2).substring(0, 2); newOperation.name.replace(matchRes[matchRe], newOperations[operInd].inputData[wd]); } } }\r\n                            if(typeof newOperation.description==\"string\") { matchRes = newOperation.description.match(/\\$\\{(\\w\\d?)+\\}/g);\r\n                            if(matchRes!=null) { for(let matchRe in matchRes) { let wd = matchRes[matchRe].substring(0, matchRes[matchRe].length - 2).substring(0, 2); newOperation.description.replace(matchRes[matchRe], newOperations[operInd].inputData[wd]); } } }\r\n                        } else newOperation.inputData = {};\r\n                        let outCpt = newOperation.onStore(this.component, newOperation.inputData, this.component.state); // newOperation.outputData\r\n                        if(typeof outCpt==\"object\" && outCpt!=null) {\r\n                            if(typeof newOperation.name==\"string\") { matchRes = newOperation.name.match(/\\#\\{(\\w\\d?)+\\}/g);\r\n                            if(matchRes!=null) { for(let matchRe in matchRes) { let wd = matchRes[matchRe].substring(0, matchRes[matchRe].length - 2).substring(0, 2); newOperation.name.replace(matchRes[matchRe], outCpt[wd]); } } }\r\n                            if(typeof newOperation.description==\"string\") { matchRes = newOperation.description.match(/\\#\\{(\\w\\d?)+\\}/g);\r\n                            if(matchRes!=null) { for(let matchRe in matchRes) { let wd = matchRes[matchRe].substring(0, matchRes[matchRe].length - 2).substring(0, 2); newOperation.description.replace(matchRes[matchRe], outCpt[wd]); } } }\r\n                        } else outCpt = {};\r\n                        this.operationsHistoryStack.push(newOperation);\r\n                        if(this.operationsHistoryStack.length>=this.stackSize) this.operationsHistoryStack.shift();\r\n                        finalState = Object.assign(finalState, outCpt);\r\n                    }\r\n                    this.component.setState(Object.assign(finalState, {lastActionDate:new Date(), actionHandler:this.dump()}));\r\n                }\r\n            }\r\n        } catch(e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n    invokeEmptyOperation() { this.component.setState(Object.assign(this.component.state || {}, {lastActionDate:new Date()})); }\r\n    restoreLastOperation() {\r\n        this.operationsRestoredStack.push(this.operationsHistoryStack[this.operationsHistoryStack.length - 1]);\r\n        this.operationsHistoryStack.pop();\r\n        let iOper = this.operationsRestoredStack[this.operationsRestoredStack.length - 1];\r\n        iOper.onRestore(this.component, iOper.inputData, iOper.outputData);\r\n    }\r\n    undoRestoring() {\r\n        this.operationsHistoryStack.push(this.operationsRestoredStack[this.operationsRestoredStack.length - 1]);\r\n        this.operationsRestoredStack.pop();\r\n        let iOper = this.operationsHistoryStack[this.operationsHistoryStack.length - 1];\r\n        iOper.onRestore(this.component, iOper.inputData, iOper.outputData);\r\n    }\r\n    restoreOperations(number) {\r\n        for(let i = 0;i<number;i++) this.restoreLastOperation();\r\n    }\r\n    resumeAll() {\r\n        for(let oper in this.operationsHistoryStack) {\r\n            if(this.operationsHistoryStack[oper].type==2) this.operationsHistoryStack[oper].onResume();\r\n        }\r\n    }\r\n    resume(filter, firstOccur=false) {\r\n        for(let oper in this.operationsHistoryStack) {\r\n            let res = filter(this.operationsHistoryStack[oper], oper);\r\n            if(this.operationsHistoryStack[oper].type==2 && res) this.operationsHistoryStack[oper].onResume();\r\n            if(res && firstOccur) break;\r\n        }\r\n    }\r\n    setTypeRange(namespacesInheritedTypes) {\r\n\r\n    }\r\n    defineCustomInitialData(valCB) {\r\n        this._customInitialData.push(valCB.bind(this, [this, this.component]));\r\n    }\r\n    saveComponentCustomInitialData() {\r\n        let essentialVal = null;\r\n        for(let valCB in this._customInitialData) {\r\n            essentialVal = this._customInitialData[valCB]();\r\n            if(typeof essentialVal==\"object\") essentialVal = JSON.stringify(essentialVal);\r\n            window.sessionStorage.setItem(\"jumper_cs_\"+valCB+\"_\"+this.accessHash, essentialVal);\r\n        }\r\n    }\r\n    restoreComponentCustomInitialData() {\r\n        for(let valCB in this._customInitialData) {\r\n            let essentialVal = window.sessionStorage.getItem(\"jumper_cs_\"+valCB+\"_\"+this.accessHash);\r\n            if(essentialVal!=null) this.component[valCB] = essentialVal;\r\n        }\r\n    }\r\n    restoreComponentProp(propName) {\r\n        return window.sessionStorage.getItem(\"jumper_po_\"+propName+\"_\"+this.accessHash);\r\n    }\r\n    saveComponentProp(propName) {\r\n        window.sessionStorage.setItem(\"jumper_po_\"+propName+\"_\"+this.accessHash, this.component[propName]);\r\n    }\r\n    saveComponentProps() {\r\n\r\n    }\r\n    get accessHash() {\r\n        if(typeof this._retrivedHash==\"undefined\") {\r\n            let ach = this.component.constructor.name+\"#\"+cyrb53(this.component.constructor.toString());\r\n            this._retrivedHash = ach;\r\n            return ach;\r\n        } else return this._retrivedHash;\r\n    }\r\n    getComponentLastSavedData() { let dt = window.sessionStorage.getItem(\"jumper_c_\"+this.accessHash); return dt!=null ? dt.split(\";\") : null; }\r\n    saveStacksSessions() {\r\n        window.sessionStorage.setItem(\"jumper_c_\"+this.accessHash, this.toString());\r\n        let hl = \"\", rl = \"\";\r\n        for(let ha in this.operationsHistoryStack) { if(this.operationsHistoryStack[ha].type==3) { hl += this.operationsHistoryStack[ha].toString().replace(/\\&/g, \"\\\\&\"); if(ha!=this.operationsHistoryStack.length - 1) hl += \"&\"; } }\r\n        window.sessionStorage.setItem(\"jumper_sh_\"+this.accessHash, hl);\r\n        for(let ra in this.operationsRestoredStack) { if(this.operationsHistoryStack[ra].type==3) { rl += this.operationsRestoredStack[ra].toString().replace(/\\&/g, \"\\\\&\"); if(ra!=this.operationsRestoredStack.length - 1) rl += \"&\"; } }\r\n        window.sessionStorage.setItem(\"jumper_sr_\"+this.accessHash, rl);\r\n    }\r\n    restoreStacksSessions() {\r\n        let resActions = null;\r\n        if(resActions = window.sessionStorage.getItem(\"jumper_c_\"+this.accessHash)!=null) {\r\n            try {\r\n            this.lastAction = \"operationsLoad\";\r\n            resActions = splitByParsing(resActions, \";\", \"/\");\r\n            this._lastID = parseInt(resActions[0]);\r\n            let jumperS1 = window.sessionStorage.getItem(\"jumper_sh_\"+this.accessHash);\r\n            if(jumperS1!=null) {\r\n                jumperS1 = splitByParsing(jumperS1, \"&\", \"/\");\r\n                console.log(jumperS1);\r\n                let outCpt = {};\r\n                for(let onceRes in jumperS1) {\r\n                    console.log(jumperS1[onceRes]);\r\n                    if(this.stackHistorySize>=this.operationsHistoryStack.length) {\r\n                    let jumperAParams = splitByParsing(jumperS1[onceRes], \";\", \"/\"), jumperA = new (this.getOperationByNamespace(jumperAParams[0]));\r\n                    console.log(jumperAParams);\r\n                    let cd = jumperAParams[1].split(/[- :]/);\r\n                    jumperA.creationDate = new Date(Date.UTC(cd[0], cd[1]-1, cd[2], cd[3], cd[4], cd[5]));\r\n                    let ud = jumperAParams[2].split(/[- :]/);\r\n                    jumperA.updateDate = new Date(Date.UTC(ud[0], ud[1]-1, ud[2], ud[3], ud[4], ud[5]));\r\n                    jumperA.outputData = JSONSafteyParse(jumperAParams[3], {}, (err)=>{});\r\n                    jumperA.lastInputData = JSONSafteyParse(jumperAParams[4], {}, (err)=>{});\r\n                    console.log(jumperA);\r\n                    outCpt = jumperA.onStore(this.component, jumperA.lastInputData, jumperA.outputData) || {};\r\n                    this.operationsHistoryStack.push(jumperA);\r\n                    jumperA.onResume(this.component, jumperA.lastInputData);\r\n                    \r\n                    }\r\n                }\r\n                this.component.setState(Object.assign(outCpt, {actionHandler:this.dump()}));\r\n            }\r\n            let jumperS2 = window.sessionStorage.getItem(\"jumper_sr_\"+this.accessHash);\r\n            if(jumperS2!=null) {\r\n                jumperS2 = splitByParsing(jumperS2, \"&\", \"/\");\r\n                let outCpt = {};\r\n                for(let onceRes in jumperS2) {\r\n                    if(this.stackRestoredSize>=this.operationsRestoredStack.length) {\r\n                    let jumperAParams = splitByParsing(jumperS2[onceRes], \";\", \"/\"), jumperA = new (this.getOperationByNamespace(jumperAParams[0]));\r\n                    let cd = jumperAParams[1].split(/[- :]/);\r\n                    jumperA.creationDate = new Date(Date.UTC(cd[0], cd[1]-1, cd[2], cd[3], cd[4], cd[5]));\r\n                    let ud = jumperAParams[2].split(/[- :]/);\r\n                    jumperA.updateDate = new Date(Date.UTC(ud[0], ud[1]-1, ud[2], ud[3], ud[4], ud[5]));\r\n                    jumperA.outputData = JSONSafteyParse(jumperAParams[3], {}, (err)=>{});\r\n                    jumperA.lastInputData = JSONSafteyParse(jumperAParams[4], {}, (err)=>{});\r\n                    outCpt = jumperA.onStore(this.component, jumperA.lastInputData, jumperA.outputData) || {};\r\n                    this.operationsRestoredStack.push(jumperA, jumperA.lastInputData);\r\n                    jumperA.onResume(this.component, jumperA.lastInputData);\r\n                    }\r\n                }\r\n                this.component.setState(Object.assign(outCpt, {actionHandler:this.dump()}));\r\n            }\r\n            } catch(e) {\r\n                console.error(e);\r\n            }\r\n        }\r\n    }\r\n    toString() { return `${this._lastID};${new Date().toISOString().slice(0, 19).replace('T', ' ')};${this.lastAction}`; }\r\n    dump() { return `${this.lastAction}`; }\r\n    /* Events */\r\n    onRestore() {/* Native Code */}\r\n}\r\n\r\nexport class ActionOperation {\r\n    name = \"\";\r\n    description = \"\";\r\n    type = -1;\r\n    mark = \"all\";\r\n    creationDate = new Date();\r\n    updateDate = new Date();\r\n    lastInputData = {};\r\n    outputData = {};\r\n    constructor(mark=\"all\", name, desc=\"\", type=1) {\r\n        this.mark = mark;\r\n        this.name = name;\r\n        this.description = desc;\r\n        this.type = type;\r\n    }\r\n    onStart(c, i, o) {/* Native Code */}\r\n    onStore(c, i, o) {/* Native Code */}\r\n    onRestore() {/* Native Code */}\r\n    onFlush() {/* Native Code */}\r\n    onUpdate() {/* Native Code */}\r\n    toString() {return `${this.constructor.name};${this.creationDate.toISOString().slice(0, 19).replace('T', ' ')};${this.updateDate.toISOString().slice(0, 19).replace('T', ' ')};${JSON.stringify(this.outputData)};${JSON.stringify(this.lastInputData)}`;}\r\n}\r\n\r\nexport class ActionEventsOperation extends ActionOperation {\r\n    type = 2;\r\n    events = [];\r\n\r\n    constructor(mark=\"all\") {\r\n        super(mark);\r\n    }\r\n\r\n    onRestore() {this.restoreEventEntries();}\r\n\r\n    addEventEntry(elRef, evName, evFn) {\r\n        this.events.push({element:elRef, eventName:evName, event:evFn});   \r\n    }\r\n\r\n    restoreEventEntries() {\r\n        this.events.forEach((val, ind, arr)=>{\r\n            if(typeof val.element==\"string\") {\r\n                let el = document.querySelector(val.element);\r\n                el.addEventListener(val.eventName, val.event);\r\n            } else {\r\n                val.element.addEventListener(val.eventName, val.event);\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport class ActionResumeOperation extends ActionOperation {\r\n    type = 3;\r\n    events = [];\r\n\r\n    constructor(mark=\"all\") {\r\n        super(mark);\r\n    }\r\n    onBeforeStore(s, i) {return true;}\r\n    onResume(s, i) {/* Native Code */}\r\n}\r\n\r\nexport default { ActionsStack, ActionOperation, ActionResumeOperation };","C:\\xampp\\htdocs\\LabEnv\\labenv\\src\\packages\\Jumper\\appStateExtended.js",["442","443","444","445","446","447","448","449","450","451","452","453","454","455","456","457","458","459","460","461","462","463","464","465","466","467","468","469","470","471","472","473","474","475","476","477","478","479","480","481","482","483"],"import React, {Component} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { JSONSafteyParse } from './dataProcessing';\r\nimport { basicHashString, cyrb53 } from './cryptography';\r\nimport { Console, JumperError } from 'jumper';\r\n/*  Jumper Diagnostic Extension \r\n    Version: 0.1\r\n\r\n*/\r\nfunction microtime(getAsFloat) {\r\n    var s, now, multiplier;\r\n    if(typeof performance !== 'undefined' && performance.now) {\r\n        if(typeof performance.timeOrigin!=\"undefined\") now = (performance.now() + parseFloat(performance.timeOrigin)) / 1000; else now = (performance.now() + parseFloat(performance.timing.navigationStart)) / 1000;\r\n        multiplier = 1e6;\r\n    }\r\n    else {\r\n        now = (Date.now ? Date.now() : new Date().getTime()) / 1000;\r\n        multiplier = 1e3;\r\n    }\r\n    if(getAsFloat) return now;\r\n    s = now | 0;\r\n    return (Math.round((now - s) * multiplier ) / multiplier ) + ' ' + s;\r\n}\r\nfunction sizeOf(obj) {\r\n    let bytes = 0;\r\n    if(obj === null && obj === undefined) return -1; \r\n        switch(typeof obj) {\r\n            case 'number':\r\n                bytes += 8; break;\r\n            case 'string':\r\n                bytes += obj.length * 2; break;\r\n            case 'boolean':\r\n                bytes += 4; break;\r\n            case 'object':\r\n                var objClass = Object.prototype.toString.call(obj).slice(8, -1);\r\n                if(objClass === 'Object' || objClass === 'Array') {\r\n                    for(var key in obj) {\r\n                        if(!obj.hasOwnProperty(key)) continue;\r\n                        bytes += sizeOf(obj[key]);\r\n                    }\r\n                } else bytes += obj.toString().length * 2;\r\n                break;\r\n        }\r\n    return bytes;\r\n}\r\nfunction formatByteSize(bytes) {\r\n    if(bytes < 1024) return bytes + \" bytes\";\r\n    else if(bytes < 1048576) return(bytes / 1024).toFixed(3) + \" KiB\";\r\n    else if(bytes < 1073741824) return(bytes / 1048576).toFixed(3) + \" MiB\";\r\n    else return(bytes / 1073741824).toFixed(3) + \" GiB\";\r\n};\r\n\r\nexport class JumperToolbar extends Component {\r\n    totalMemoryFillment = 0;\r\n    loadingLibraryTime = 0;\r\n    get sessionRestoringDataTime() {return this.currentContext.restoredMemoryTime;}\r\n    totalExectuionActionsTime = 0;\r\n    executionActionsTime = [];\r\n\r\n    currentContext = null;\r\n\r\n    get registeredActionsNamespaces() {return this.currentContext.namespaceRange.map(v=>(<>{v.prototype.constructor.name},<br/></>))}\r\n\r\n    currentStyle = `\r\n    #jumper_toolbar_debuger {\r\n        position: fixed;\r\n        z-index: 99999999;\r\n        bottom: 0; left: 0;\r\n        border-top: 1px solid #fff;\r\n        background: #333333;\r\n        width: 100%;\r\n        height: 78px;\r\n        color: #e0e0e0;\r\n        transition: 0.3s ease-out;\r\n    }\r\n    #jumper_toolbar_debuger.hidden {\r\n        opacity: 0.5;\r\n        transform: translateX(calc(100% - 72px));\r\n        transition: 0.3s ease-in;\r\n    }\r\n    #jumper_toolbar_debuger > span {\r\n        display: inline-block;\r\n        vertical-align: middle;\r\n        position: relative;\r\n        margin-right: 10px;\r\n        padding: 5px;\r\n        cursor: pointer;\r\n    }\r\n    #jumper_toolbar_debuger > span:hover { background: #454545; }\r\n    #jumper_toolbar_debuger > span i {\r\n        font-size: 25px;\r\n        font-style: normal;\r\n    }\r\n    .jumper_shadow_box {\r\n        position: absolute;\r\n        background: #4a4a4a;\r\n        \r\n        padding: 7px 12px;\r\n        bottom: -100%;\r\n        z-index: -1;\r\n        opacity: 0;\r\n        transition: 0.3s ease-out;\r\n    }\r\n    .jumper_shadow_box.visible {\r\n        bottom: 55px;\r\n        opacity: 1;\r\n        transition: 0.3s ease-in;\r\n    }\r\n    .jumper-color { color: #196a36; }\r\n    .react-color { color: #61DBFB;  }\r\n    `;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.currentContext = props.context;\r\n        this.loadingLibraryTime = microtime(true) - startTime;\r\n    }\r\n\r\n    toggleShadowBox(evt) {\r\n        if(evt.target.tagName==\"SPAN\") {\r\n        let cont = evt.currentTarget;\r\n        for(let chld of cont.children) {\r\n            if(chld.classList.contains(\"jumper_shadow_box\")) chld.classList.toggle(\"visible\");\r\n        }\r\n        }\r\n    }\r\n\r\n    toggle(evt) {\r\n        let currCont = evt.currentTarget.parentElement;\r\n        currCont.classList.toggle(\"hidden\");\r\n    }\r\n\r\n    render() {\r\n    return (<><style id=\"jumper_toolbar_deubger_styles\">{this.currentStyle}</style><div id=\"jumper_toolbar_debuger\">\r\n        <span onClick={(ev)=>this.toggle(ev)}>\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.0\" width=\"64px\" height=\"64px\" viewBox=\"0 0 5120 5120\" preserveAspectRatio=\"xMidYMid meet\">\r\n            <g id=\"layer101\" fill=\"#003b00\" stroke=\"none\">\r\n            <path d=\"M880 4020 l0 -150 475 0 475 0 0 -100 0 -100 -475 0 -475 0 0 -150 0 -150 363 -2 362 -3 -47 -28 c-26 -15 -74 -52 -107 -82 l-59 -55 -256 0 -256 0 0 -150 0 -150 250 0 250 0 41 -45 c23 -25 69 -63 103 -85 l61 -40 -353 0 -352 0 0 -150 0 -150 481 0 c435 0 481 -2 475 -16 -3 -9 -6 -56 -6 -105 l0 -89 -475 0 -475 0 0 -150 0 -150 583 0 c320 0 836 -1 1147 -1 311 0 805 0 1098 0 l532 1 0 150 0 150 -427 0 -428 0 -1 105 -2 105 429 0 429 0 0 150 0 150 -307 0 -306 0 59 39 c32 21 79 59 104 85 l44 46 203 0 203 0 0 150 0 150 -212 0 -213 0 -39 41 c-22 22 -69 59 -104 82 l-63 42 315 3 316 2 0 150 0 150 -425 0 -425 0 0 100 0 100 425 0 425 0 0 150 0 150 -1680 0 -1680 0 0 -150z m1628 -169 c25 -22 27 -34 9 -53 -7 -7 -34 -39 -61 -70 l-48 -58 -233 0 -232 0 -7 31 c-8 42 -8 154 1 162 3 4 128 7 277 7 250 -1 273 -2 294 -19z m776 -12 c8 -40 8 -98 0 -138 l-7 -31 -235 2 -235 3 -60 73 -60 72 23 25 23 25 272 0 273 0 6 -31z m-639 -129 c16 -16 26 -32 23 -35 -3 -4 -31 -5 -62 -3 l-56 3 26 33 c14 17 29 32 33 32 4 0 20 -13 36 -30z m-734 -377 c6 -21 20 -59 30 -85 l19 -48 -208 0 -207 0 30 24 c52 42 275 144 317 146 3 0 12 -17 19 -37z m264 -5 c-14 -24 -36 -62 -48 -86 -32 -64 -54 -55 -88 38 -16 41 -28 78 -28 83 -1 4 42 7 95 7 l95 0 -26 -42z m739 9 c11 -17 32 -56 48 -84 l30 -53 -111 0 c-104 0 -114 2 -152 27 -29 19 -58 28 -100 31 -71 5 -95 0 -143 -33 -36 -24 -44 -25 -150 -23 l-113 3 49 83 49 82 287 0 287 0 19 -33z m296 30 c0 -8 -38 -113 -50 -139 -22 -47 -44 -34 -94 52 -25 44 -46 82 -46 85 0 3 43 5 95 5 52 0 95 -2 95 -3z m205 -32 c75 -28 187 -86 225 -115 l25 -20 -202 0 -202 0 25 68 c14 37 27 73 29 80 6 18 26 15 100 -13z m-1458 -452 c-3 -10 -16 -48 -29 -85 -21 -61 -26 -68 -50 -68 -55 0 -256 90 -323 145 l-30 24 219 1 c203 0 218 -1 213 -17z m151 -5 c6 -13 27 -51 46 -85 l36 -63 -89 0 -89 0 25 68 c14 37 27 75 30 85 7 24 28 21 41 -5z m348 1 c35 -39 89 -59 156 -59 64 0 105 16 154 61 19 17 34 19 128 17 l107 -3 -48 -80 -48 -80 -296 -3 -297 -2 -46 78 c-25 43 -46 82 -46 85 0 4 49 7 108 7 98 0 111 -2 128 -21z m715 -59 c16 -41 29 -78 29 -82 0 -5 -38 -8 -85 -8 -47 0 -85 2 -85 4 0 16 94 166 102 164 6 -2 24 -37 39 -78z m484 55 c-64 -53 -267 -145 -319 -145 -20 0 -27 11 -53 85 l-30 85 216 0 216 -1 -30 -24z m-1192 -526 l69 -81 -23 -24 -23 -24 -275 2 -276 3 -3 30 c-2 17 -1 63 3 103 l7 72 226 0 227 0 68 -81z m208 64 c-5 -10 -21 -29 -35 -43 l-27 -24 -42 42 -42 42 78 0 c71 0 77 -2 68 -17z m603 1 c3 -9 6 -56 6 -105 l0 -89 -274 0 c-271 0 -275 0 -300 23 l-25 22 70 83 70 82 224 0 c194 0 224 -2 229 -16z\"/>\r\n            </g>\r\n            <g id=\"layer102\" fill=\"#196a36\" stroke=\"none\">\r\n            <path d=\"M241 4353 c0 -328 -3 -623 -7 -655 l-7 -58 174 0 c96 0 184 -3 197 -6 l22 -6 0 224 c0 124 3 313 7 421 l6 197 1937 0 1937 0 6 -197 c4 -108 7 -296 7 -417 l0 -221 192 3 c106 2 193 4 193 5 3 10 -17 1285 -20 1295 -4 9 -477 12 -2324 12 l-2320 0 0 -597z\"/>\r\n            <path d=\"M880 4020 l0 -150 474 0 475 0 11 58 c24 115 77 194 155 228 25 11 -62 13 -542 14 l-573 0 0 -150z\"/>\r\n            <path d=\"M2230 4146 c110 -39 228 -111 328 -201 l53 -47 57 50 c117 101 284 200 362 215 14 2 -175 5 -420 5 l-445 2 65 -24z\"/>\r\n            <path d=\"M3220 4154 c19 -8 48 -27 64 -42 37 -35 84 -134 92 -194 l7 -48 428 0 429 0 0 150 0 150 -527 0 c-481 -1 -525 -2 -493 -16z\"/>\r\n            <path d=\"M2040 4063 c-43 -16 -85 -82 -96 -152 l-7 -41 274 0 274 1 -30 25 c-146 123 -332 198 -415 167z\"/>\r\n            <path d=\"M3022 4050 c-67 -24 -127 -59 -215 -124 l-69 -51 268 -3 c147 -1 269 0 271 2 3 3 -3 31 -12 62 -12 40 -29 70 -55 96 -33 34 -43 38 -86 38 -27 -1 -73 -9 -102 -20z\"/>\r\n            <path d=\"M880 3520 l0 -150 365 0 c365 0 366 0 413 24 26 13 84 36 130 52 80 27 83 29 77 53 -4 14 -13 58 -19 96 l-12 70 -477 3 -477 2 0 -150z\"/>\r\n            <path d=\"M1940 3658 c0 -17 29 -150 33 -154 2 -2 55 5 118 16 63 11 130 20 149 20 60 0 77 10 124 71 l46 59 -235 0 c-181 0 -235 -3 -235 -12z\"/>\r\n            <path d=\"M2501 3618 l-40 -53 74 -3 c41 -2 109 -2 151 0 l76 3 -42 53 -42 52 -68 0 -69 0 -40 -52z\"/>\r\n            <path d=\"M2820 3665 c0 -12 74 -106 90 -115 10 -6 33 -10 50 -10 18 0 88 -9 157 -21 68 -12 127 -18 130 -15 6 6 32 128 33 154 0 9 -52 12 -230 12 -126 0 -230 -2 -230 -5z\"/>\r\n            <path d=\"M3386 3658 c-5 -15 -31 -169 -31 -181 0 -5 38 -23 85 -41 47 -18 100 -40 119 -49 30 -15 73 -17 358 -17 l323 0 0 150 0 150 -425 0 c-332 0 -426 -3 -429 -12z\"/>\r\n            <path d=\"M2480 3452 l-105 -3 -22 -34 c-13 -19 -23 -37 -23 -40 0 -3 126 -5 281 -5 l280 0 -18 31 c-10 17 -22 34 -28 38 -12 10 -218 17 -365 13z\"/>\r\n            <path d=\"M2117 3419 c-60 -9 -111 -20 -114 -23 -17 -17 18 -26 102 -26 92 0 94 0 115 29 11 16 17 31 13 34 -5 2 -57 -4 -116 -14z\"/>\r\n            <path d=\"M2996 3401 l19 -32 97 3 c55 2 99 7 101 13 2 11 -80 30 -177 41 l-59 7 19 -32z\"/>\r\n            <path d=\"M880 3050 l0 -150 250 0 250 0 -21 41 c-30 60 -28 146 5 206 15 25 26 47 26 49 0 2 -115 4 -255 4 l-255 0 0 -150z\"/>\r\n            <path d=\"M1523 3185 c-36 -25 -83 -106 -83 -142 0 -42 13 -68 53 -110 l31 -33 220 0 221 0 28 68 c15 38 27 72 27 78 0 5 -14 42 -32 82 l-32 72 -206 0 c-165 0 -210 -3 -227 -15z\"/>\r\n            <path d=\"M2076 3185 c4 -8 10 -12 15 -9 14 8 10 24 -6 24 -9 0 -12 -6 -9 -15z\"/>\r\n            <path d=\"M2180 3120 l-40 -80 36 -70 36 -70 109 0 109 0 -19 33 c-39 69 -37 161 5 223 13 19 24 37 24 39 0 3 -49 5 -110 5 l-110 0 -40 -80z\"/>\r\n            <path d=\"M2797 3158 c24 -37 28 -53 28 -118 0 -55 -5 -83 -17 -103 -10 -14 -18 -29 -18 -32 0 -3 48 -4 107 -3 l107 3 35 67 36 66 -40 81 -39 81 -113 0 -113 0 27 -42z\"/>\r\n            <path d=\"M3110 3196 c0 -2 6 -9 14 -15 10 -9 15 -8 20 4 4 10 -1 15 -14 15 -11 0 -20 -2 -20 -4z\"/>\r\n            <path d=\"M3251 3178 c-5 -13 -20 -49 -34 -80 l-26 -58 31 -70 31 -70 217 0 c236 0 227 -2 275 63 48 65 31 147 -46 212 -31 25 -31 25 -235 25 -203 0 -205 0 -213 -22z\"/>\r\n            <path d=\"M3848 3153 c36 -64 38 -159 5 -215 l-22 -38 204 0 205 0 0 150 0 150 -209 0 -210 0 27 -47z\"/>\r\n            <path d=\"M880 2580 l0 -150 478 0 478 0 12 73 c6 39 14 81 17 92 5 17 -5 24 -75 48 -44 15 -108 41 -142 57 l-62 30 -353 0 -353 0 0 -150z\"/>\r\n            <path d=\"M2006 2714 c-3 -9 -6 -17 -6 -19 0 -5 93 -23 168 -33 34 -5 62 -6 62 -3 0 3 -9 21 -20 39 l-20 32 -89 0 c-72 0 -90 -3 -95 -16z\"/>\r\n            <path d=\"M2320 2725 c0 -3 12 -23 26 -45 33 -50 52 -53 302 -48 210 3 194 -1 237 71 l16 27 -290 0 c-160 0 -291 -2 -291 -5z\"/>\r\n            <path d=\"M3002 2694 c-13 -20 -22 -37 -20 -39 4 -3 100 11 176 26 41 8 52 14 52 30 0 17 -8 19 -92 19 l-93 0 -23 -36z\"/>\r\n            <path d=\"M3570 2705 c-25 -13 -84 -38 -132 -56 -49 -17 -88 -34 -88 -37 0 -8 20 -133 26 -159 l4 -23 430 0 430 0 0 150 0 150 -312 -1 c-307 -1 -314 -2 -358 -24z\"/>\r\n            <path d=\"M1962 2544 c-6 -27 -14 -64 -17 -81 l-7 -33 227 0 c125 0 225 3 223 8 -1 4 -18 28 -37 55 -26 35 -42 47 -60 47 -25 0 -223 31 -287 45 -31 7 -32 6 -42 -41z\"/>\r\n            <path d=\"M3180 2580 c-19 -5 -90 -17 -158 -26 l-122 -18 -41 -53 -40 -53 226 0 225 0 -1 28 c-2 54 -24 127 -39 128 -8 1 -31 -2 -50 -6z\"/>\r\n            <path d=\"M2460 2524 c0 -4 16 -27 36 -50 l35 -44 78 0 78 0 29 38 c53 66 60 62 -105 62 -83 0 -151 -3 -151 -6z\"/>\r\n            <path d=\"M880 2070 l0 -150 568 0 c479 1 562 3 537 14 -68 30 -125 118 -144 221 -6 32 -11 60 -11 62 0 2 -214 3 -475 3 l-475 0 0 -150z\"/>\r\n            <path d=\"M1943 2175 c9 -63 42 -122 79 -141 43 -22 136 -14 209 19 56 25 169 96 224 142 l30 25 -274 0 -274 0 6 -45z\"/>\r\n            <path d=\"M2770 2189 c103 -89 241 -161 330 -174 85 -11 148 48 169 159 l8 46 -271 0 -271 -1 35 -30z\"/>\r\n            <path d=\"M3376 2179 c-18 -111 -71 -205 -135 -239 -36 -19 -33 -19 482 -20 l517 0 0 150 0 150 -429 0 -428 0 -7 -41z\"/>\r\n            <path d=\"M2560 2149 c-103 -93 -231 -173 -335 -210 -49 -17 -45 -18 375 -18 359 0 420 2 390 13 -103 38 -272 149 -344 225 -17 17 -32 31 -35 31 -3 -1 -26 -19 -51 -41z\"/>\r\n            <path d=\"M207 1833 c-3 -4 -8 -67 -12 -140 l-7 -131 43 -6 c24 -3 107 -10 184 -16 159 -11 817 -60 1600 -120 753 -57 1475 -110 1496 -110 24 0 27 14 34 160 l7 125 -463 34 c-255 18 -480 34 -499 36 -19 2 -132 10 -250 19 -214 16 -392 30 -545 42 -120 9 -152 12 -245 18 -47 4 -112 9 -145 11 -131 11 -1035 77 -1112 81 -44 3 -83 2 -86 -3z\"/>\r\n            <path d=\"M3255 1126 c-852 -321 -1550 -587 -1552 -592 -2 -5 19 -67 46 -139 37 -98 53 -129 65 -127 24 4 3110 1163 3118 1171 4 4 -14 65 -41 136 -37 99 -53 130 -67 132 -11 1 -716 -260 -1569 -581z\"/>\r\n            </g></svg>\r\n        </span>\r\n        <span onClick={(ev)=>this.toggleShadowBox(ev)}>\r\n            <span className=\"jumper-color\">{ActionsStack.version}</span> | <span className=\"react-color\">{React.version}</span>\r\n            <div className=\"jumper_shadow_box\">\r\n            <strong>Wersja React</strong>: {React.version}<br/>\r\n            <strong>Wersja Jumper.React</strong>: {ActionsStack.version}\r\n            </div>\r\n        </span>\r\n        <span onClick={(ev)=>this.toggleShadowBox(ev)}>\r\n            Komponent: {this.currentContext.component.constructor.name}\r\n            <div className=\"jumper_shadow_box\">\r\n                {this.registeredActionsNamespaces}\r\n            </div>\r\n        </span>\r\n        <span onClick={(ev)=>this.toggleShadowBox(ev)}>\r\n            {this.loadingLibraryTime.toFixed(3)}ms\r\n            <div className=\"jumper_shadow_box\">\r\n                <strong>Czas ładowania biblioteki: </strong> {this.loadingLibraryTime.toFixed(3)}ms<br/>\r\n                <strong>Czas ładowania danych z pamięci sesji: </strong> {this.sessionRestoringDataTime.toFixed(3)}ms\r\n            </div>\r\n        </span>\r\n        <span>\r\n            <i>&#x29D7;</i>\r\n        </span>\r\n        <span>\r\n            <i>&#171;</i>\r\n        </span>\r\n        <span>\r\n            <i>&#187;</i>\r\n        </span>\r\n        <span>\r\n            <i>&#x2608;</i>\r\n        </span>\r\n        <span>\r\n            <i>&#9735;</i>\r\n        </span>\r\n        <span>\r\n            <i>&#9746;</i>\r\n        </span>\r\n        <span>\r\n            <i>&#x26A0;</i>\r\n        </span>\r\n    </div></>);\r\n    }\r\n}\r\n\r\n/* END Jumper Diagnostic Extension */\r\n\r\nvar startTime = microtime(true);\r\n\r\nexport class JumperMemoryLeak extends JumperError {\r\n\r\n}\r\n\r\nexport function splitByParsing(str, occur, escape=\"/\") {\r\n    let arr = [], inStr = false, partStr = \"\";\r\n    for(let word in str) {\r\n        if(word==str.length - 1) { partStr += str[word]; arr.push(partStr); }\r\n        else if(str[word]==\"'\") inStr = !inStr;\r\n        else if(!inStr && str[word]==occur) { if(str[word - 1]!=escape) { arr.push(partStr); partStr = \"\"; } }\r\n        else { partStr += str[word]; }\r\n    }\r\n    return arr;\r\n}\r\n\r\nexport const ActionsErrors = [\r\n    \"memoryLeaks\",\r\n\r\n];\r\n\r\nexport class ActionError {\r\n\r\n\r\n    constructor(desc) {\r\n        this.description = desc;\r\n    }\r\n\r\n    toString() {\r\n\r\n    }\r\n}\r\n\r\nexport class ActionModule {\r\n    constructor() {}\r\n\r\n    static asPointer(actionClass) {\r\n        return {\r\n            pointer: actionClass,\r\n            toString:()=>{\r\n\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport class ActionsStack {\r\n    static version = 1.1;\r\n\r\n    component = null;\r\n    operationsHistoryStack = new Array();\r\n    operationsRestoredStack = new Array();\r\n\r\n    errorsStack = new Array(); //window.globalLogsHandler.traceLocalStack();\r\n\r\n    namespaceRange = new Array();\r\n\r\n    lastAction = \"\";\r\n    stackHistorySize = 20;\r\n    stackRestoredSize = 20;\r\n\r\n    _events = {\r\n        \"beforeunload\":[],\r\n        \"visibilitychange\":[],\r\n        \"beforecomponentunmount\":[]\r\n    };\r\n    _lastID = 0;\r\n    _customInitialData = {};\r\n\r\n    //States\r\n    isReady = false;\r\n    \r\n    get isUpdated() {\r\n        let ld = this.getComponentLastSavedData();\r\n        if(ld==null) return false;\r\n        return parseInt(ld[0])==this._lastID;\r\n    }\r\n\r\n    //Measuring\r\n    restoredMemoryTime = -1;\r\n\r\n    constructor(component, inArr, options={stackSize:20, debug:false, loadResumeable:true}) {\r\n        let self = this;\r\n        this.component = component;\r\n        if(typeof this.component.state==\"undefined\") this.component.state = {};\r\n        this.stackSize = options.stackSize;\r\n        this.setOperationsNamespace(inArr);\r\n        if(options.loadResumeable) this.restoredMemoryTime = this.restoreStacksSessions();\r\n        function onBeforePageUnload() {\r\n            for(let evtTypeName in self._events[\"beforeunload\"]) {\r\n                self._events[\"beforeunload\"][evtTypeName].call(self);\r\n            }\r\n            this.saveStacksSessions();\r\n        }\r\n        window.addEventListener(\"beforeunload\", onBeforePageUnload.bind(this));\r\n        function onPageVisibilityChange() {\r\n            for(let evtTypeName in self._events[\"visibilitychange\"]) {\r\n                self._events[\"visibilitychange\"][evtTypeName].call(self);\r\n            }\r\n            //if(document.visibilityState === 'visible')\r\n        }\r\n        document.addEventListener(\"visibilitychange\", onPageVisibilityChange.bind(this));\r\n        function onComponentWillUnmount() {}\r\n        if(typeof component.componentWillUnmount!=\"undefined\") {\r\n            let originalEvt = component.componentWillUnmount;\r\n            component.componentWillUnmount = function(props) {\r\n                for(let evtTypeName in self._events[\"beforecomponentunmount\"]) {\r\n                    self._events[\"beforecomponentunmount\"][evtTypeName].call(self);\r\n                }\r\n                originalEvt(props);\r\n            }\r\n        } else {\r\n            component.componentWillUnmount = function(props) {\r\n                for(let evtTypeName in self._events[\"beforecomponentunmount\"]) {\r\n                    self._events[\"beforecomponentunmount\"][evtTypeName].call(self);\r\n                }\r\n            }\r\n        }\r\n        //Toolbar\r\n        if(document.getElementById(\"jumper-debuger-container\")==null) {\r\n        let debugContainer = document.createElement(\"div\");\r\n        debugContainer.id = \"jumper-debuger-container\";\r\n        document.body.appendChild(debugContainer);\r\n        ReactDOM.render(<JumperToolbar context={this}/>, debugContainer);\r\n        if(typeof component.componentWillUnmount!=\"undefined\") { let callback = component.componentWillUnmount.bind(component); component.componentWillUnmount = function() { callback(); debugContainer.remove(); } } else component.componentWillUnmount = function() { /*ReactDOM.unmountComponentAtNode();*/ debugContainer.remove(); }\r\n        }\r\n        //END Toolbar\r\n        window.currentAction = this;\r\n        this.isReady = true;\r\n    }\r\n    addError(newErr) {\r\n        this.errorsStack.push(newErr);\r\n        console.error(newErr);\r\n    }\r\n    //Add Event Listener to given event type\r\n    addEventListener(evtType, cbFn, sync=false) {\r\n        let evtNS = Object.keys(this._events);\r\n        for(let evtName of evtNS) {\r\n            if(evtType==evtName) {\r\n                this._events[evtName].push(cbFn);\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    removeEventListener(evtType, cbFn) {\r\n\r\n    }\r\n    setOperationsNamespace(inArr) {\r\n        if(!Array.isArray(inArr)) { this.addError(new ActionError(\"Invaild input, array expected\", 0, \"\")); return this; }\r\n        for(let classAction of inArr) this.namespaceRange.push(classAction); //.prototype.constructor.name .prototype.constructor.name\r\n        return this;\r\n    }\r\n    getOperationByNamespace(name) {\r\n        for(let classOnce of this.namespaceRange) { if(classOnce.prototype.constructor.name==name) return classOnce; }\r\n        return null;\r\n    }\r\n    flush() {\r\n        this.lastAction = \"flush\";\r\n        while(this.operationsHistoryStack.length>0) { let iOper = this.operationsHistoryStack[this.operationsHistoryStack.length - 1]; iOper.onFlush(this.component, iOper.inputData); this.operationsHistoryStack.pop(); }\r\n        this.operationsRestoredStack = new Array();\r\n        this.component.setState({actionHandler:this.dump()});\r\n    }\r\n    flushTyped(filter, withRestored=false) {\r\n        this.lastAction = \"flushTyped(\"+filter+\",\"+withRestored+\")\";\r\n        this.operationsHistoryStack = this.operationsHistoryStack.map(filter);\r\n        if(withRestored) this.operationsRestoredStack = this.operationsRestoredStack.map(filter);\r\n        this.component.setState({actionHandler:this.dump()});\r\n    }\r\n    checkOperationIsRegistered(targetOperation) {\r\n        for(let namespaceNm in this.namespaceRange) {\r\n            if(this.namespaceRange[namespaceNm].prototype.constructor.name==targetOperation.constructor.name) return true;\r\n            console.log(this.namespaceRange[namespaceNm].prototype.constructor.name, targetOperation.constructor.name);\r\n        }\r\n        return false;\r\n    }\r\n    addOperation(newOperation, inputData = {}) {\r\n        try {\r\n            let matchRes = null;\r\n            this.lastAction = \"addOperation\";\r\n            if(typeof newOperation!=\"object\") throw \"Unexpected argument #1 - \"+newOperation+\", you need to pass a instance of JumperOperation\";\r\n            if(!this.checkOperationIsRegistered(newOperation)) throw \"Unexpected Action class, use one of registered: \"+this.namespaceRange.map(v=>v.prototype.constructor.name).join(\",\");\r\n            newOperation.id = this._lastID;\r\n            this._lastID++;\r\n            if(typeof inputData==\"object\" && inputData!=null) {\r\n                newOperation.inputData = inputData;\r\n                newOperation.lastInputData = inputData;\r\n                if(typeof newOperation.name==\"string\") { matchRes = newOperation.name.match(/\\$\\{(\\w\\d?)+\\}/g);\r\n                if(matchRes!=null) { for(let matchRe in matchRes) { let wd = matchRes[matchRe].substring(0, matchRes[matchRe].length - 2).substring(0, 2); newOperation.name.replace(matchRes[matchRe], inputData[wd]); } } }\r\n                if(typeof newOperation.description==\"string\") { matchRes = newOperation.description.match(/\\$\\{(\\w\\d?)+\\}/g);\r\n                if(matchRes!=null) { for(let matchRe in matchRes) { let wd = matchRes[matchRe].substring(0, matchRes[matchRe].length - 2).substring(0, 2); newOperation.description.replace(matchRes[matchRe], inputData[wd]); } } }\r\n            } else newOperation.inputData = {};\r\n            let outCpt = newOperation.onStore(this.component, newOperation.inputData, this.component.state); // newOperation.outputData\r\n            if(typeof outCpt==\"object\" && outCpt!=null) {\r\n                if(typeof newOperation.name==\"string\") { matchRes = newOperation.name.match(/\\#\\{(\\w\\d?)+\\}/g);\r\n                if(matchRes!=null) { for(let matchRe in matchRes) { let wd = matchRes[matchRe].substring(0, matchRes[matchRe].length - 2).substring(0, 2); newOperation.name.replace(matchRes[matchRe], outCpt[wd]); } } }\r\n                if(typeof newOperation.description==\"string\") { matchRes = newOperation.description.match(/\\#\\{(\\w\\d?)+\\}/g);\r\n                if(matchRes!=null) { for(let matchRe in matchRes) { let wd = matchRes[matchRe].substring(0, matchRes[matchRe].length - 2).substring(0, 2); newOperation.description.replace(matchRes[matchRe], outCpt[wd]); } } }\r\n            }\r\n            this.operationsHistoryStack.push(newOperation);\r\n            if(this.operationsHistoryStack.length>=this.stackSize) this.operationsHistoryStack.shift();\r\n            this.component.setState(Object.assign(outCpt, {lastActionDate:new Date(), actionHandler:this.dump()}));\r\n        } catch(e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n    addOperations(newOperations) {\r\n        try {\r\n            let newOperation = null, finalState = {}, matchRes = null;\r\n            this.lastAction = 'addOperations('+newOperations.toString()+')';\r\n            if(Array.isArray(newOperations)) {\r\n                if(newOperations.length>0) {\r\n                    for(let operInd in newOperations) {\r\n                        if(typeof newOperations[operInd]!=\"object\") throw \"\";\r\n                        if(typeof newOperations[operInd].operation!=\"object\") throw \"Unexpected input array item \"+operInd+\" - in argument 1 , \"+newOperation+\", you need to pass a instance of JumperOperation\";\r\n                        newOperation = newOperations[operInd].operation;\r\n                        if(!this.checkOperationIsRegistered(newOperation)) throw \"Unexpected Action class, use one of registered: \"+this.namespaceRange.map(v=>v.prototype.constructor.name).join(\",\");\r\n                        newOperation.id = this._lastID;\r\n                        this._lastID++;\r\n                        if(typeof newOperations[operInd].inputData==\"object\") {\r\n                            newOperation.inputData = newOperations[operInd].inputData;\r\n                            newOperation.lastInputData = newOperations[operInd].inputData;\r\n                            if(typeof newOperation.name==\"string\") { matchRes = newOperation.name.match(/\\$\\{(\\w\\d?)+\\}/g);\r\n                            if(matchRes!=null) { for(let matchRe in matchRes) { let wd = matchRes[matchRe].substring(0, matchRes[matchRe].length - 2).substring(0, 2); newOperation.name.replace(matchRes[matchRe], newOperations[operInd].inputData[wd]); } } }\r\n                            if(typeof newOperation.description==\"string\") { matchRes = newOperation.description.match(/\\$\\{(\\w\\d?)+\\}/g);\r\n                            if(matchRes!=null) { for(let matchRe in matchRes) { let wd = matchRes[matchRe].substring(0, matchRes[matchRe].length - 2).substring(0, 2); newOperation.description.replace(matchRes[matchRe], newOperations[operInd].inputData[wd]); } } }\r\n                        } else newOperation.inputData = {};\r\n                        let outCpt = newOperation.onStore(this.component, newOperation.inputData, this.component.state); // newOperation.outputData\r\n                        if(typeof outCpt==\"object\" && outCpt!=null) {\r\n                            if(typeof newOperation.name==\"string\") { matchRes = newOperation.name.match(/\\#\\{(\\w\\d?)+\\}/g);\r\n                            if(matchRes!=null) { for(let matchRe in matchRes) { let wd = matchRes[matchRe].substring(0, matchRes[matchRe].length - 2).substring(0, 2); newOperation.name.replace(matchRes[matchRe], outCpt[wd]); } } }\r\n                            if(typeof newOperation.description==\"string\") { matchRes = newOperation.description.match(/\\#\\{(\\w\\d?)+\\}/g);\r\n                            if(matchRes!=null) { for(let matchRe in matchRes) { let wd = matchRes[matchRe].substring(0, matchRes[matchRe].length - 2).substring(0, 2); newOperation.description.replace(matchRes[matchRe], outCpt[wd]); } } }\r\n                        } else outCpt = {};\r\n                        this.operationsHistoryStack.push(newOperation);\r\n                        if(this.operationsHistoryStack.length>=this.stackSize) this.operationsHistoryStack.shift();\r\n                        finalState = Object.assign(finalState, outCpt);\r\n                    }\r\n                    this.component.setState(Object.assign(finalState, {lastActionDate:new Date(), actionHandler:this.dump()}));\r\n                }\r\n            }\r\n        } catch(e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n    invokeEmptyOperation() { this.component.setState(Object.assign(this.component.state || {}, {lastActionDate:new Date()})); }\r\n    restoreLastOperation() {\r\n        this.operationsRestoredStack.push(this.operationsHistoryStack[this.operationsHistoryStack.length - 1]);\r\n        this.operationsHistoryStack.pop();\r\n        let iOper = this.operationsRestoredStack[this.operationsRestoredStack.length - 1];\r\n        iOper.onRestore(this.component, iOper.inputData, iOper.outputData);\r\n    }\r\n    undoRestoring() {\r\n        this.operationsHistoryStack.push(this.operationsRestoredStack[this.operationsRestoredStack.length - 1]);\r\n        this.operationsRestoredStack.pop();\r\n        let iOper = this.operationsHistoryStack[this.operationsHistoryStack.length - 1];\r\n        iOper.onRestore(this.component, iOper.inputData, iOper.outputData);\r\n    }\r\n    restoreOperations(number) {\r\n        for(let i = 0;i<number;i++) this.restoreLastOperation();\r\n    }\r\n    resumeAll() {\r\n        for(let oper in this.operationsHistoryStack) {\r\n            if(this.operationsHistoryStack[oper].type==2) this.operationsHistoryStack[oper].onResume();\r\n        }\r\n    }\r\n    resume(filter, firstOccur=false) {\r\n        for(let oper in this.operationsHistoryStack) {\r\n            let res = filter(this.operationsHistoryStack[oper], oper);\r\n            if(this.operationsHistoryStack[oper].type==2 && res) this.operationsHistoryStack[oper].onResume();\r\n            if(res && firstOccur) break;\r\n        }\r\n    }\r\n    setTypeRange() {\r\n\r\n    }\r\n    defineCustomInitialData(valCB) {\r\n        this._customInitialData.push(valCB.bind(this, [this, this.component]));\r\n    }\r\n    saveComponentCustomInitialData() {\r\n        let essentialVal = null;\r\n        for(let valCB in this._customInitialData) {\r\n            essentialVal = this._customInitialData[valCB]();\r\n            if(typeof essentialVal==\"object\") essentialVal = JSON.stringify(essentialVal);\r\n            window.sessionStorage.setItem(\"jumper_cs_\"+valCB+\"_\"+this.accessHash, essentialVal);\r\n        }\r\n    }\r\n    restoreComponentCustomInitialData() {\r\n        for(let valCB in this._customInitialData) {\r\n            let essentialVal = window.sessionStorage.getItem(\"jumper_cs_\"+valCB+\"_\"+this.accessHash);\r\n            if(essentialVal!=null) this.component[valCB] = essentialVal;\r\n        }\r\n    }\r\n    restoreComponentProp(propName) {\r\n        return window.sessionStorage.getItem(\"jumper_po_\"+propName+\"_\"+this.accessHash);\r\n    }\r\n    saveComponentProp(propName) {\r\n        window.sessionStorage.setItem(\"jumper_po_\"+propName+\"_\"+this.accessHash, this.component[propName]);\r\n    }\r\n    saveComponentProps() {\r\n\r\n    }\r\n    saveComponentState() {\r\n\r\n    }\r\n    get accessHash() {\r\n        if(typeof this._retrivedHash==\"undefined\") {\r\n            let ach = this.component.constructor.name+\"#\"+cyrb53(this.component.constructor.toString());\r\n            this._retrivedHash = ach;\r\n            return ach;\r\n        } else return this._retrivedHash;\r\n    }\r\n    getComponentLastSavedData() { let dt = window.sessionStorage.getItem(\"jumper_c_\"+this.accessHash); return dt!=null ? dt.split(\";\") : null; }\r\n    saveStacksSessions() {\r\n        window.sessionStorage.setItem(\"jumper_c_\"+this.accessHash, this.toString());\r\n        let hl = \"\", rl = \"\";\r\n        for(let ha in this.operationsHistoryStack) { if(this.operationsHistoryStack[ha].type==3) { hl += this.operationsHistoryStack[ha].toString().replace(/\\&/g, \"\\\\&\"); if(ha!=this.operationsHistoryStack.length - 1) hl += \"&\"; } }\r\n        window.sessionStorage.setItem(\"jumper_sh_\"+this.accessHash, hl);\r\n        for(let ra in this.operationsRestoredStack) { if(this.operationsHistoryStack[ra].type==3) { rl += this.operationsRestoredStack[ra].toString().replace(/\\&/g, \"\\\\&\"); if(ra!=this.operationsRestoredStack.length - 1) rl += \"&\"; } }\r\n        window.sessionStorage.setItem(\"jumper_sr_\"+this.accessHash, rl);\r\n    }\r\n    restoreStacksSessions() {\r\n        let resActions = null;\r\n        if(resActions = window.sessionStorage.getItem(\"jumper_c_\"+this.accessHash)!=null) {\r\n            try {\r\n            this.lastAction = \"operationsLoad\";\r\n            resActions = splitByParsing(resActions, \";\", \"/\");\r\n            this._lastID = parseInt(resActions[0]);\r\n            let jumperS1 = window.sessionStorage.getItem(\"jumper_sh_\"+this.accessHash);\r\n            if(jumperS1!=null) {\r\n                jumperS1 = splitByParsing(jumperS1, \"&\", \"/\");\r\n                console.log(jumperS1);\r\n                let outCpt = {};\r\n                for(let onceRes in jumperS1) {\r\n                    console.log(jumperS1[onceRes]);\r\n                    if(this.stackHistorySize>=this.operationsHistoryStack.length) {\r\n                    let jumperAParams = splitByParsing(jumperS1[onceRes], \";\", \"/\"), jumperA = new (this.getOperationByNamespace(jumperAParams[0]));\r\n                    console.log(jumperAParams);\r\n                    let cd = jumperAParams[1].split(/[- :]/);\r\n                    jumperA.creationDate = new Date(Date.UTC(cd[0], cd[1]-1, cd[2], cd[3], cd[4], cd[5]));\r\n                    let ud = jumperAParams[2].split(/[- :]/);\r\n                    jumperA.updateDate = new Date(Date.UTC(ud[0], ud[1]-1, ud[2], ud[3], ud[4], ud[5]));\r\n                    jumperA.outputData = JSONSafteyParse(jumperAParams[3], {}, (err)=>{});\r\n                    jumperA.lastInputData = JSONSafteyParse(jumperAParams[4], {}, (err)=>{});\r\n                    console.log(jumperA);\r\n                    outCpt = jumperA.onStore(this.component, jumperA.lastInputData, jumperA.outputData) || {};\r\n                    this.operationsHistoryStack.push(jumperA);\r\n                    jumperA.onResume(this.component, jumperA.lastInputData);\r\n                    \r\n                    }\r\n                }\r\n                this.component.setState(Object.assign(outCpt, {actionHandler:this.dump()}));\r\n            }\r\n            let jumperS2 = window.sessionStorage.getItem(\"jumper_sr_\"+this.accessHash);\r\n            if(jumperS2!=null) {\r\n                jumperS2 = splitByParsing(jumperS2, \"&\", \"/\");\r\n                let outCpt = {};\r\n                for(let onceRes in jumperS2) {\r\n                    if(this.stackRestoredSize>=this.operationsRestoredStack.length) {\r\n                    let jumperAParams = splitByParsing(jumperS2[onceRes], \";\", \"/\"), jumperA = new (this.getOperationByNamespace(jumperAParams[0]));\r\n                    let cd = jumperAParams[1].split(/[- :]/);\r\n                    jumperA.creationDate = new Date(Date.UTC(cd[0], cd[1]-1, cd[2], cd[3], cd[4], cd[5]));\r\n                    let ud = jumperAParams[2].split(/[- :]/);\r\n                    jumperA.updateDate = new Date(Date.UTC(ud[0], ud[1]-1, ud[2], ud[3], ud[4], ud[5]));\r\n                    jumperA.outputData = JSONSafteyParse(jumperAParams[3], {}, (err)=>{});\r\n                    jumperA.lastInputData = JSONSafteyParse(jumperAParams[4], {}, (err)=>{});\r\n                    outCpt = jumperA.onStore(this.component, jumperA.lastInputData, jumperA.outputData) || {};\r\n                    this.operationsRestoredStack.push(jumperA, jumperA.lastInputData);\r\n                    jumperA.onResume(this.component, jumperA.lastInputData);\r\n                    }\r\n                }\r\n                this.component.setState(Object.assign(outCpt, {actionHandler:this.dump()}));\r\n            }\r\n            } catch(e) {\r\n                console.error(e);\r\n            }\r\n        }\r\n    }\r\n    toString() { return `${this._lastID};${new Date().toISOString().slice(0, 19).replace('T', ' ')};${this.lastAction}`; /*${cyrb53(this.component.constructor.toString())};*/ }\r\n    dump() { return `${this.lastAction}`; }\r\n    /* Events */\r\n    onRestore() {/* Native Code */}\r\n}\r\n\r\nexport class ActionOperation {\r\n    name = \"\";\r\n    description = \"\";\r\n    type = -1;\r\n    mark = \"all\";\r\n    creationDate = new Date();\r\n    updateDate = new Date();\r\n    lastInputData = {};\r\n    outputData = {};\r\n    requires = [];\r\n\r\n    constructor(mark=\"all\", name, desc=\"\", type=1) {\r\n        this.mark = mark;\r\n        this.name = name;\r\n        this.description = desc;\r\n        this.type = type;\r\n    }\r\n    onStart(c, i, o) {/* Native Code */}\r\n    onStore(c, i, o) {/* Native Code */}\r\n    onRestore() {/* Native Code */}\r\n    onFlush() {/* Native Code */}\r\n    onUpdate() {/* Native Code */}\r\n    toString() {\r\n        return `${this.constructor.name};${this.creationDate.toISOString().slice(0, 19).replace('T', ' ')};${this.updateDate.toISOString().slice(0, 19).replace('T', ' ')};${JSON.stringify(this.outputData)};${JSON.stringify(this.lastInputData)}`;\r\n    }\r\n}\r\n\r\nexport class ActionEventsOperation extends ActionOperation {\r\n    type = 2;\r\n    events = [];\r\n\r\n    constructor(mark=\"all\") {\r\n        super(mark);\r\n    }\r\n\r\n    onRestore() {this.restoreEventEntries();}\r\n\r\n    addEventEntry(elRef, evName, evFn) {\r\n        this.events.push({element:elRef, eventName:evName, event:evFn});   \r\n    }\r\n\r\n    restoreEventEntries() {\r\n        this.events.forEach((val, ind, arr)=>{\r\n            if(typeof val.element==\"string\") {\r\n                let el = document.querySelector(val.element);\r\n                el.addEventListener(val.eventName, val.event);\r\n            } else {\r\n                val.element.addEventListener(val.eventName, val.event);\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport class ActionResumeOperation extends ActionOperation {\r\n    type = 3;\r\n    events = [];\r\n\r\n    constructor(mark=\"all\") {\r\n        super(mark);\r\n    }\r\n    onResume(s, i) {/* Native Code */}\r\n}\r\n\r\nexport class TemponaryActionOperation extends ActionOperation {\r\n    type = 4;\r\n\r\n    constructor() {\r\n\r\n    }\r\n    \r\n    update() {\r\n\r\n    }\r\n\r\n    updateTo() {\r\n\r\n    }\r\n\r\n    onReject() {/* Native Code */}\r\n}\r\n\r\nexport default { ActionsStack, ActionOperation, ActionResumeOperation, TemponaryActionOperation };","C:\\xampp\\htdocs\\LabEnv\\labenv\\src\\packages\\Jumper\\components.js",["484","485","486","487","488","489","490","491","492","493","494","495","496","497","498","499","500","501","502","503","504","505","506","507","508","509","510","511","512","513","514","515","516","517","518","519","520","521","522","523","524","525","526","527","528","529","530","531","532","533","534","535","536","537","538","539","540","541","542","543","544","545","546","547","548","549","550","551","552","553","554","555","556","557","558","559","560","561","562","563","564","565","566","567","568","569","570","571","572","573","574","575","576","577","578"],"/* Jumper | Components Module | Grano22 Dev */\r\nimport React, {Component} from 'react';\r\nimport { RawHTML } from 'react-dom';\r\nimport { format } from './dataProcessing';\r\n\r\n//parse HTML string to Native Elements\r\nexport function parseHTMLComponent(htmlStr, allowedTags=[], allowed=true) {\r\n    try {\r\n        let parsedElements = [], charMetrices = \"\", inHTMLChar = 0, lastTag = { attrs:{} }, inAttr = false;\r\n        if(allowedTags.length>0) var completeTags = \"\";\r\n        for(let htmlChar=0;htmlChar<htmlStr.length;htmlChar++) {\r\n            try {\r\n                if(allowedTags.length>0 && inHTMLChar>0) completeTags += htmlStr[htmlChar];\r\n                if(inHTMLChar<=0 && htmlStr[htmlChar]==\"<\" && htmlStr[parseInt(htmlChar + 1)].trim()!=\"\") {\r\n                    if(charMetrices!=\"\") parsedElements.push(document.createTextNode(charMetrices));\r\n                    charMetrices = \"\";\r\n                    inHTMLChar = 1;\r\n                } else if(inHTMLChar==2 && inAttr && htmlStr[htmlChar]=='\"') {\r\n                    charMetrices = charMetrices.trimStart().trimLeft();\r\n                    let attrName, attrVal;\r\n                        attrName = charMetrices.split(\"=\");\r\n                        attrVal = attrName[1];\r\n                        attrName = attrName[0];\r\n                        lastTag.attrs[attrName] = attrVal;\r\n                        charMetrices = \"\";\r\n                        inAttr = false;\r\n                        if(htmlStr[htmlChar]==\">\") inHTMLChar = 3;\r\n                        else if(htmlStr[htmlChar]==\"/\") {\r\n                            parsedElements.push(React.createElement(lastTag.tagName, lastTag.attrs, []));\r\n                            inHTMLChar = 0;\r\n                            htmlChar += 2;\r\n                            lastTag = { attrs:{} };\r\n                        }\r\n                } else if(charMetrices.trim()!=\"\" && !inAttr && inHTMLChar==2 && (htmlStr[parseInt(htmlChar)].trim()==\"\" || htmlStr[htmlChar]==\">\" || (htmlStr[htmlChar]==\"/\" && htmlStr[parseInt(htmlChar) + 1]==\">\")) && htmlStr[parseInt(htmlChar) - 1].trim()!=\"\") {\r\n                    charMetrices = charMetrices.trim();\r\n                    lastTag.attrs[charMetrices] = true;\r\n                    charMetrices = \"\";\r\n                    if(htmlStr[htmlChar]==\">\") inHTMLChar = 3;\r\n                    else if(htmlStr[htmlChar]==\"/\") {\r\n                        let compactEl = document.createElement(lastTag.tagName);\r\n                        for(let attr in lastTag.attrs) compactEl.setAttribute(attr, lastTag.attrs[attr]);\r\n                        parsedElements.push(compactEl);\r\n                        inHTMLChar = 0;\r\n                        htmlChar += 2;\r\n                        lastTag = { attrs:{} };\r\n                    }\r\n                } else if(!inAttr && inHTMLChar==2 && htmlStr[htmlChar]=='\"') {\r\n                    if(htmlStr[htmlChar - 1]==\"=\") inAttr = true; else throw \"^Attribute hasn't equaled or enclosed \"+charMetrices;\r\n                } else if(inHTMLChar==2 && htmlStr[htmlChar]==\">\") {\r\n                    inHTMLChar = 3;\r\n                } else if(inHTMLChar==1 && (htmlStr[parseInt(htmlChar)].trim()==\"\" || htmlStr[htmlChar]==\">\")) {\r\n                    if(htmlStr[htmlChar]==\">\") inHTMLChar = 3; else inHTMLChar = 2;\r\n                    lastTag.tagName = charMetrices;\r\n                    charMetrices = \"\";\r\n                } else if(inHTMLChar==3 && htmlStr[htmlChar]==\"<\" && htmlStr[parseInt(htmlChar) + 1]==\"/\" && htmlStr.substr(htmlChar, lastTag.tagName.length + 3)===\"</\"+lastTag.tagName+\">\") {\r\n                    lastTag.children = [];\r\n                    lastTag.textContent = charMetrices;\r\n                    if((allowed && (allowedTags.length<=0 || allowedTags.includes(lastTag.tagName))) || (!allowed && (allowedTags.length<=0 || !allowedTags.includes(lastTag.tagName)))) {\r\n                        let compactEl = document.createElement(lastTag.tagName);\r\n                        for(let attr in lastTag.attrs) compactEl.setAttribute(attr, lastTag.attrs[attr]);\r\n                        if(Array.isArray(lastTag.children)) { for(let child in lastTag.children) compactEl.appendChild(lastTag.children[child]); } else if(lastTag.children instanceof HTMLElement || lastTag.children instanceof Text) compactEl.appendChild(lastTag.children); else throw \"Tag child must be an array of child or HTMLElement or Text\";\r\n                        parsedElements.push(compactEl);\r\n                    } else if((!allowed && (allowedTags.length<=0 || allowedTags.includes(lastTag.tagName))) || allowed) {\r\n                        parsedElements.push(document.createTextNode(\"<\"+completeTags+\"/\"+lastTag.tagName+\">\"));\r\n                    }\r\n                    inHTMLChar = 0;\r\n                    htmlChar += lastTag.tagName.length + 2;\r\n                    lastTag = { attrs:{} };\r\n                    charMetrices = \"\";\r\n                    if(allowedTags.length>0) completeTags = \"\";\r\n                } else if((inHTMLChar==1 || inHTMLChar==2) && htmlStr[htmlChar]==\"/\" && htmlStr[parseInt(htmlChar) + 1]==\">\") {\r\n                    if((allowed && (allowedTags.length<=0 || allowedTags.includes(lastTag.tagName))) || (!allowed && (allowedTags.length<=0 || !allowedTags.includes(lastTag.tagName)))) {\r\n                        let compactEl = document.createElement(lastTag.tagName);\r\n                        for(let attr in lastTag.attrs) compactEl.setAttribute(attr, lastTag.attrs[attr]);\r\n                        parsedElements.push(compactEl);\r\n                    } else if((!allowed && (allowedTags.length<=0 || allowedTags.includes(lastTag.tagName))) || allowed) {\r\n                        parsedElements.push(document.createTextNode(\"<\"+completeTags+\">\"));\r\n                    }\r\n                    inHTMLChar = 0;\r\n                    htmlChar += 2;\r\n                    lastTag = { attrs:{} };\r\n                } else if(htmlStr.length - 1==parseInt(htmlChar)) {\r\n                    if(inHTMLChar>0) throw \"^Tag hasn't closed, please close specified tag \"+lastTag.tagName; else if(charMetrices!=\"\") {\r\n                        charMetrices += htmlStr[htmlChar];\r\n                        parsedElements.push(document.createTextNode(charMetrices));\r\n                    }\r\n                } else charMetrices += htmlStr[htmlChar];\r\n            } catch(PartialParseError) {\r\n                if(PartialParseError.indexOf(\"^\")==0) throw PartialParseError;\r\n                console.error(PartialParseError, htmlChar);\r\n            }\r\n        }\r\n        return parsedElements.length>1 ? parsedElements : parsedElements[0];\r\n    } catch(ParseError) {\r\n        if(ParseError.indexOf(\"^\")==0) ParseError = ParseError.replace(\"^\", \"\");\r\n        console.error(ParseError);\r\n        return document.createTextNode(\"[Object error]\");\r\n    }\r\n}\r\n\r\n//Parse HTML string to React Component\r\nexport function parseHTMLReactComponent(htmlStr, allowedTags=[], allowed=true) {\r\n    try {\r\n        let parsedElements = [], charMetrices = \"\", inHTMLChar = 0, lastTag = { attrs:{} }, inAttr = false;\r\n        if(allowedTags.length>0) var completeTags = \"\";\r\n        for(let htmlChar=0;htmlChar<htmlStr.length;htmlChar++) {\r\n            try {\r\n                if(allowedTags.length>0 && inHTMLChar>0) completeTags += htmlStr[htmlChar];\r\n                if(inHTMLChar<=0 && htmlStr[htmlChar]==\"<\" && htmlStr[parseInt(htmlChar + 1)].trim()!=\"\") {\r\n                    if(charMetrices!=\"\") parsedElements.push(React.createElement(React.Fragment, {}, [charMetrices]));\r\n                    charMetrices = \"\";\r\n                    inHTMLChar = 1;\r\n                } else if(inHTMLChar==2 && inAttr && htmlStr[htmlChar]=='\"') {\r\n                    charMetrices = charMetrices.trimStart().trimLeft();\r\n                    let attrName, attrVal;\r\n                        attrName = charMetrices.split(\"=\");\r\n                        attrVal = attrName[1];\r\n                        attrName = attrName[0];\r\n                        if(attrName==\"style\") {\r\n                            let entries = attrVal.split(\";\"), tempProps = {}, params = [];\r\n                            for(let entry in entries) {\r\n                                params = entries[entry].split(\":\");\r\n                                while(params[0].indexOf(\"-\")>-1) { if(true || params[0].indexOf(\"-\")>0) { params[0] = params[0].split(\"\"); params[0][params[0].indexOf(\"-\") + 1] = params[0][params[0].indexOf(\"-\") + 1].toUpperCase(); params[0] = params[0].join(\"\"); } params[0] = params[0].replace(\"-\", \"\"); }\r\n                                tempProps[params[0]] = params[1];\r\n                            }\r\n                            attrVal = tempProps;\r\n                        }\r\n                        lastTag.attrs[attrName] = attrVal;\r\n                        charMetrices = \"\";\r\n                        inAttr = false;\r\n                        if(htmlStr[htmlChar]==\">\") inHTMLChar = 3;\r\n                        else if(htmlStr[htmlChar]==\"/\") {\r\n                            parsedElements.push(React.createElement(lastTag.tagName, lastTag.attrs, []));\r\n                            inHTMLChar = 0;\r\n                            htmlChar += 2;\r\n                            lastTag = { attrs:{} };\r\n                        }\r\n                } else if(charMetrices.trim()!=\"\" && !inAttr && inHTMLChar==2 && (htmlStr[parseInt(htmlChar)].trim()==\"\" || htmlStr[htmlChar]==\">\" || (htmlStr[htmlChar]==\"/\" && htmlStr[parseInt(htmlChar) + 1]==\">\")) && htmlStr[parseInt(htmlChar) - 1].trim()!=\"\") {\r\n                    charMetrices = charMetrices.trim();\r\n                    lastTag.attrs[charMetrices] = true;\r\n                    charMetrices = \"\";\r\n                    if(htmlStr[htmlChar]==\">\") inHTMLChar = 3;\r\n                    else if(htmlStr[htmlChar]==\"/\") {\r\n                        parsedElements.push(React.createElement(lastTag.tagName, lastTag.attrs, []));\r\n                        inHTMLChar = 0;\r\n                        htmlChar += 2;\r\n                        lastTag = { attrs:{} };\r\n                    }\r\n                } else if(!inAttr && inHTMLChar==2 && htmlStr[htmlChar]=='\"') {\r\n                    if(htmlStr[htmlChar - 1]==\"=\") inAttr = true; else throw \"^Attribute hasn't equaled or enclosed \"+charMetrices;\r\n                } else if(inHTMLChar==2 && htmlStr[htmlChar]==\">\") {\r\n                    inHTMLChar = 3;\r\n                } else if(inHTMLChar==1 && (htmlStr[parseInt(htmlChar)].trim()==\"\" || htmlStr[htmlChar]==\">\")) {\r\n                    if(htmlStr[htmlChar]==\">\") inHTMLChar = 3; else inHTMLChar = 2;\r\n                    lastTag.tagName = charMetrices;\r\n                    charMetrices = \"\";\r\n                } else if(inHTMLChar==3 && htmlStr[htmlChar]==\"<\" && htmlStr[parseInt(htmlChar) + 1]==\"/\" && htmlStr.substr(htmlChar, lastTag.tagName.length + 3)===\"</\"+lastTag.tagName+\">\") {\r\n                    lastTag.children = [];\r\n                    lastTag.textContent = charMetrices;\r\n                    if((allowed && (allowedTags.length<=0 || allowedTags.includes(lastTag.tagName))) || (!allowed && (allowedTags.length<=0 || !allowedTags.includes(lastTag.tagName)))) {\r\n                        if(charMetrices!=\"\") lastTag.children = parseHTMLReactComponent(lastTag.textContent);\r\n                        parsedElements.push(React.createElement(lastTag.tagName, lastTag.attrs, Array.isArray(lastTag.children) ? lastTag.children : [lastTag.children]));\r\n                    } else if((!allowed && (allowedTags.length<=0 || allowedTags.includes(lastTag.tagName))) || allowed) {\r\n                        parsedElements.push(React.createElement(React.Fragment, {}, [\"<\"+completeTags+\"/\"+lastTag.tagName+\">\"]));\r\n                    }\r\n                    inHTMLChar = 0;\r\n                    htmlChar += lastTag.tagName.length + 2;\r\n                    lastTag = { attrs:{} };\r\n                    charMetrices = \"\";\r\n                    if(allowedTags.length>0) completeTags = \"\";\r\n                } else if((inHTMLChar==1 || inHTMLChar==2) && htmlStr[htmlChar]==\"/\" && htmlStr[parseInt(htmlChar) + 1]==\">\") {\r\n                    if((allowed && (allowedTags.length<=0 || allowedTags.includes(lastTag.tagName))) || (!allowed && (allowedTags.length<=0 || !allowedTags.includes(lastTag.tagName)))) {\r\n                        parsedElements.push(React.createElement(lastTag.tagName, lastTag.attrs));\r\n                    } else if((!allowed && (allowedTags.length<=0 || allowedTags.includes(lastTag.tagName))) || allowed) {\r\n                        parsedElements.push(React.createElement(React.Fragment, {}, [\"<\"+completeTags+\">\"]));\r\n                    }\r\n                    inHTMLChar = 0;\r\n                    htmlChar += 2;\r\n                    lastTag = { attrs:{} };\r\n                } else if(htmlStr.length - 1==parseInt(htmlChar)) {\r\n                    if(inHTMLChar>0) throw \"^Tag hasn't closed, please close specified tag \"+lastTag.tagName; else if(charMetrices!=\"\") {\r\n                        charMetrices += htmlStr[htmlChar];\r\n                        parsedElements.push(React.createElement(React.Fragment, {}, [charMetrices]));\r\n                    }\r\n                } else charMetrices += htmlStr[htmlChar];\r\n            } catch(PartialParseError) {\r\n                if(PartialParseError.indexOf(\"^\")==0) throw PartialParseError;\r\n                console.error(PartialParseError, htmlChar);\r\n            }\r\n        }\r\n        return parsedElements.length>1 ? parsedElements : parsedElements[0];\r\n    } catch(ParseError) {\r\n        if(ParseError.indexOf(\"^\")==0) ParseError = ParseError.replace(\"^\", \"\");\r\n        console.error(ParseError);\r\n        return React.createElement(React.Fragment, {}, [\"[Object error]\"])\r\n    }\r\n}\r\n\r\nexport var HTMLReactParser = new class {\r\n    constructor() {\r\n\r\n    }\r\n\r\n    parse() {\r\n\r\n    }\r\n}\r\n\r\nexport default class Widget extends Component {\r\n    structure = \"\";\r\n    params = \"\";\r\n\r\n    constructor(props, typesPrep) {\r\n        super(props);\r\n        let self = this;\r\n        for(let propName of [\"structure\", \"childProps\", \"parentProps\"]) if(typeof props[propName]!=\"undefined\") self[propName] = props[propName];\r\n        typesPrep.forEach((propName)=>{\r\n            let propt = propName.split(\"'\")[0], propn = propName.split(\"'\")[1];\r\n            try {\r\n            if(typeof props[propn]!=\"undefined\") {\r\n            switch(propt) {\r\n                case \"f\":\r\n                    if(typeof props[propn]==\"function\") this[propn] = props[propn].bind(this); else throw \"functon\";\r\n                break;\r\n                case \"a\":\r\n                    if(Array.isArray(props[propn])) this[propn] = props[propn]; else throw \"array\";\r\n                break;\r\n                case \"s\":\r\n                    if(typeof props[propn]==\"string\") this[propn] = props[propn]; else throw \"string\";\r\n                break;\r\n                case \"n\":\r\n                    if(typeof props[propn]==\"number\") this[propn] = props[propn]; else throw \"number\";\r\n                break;\r\n                case \"b\":\r\n                    if(typeof props[propn]==\"boolean\") this[propn] = props[propn]; else throw \"boolean\";\r\n                break;\r\n                case \"o\":\r\n                    if(typeof props[propn]==\"number\") this[propn] = props[propn]; else throw \"number\";\r\n                break;\r\n                case \"c\":\r\n                    if(React.isValidElement(self.outputList)) this[propn] = props[propn]; else throw \"react.element\";\r\n                break;\r\n            }\r\n            }\r\n            } catch(PropertyAssertingError) {\r\n                console.error(`Instance ${self.costructor.name} requires property ${propn} as type ${propt}, actual invaild type is ${typeof props[propn]}`);\r\n            }\r\n        });\r\n    }\r\n\r\n    prepareOutput(strHTML, params) {\r\n        return parseHTMLReactComponent(format(strHTML, params));\r\n    }\r\n\r\n    prepare() {\r\n        return this.preparedOutput(this.structure || \"\", this.params || null);\r\n    }\r\n\r\n    output() {\r\n        try { \r\n        let preparedOutput = this.prepare();\r\n        if(React.isValidElement(preparedOutput)) return preparedOutput;\r\n        else if(Array.isArray(preparedOutput)) {\r\n            let combinedArray = [];\r\n            for(let prepItem in preparedOutput) {\r\n                    if(React.isValidElement(preparedOutput[prepItem])) combinedArray.push(preparedOutput[prepItem]);\r\n                    else if(typeof preparedOutput[prepItem]==\"object\" && typeof preparedOutput[prepItem].render!=\"undefined\") combinedArray.push(preparedOutput[prepItem].render());\r\n            }\r\n            return preparedOutput;\r\n        } else if(typeof preparedOutput==\"object\" && typeof preparedOutput.render!=\"undefined\") return preparedOutput.render();\r\n        } catch(OutputPreparationError) {\r\n            console.error(OutputPreparationError);\r\n            return (<></>);\r\n        }\r\n    }\r\n}\r\n\r\n//ListWidget Component\r\nexport class ListWidget extends Widget {\r\n    constructor(props, typesPrep) {\r\n        super(props, [\"a'outputList\", \"s'headerStructure\", \"s'valueDeterminer\"].concat(typesPrep || []));\r\n        this.sourceOutputList = this.outputList;\r\n        //for(let propName of [\"headerStructure\"]) if(typeof props[propName]!=\"undefined\") this[propName] = props[propName];\r\n    }\r\n\r\n    prepare() {\r\n        let self = this, elArr = [], childProps = this.childProps, parsedProps = {}, parentProps = this.parentProps, parsedParentProps = {};\r\n        elArr = this.outputList.map((elE, ind)=>{\r\n            parsedProps = {};\r\n            for(let childProp in childProps) parsedProps[childProp] = format(childProps[childProp].replace(\"$i\", ind), elE);\r\n            if(typeof elE.type!=\"undefined\" && elE.type==1) {\r\n                parsedProps.className = typeof parsedProps.className!=\"undefined\" ? \"header\" + parsedProps.className : \"header\";\r\n                return self.prepareHeaderItem(parsedProps, elE);\r\n            } else {\r\n                return self.prepareItem(parsedProps, elE);\r\n            }\r\n        });\r\n        return this.prepareBaseContainer(parsedParentProps, elArr);\r\n    }\r\n\r\n    prepareBaseContainer(parentProps, elArr) {\r\n        let self = this;\r\n        if([\"stickyList\", \"propsalList\"].includes(this.state.outputType)) parentProps.className = this.state.outputType; else parentProps.className = \"propsalList\";\r\n        return (<ul {...parentProps}>{elArr}</ul>);\r\n    }\r\n\r\n    prepareHeaderItem(childProps, objProps) {\r\n        let self = this;\r\n        return (<li {...childProps}>{self.prepareOutput(this.headerStructure || this.structure, objProps)}</li>);\r\n    }\r\n\r\n    prepareItem(childProps, objProps) {\r\n        let self = this;\r\n        return (<li {...childProps}>{self.prepareOutput(this.structure, objProps)}</li>);\r\n    }\r\n}\r\n\r\n/*module.export = {\r\n    parseHTMLComponent:parseHTMLComponent,\r\n    parseHTMLReactComponent:parseHTMLReactComponent,\r\n    Widget:Widget\r\n}*/","C:\\xampp\\htdocs\\LabEnv\\labenv\\src\\packages\\Jumper\\cryptography.js",["579"],"export function basicHashString(str) {\r\n    var hash = 0;\r\n    if (str.length == 0) return hash;\r\n    for (var i = 0; i < str.length; i++) {\r\n        var char = str.charCodeAt(i);\r\n        hash = ((hash<<5)-hash)+char;\r\n        hash = hash & hash;\r\n    }\r\n    return Math.abs(hash);\r\n}\r\n\r\nexport function cyrb53(str, seed = 0) {\r\n    let h1 = 0xdeadbeef ^ seed, h2 = 0x41c6ce57 ^ seed;\r\n    for (let i = 0, ch; i < str.length; i++) {\r\n        ch = str.charCodeAt(i);\r\n        h1 = Math.imul(h1 ^ ch, 2654435761);\r\n        h2 = Math.imul(h2 ^ ch, 1597334677);\r\n    }\r\n    h1 = Math.imul(h1 ^ (h1>>>16), 2246822507) ^ Math.imul(h2 ^ (h2>>>13), 3266489909);\r\n    h2 = Math.imul(h2 ^ (h2>>>16), 2246822507) ^ Math.imul(h1 ^ (h1>>>13), 3266489909);\r\n    return 4294967296 * (2097151 & h2) + (h1>>>0);\r\n};\r\n\r\n","C:\\xampp\\htdocs\\LabEnv\\labenv\\src\\packages\\Jumper\\dataProcessing.js",["580","581","582","583","584","585","586","587","588","589","590","591","592","593","594","595","596","597","598","599","600","601","602"],"export function JSONSafteyParse(inObj, defaultVal=null, onError=null) {\r\n    try {\r\n        let nd = JSON.parse(inObj);\r\n        return nd;\r\n    } catch (objError) {\r\n        if (objError instanceof SyntaxError) {\r\n            console.error(objError.name);\r\n        } else {\r\n            console.error(objError.message);\r\n        }\r\n        if(typeof onError==\"function\") onError(objError);\r\n        if(defaultVal) return defaultVal;\r\n    }\r\n}\r\n\r\nexport function replaceAt(str, index, replacement) {\r\n    return str.substr(0, index) + replacement + str.substr(index + replacement.length);\r\n}\r\n\r\nexport function replaceBetween(str, start, end, replacement) {\r\n    return str.substring(0, start) + replacement + str.substring(end);\r\n};\r\n  \r\n\r\nexport function changeArrayIndex(arr, oldIndex, newIndex) {\r\n    try {\r\n        if(typeof newIndex==\"string\") {\r\n            if(newIndex.indexOf(\"+\")==0 || newIndex.indexOf(\"-\")==0) { newIndex = parseInt(oldIndex) + parseInt(newIndex);  }\r\n            //else if(newIndex.indexOf(\"-\")==0) { newIndex = oldIndex - parseInt(newIndex); }\r\n            else if(isFinite(parseInt(newIndex))) newIndex = parseInt(newIndex);\r\n            else throw \"Cannot change array index due to non decimal newIndex argument type\";\r\n        }\r\n        if(newIndex>arr.length-1) newIndex = arr.length - 1;\r\n        if(newIndex<0) newIndex = 0;\r\n        /*if (newIndex >= arr.length) {\r\n            var k = newIndex - arr.length + 1;\r\n            while (k--) arr.push(undefined);\r\n        }*/\r\n        arr.splice(newIndex, 0, arr.splice(oldIndex, 1)[0]);\r\n    } catch(ArrayOperationError) {\r\n        console.error(ArrayOperationError);\r\n    }\r\n}\r\n\r\nexport function splitAllWithSeparators(str, sepArr=[]) {\r\n    let outputArr = [], strClud = \"\";\r\n    for(let charn in str) {\r\n        strClud += str[charn];\r\n        if(sepArr.includes(str[charn])) {\r\n            outputArr.push(strClud);\r\n            strClud = \"\";\r\n        }\r\n    }\r\n    return outputArr;\r\n}\r\n\r\nexport function backOccurence(str, target) {\r\n    let strClud = \"\";\r\n    for(let charn = str.length;charn>0;charn--) {\r\n        strClud += str[charn]\r\n        if(strClud.split(\"\").reverse().join()==target) return charn;\r\n    }\r\n    return -1;\r\n}\r\n\r\nexport function iterateObjectKeys(tgObj, inputKeys) {\r\n    let lastVal = null, expKeys = inputKeys.slice();\r\n    while(expKeys.length>0) {\r\n        if(typeof tgObj[expKeys[0]]!=\"undefined\") lastVal = tgObj[expKeys[0]];\r\n        expKeys.shift();\r\n    }\r\n    return lastVal;\r\n}\r\n\r\nexport function format(targetStr, initialObj=null, defaultVal=\"\") {\r\n    try {\r\n        let sequences = [], sequence = \"\", inVarDeclaration = false, outputStr = \"\", fParams = [], depth = 0;\r\n        for(let charn in targetStr) {\r\n            if(targetStr.hasOwnProperty(charn)) {\r\n            if(!inVarDeclaration && (typeof targetStr[charn - 1]==\"undefined\" || targetStr[charn - 1]!=\"\\\\\") && targetStr[charn]==\"%\" && targetStr[parseInt(charn) + 1].trim()!=\"\") {\r\n                inVarDeclaration = true;\r\n            } else if(inVarDeclaration && targetStr[charn]==\"[\") {\r\n                if(depth==0 && ![\"s\", \"n\", \"b\", \"a\", \"f\", \"d\"].includes(sequence)) throw \"Unknown type given in format \"+sequence+\" at position \"+charn;\r\n                if(depth==0) { fParams.push(sequence);\r\n                sequence = \"\"; }\r\n                depth++;\r\n            } else if(inVarDeclaration && targetStr[charn]==\"]\") {\r\n                fParams.push(sequence);\r\n                sequences.push(fParams);\r\n                sequence = \"\";\r\n                if(targetStr[parseInt(charn) + 1]!=\"[\") {\r\n                    inVarDeclaration = false;\r\n                    fParams = [];\r\n                    depth = 0;\r\n                } else depth++;\r\n            } else if(inVarDeclaration && (targetStr[charn].trim()==\"\" || targetStr.length - 1<=parseInt(charn))) {\r\n                if(targetStr.length - 1<=parseInt(charn)) sequence += targetStr[charn];\r\n                if(sequence.indexOf(\"[\")>-1) throw \"Format proeprty name cannot have a whitespace\";\r\n                if(![\"s\", \"n\", \"b\", \"a\", \"f\", \"d\"].includes(sequence)) throw \"Unknown type given in format \"+sequence+\" at position \"+charn;\r\n                fParams.push(sequence);\r\n                sequences.push(fParams);\r\n                sequence = \"\";\r\n                inVarDeclaration = false;\r\n                fParams = [];\r\n            } else if(inVarDeclaration && targetStr[charn]!=\"[\" && targetStr[charn]!=\"_\" && !(targetStr[charn].charCodeAt()>=65 && targetStr[charn].charCodeAt()<=90) && !(targetStr[charn].charCodeAt()>=97 && targetStr[charn].charCodeAt()<=122)) throw \"Invaild symbol \"+targetStr[charn]+\" at position \"+charn;\r\n            else if(inVarDeclaration) sequence += targetStr[charn];\r\n            }\r\n        }\r\n        outputStr = targetStr;\r\n        let currItem = null;\r\n        for(let catched in sequences) {\r\n            if(Array.isArray(sequences[catched])) {\r\n                if(sequences[catched].length>0) {\r\n                    //initialObj[sequences[catched][1]]\r\n                    let seqParams = sequences[catched].slice();\r\n                    seqParams.shift();\r\n                    currItem = sequences[catched].length>1 ? iterateObjectKeys(initialObj, seqParams) || defaultVal : initialObj[catched];\r\n                    if(typeof currItem!=\"undefined\" && currItem!=null) {\r\n                    switch(sequences[catched][0]) {\r\n                        case \"s\":\r\n                            if(typeof currItem!=\"string\") currItem = currItem.toString();\r\n                            //outputStr = outputStr.replace(sequences[catched].length>1 ? \"%\"+sequences[catched][0]+\"[\"+sequences[catched][1]+\"]\" : \"%\"+sequences[catched][0], currItem);\r\n                            outputStr = outputStr.replace(\"%\"+sequences[catched][0]+seqParams.map(v=>\"[\"+v+\"]\").join(\"\"), currItem);\r\n                        break;\r\n                        case \"sr\":\r\n                            if(typeof currItem!=\"string\") throw \"positional argument \"+catched+\" requires type string\";\r\n                            outputStr = outputStr.replace(\"%\"+sequences[catched][0]+seqParams.map(v=>\"[\"+v+\"]\").join(\"\"), currItem);\r\n                        break;\r\n                        case \"f\":\r\n                            if(!(Number(currItem) === currItem && currItem % 1 !== 0)) { currItem = parseFloat(currItem); }\r\n                            outputStr = outputStr.replace(\"%\"+sequences[catched][0]+seqParams.map(v=>\"[\"+v+\"]\").join(\"\"), currItem);\r\n                        break;\r\n                        case \"d\":\r\n                            if(!(Number(currItem) === currItem && currItem % 1 === 0)) currItem = parseInt(currItem);\r\n                            outputStr = outputStr.replace(\"%\"+sequences[catched][0]+seqParams.map(v=>\"[\"+v+\"]\").join(\"\"), currItem);\r\n                        break;\r\n                        case \"b\":\r\n                            if(typeof currItem!=\"boolean\") currItem = !!currItem;\r\n                            outputStr = outputStr.replace(\"%\"+sequences[catched][0]+seqParams.map(v=>\"[\"+v+\"]\").join(\"\"), currItem);\r\n                        break;\r\n                    }\r\n                    }\r\n                } else throw \"Cannot parse format due to lack of type at index \"+catched+\" (function format error)\";\r\n            } else throw \"Cannot parse format due to invaild sequence type at index \"+catched+\" (function format error)\";\r\n            currItem = null;\r\n        }\r\n        return outputStr;\r\n    } catch(FormatingError) {\r\n        console.error(FormatingError);\r\n        return targetStr;\r\n    }\r\n}","C:\\xampp\\htdocs\\LabEnv\\labenv\\src\\packages\\Jumper\\Jumper.js",["603","604","605","606","607","608","609","610","611","612","613","614","615","616","617"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\n//Gloabl throwable and errors\r\n///throw new CriticalError(\"Something went badly wrong!\");\r\nfunction CriticalError(){ \r\n    Error.apply(this, arguments);\r\n    this.name = \"Critical Error\";\r\n}\r\nCriticalError.prototype = Object.create(Error.prototype);\r\n\r\nclass JumperCriticalError {\r\n    message = \"\";\r\n    addingDate = new Date();\r\n\r\n    constructor(mess=\"Critical unknown error\", selfExecution=true, debugLevel=0) {\r\n        this.message = mess;\r\n        if(selfExecution) this.execute();\r\n    }\r\n    execute() {\r\n        let errCont = document.createElement(\"div\");\r\n        errCont.innerHTML = `<style id=\"jumper_debuger_styles\" type=\"text/css\">\r\n        #jumper_debuger_fullwidth_error {\r\n            position: fixed;\r\n            width: 100%;\r\n            height: 100%;\r\n        }\r\n        #jumper_debuger_message_box {\r\n\r\n        }\r\n        </style><div id=\"jumper_debuger_fullwidth_error\"><div id=\"jumper_debuger_message_box\">\r\n            ${this.addingDate.toISOString().slice(0, 19).replace('T', ' ')}\r\n            ${this.message}\r\n\r\n        </div></div>`;\r\n        document.body.appendChild(errCont);\r\n    }\r\n}\r\n\r\nclass JumperConsoleEntry {\r\n    name = \"(Unknown Name)\";\r\n    description = \"(Unknown Description)\";\r\n    titledLines = [];\r\n    lines = [];\r\n    label = \"\";\r\n\r\n    addingDate = new Date();\r\n\r\n    constructor(lines, description=\"\", name=\"\", selfExecution=false) {\r\n        this.lines = lines;\r\n        this.description = description;\r\n        this.name = name;\r\n        if(selfExecution) this.execute();\r\n    }\r\n\r\n    execute() {/* Console Native Code */}\r\n\r\n    setLabel(label) { this.label = label; return this; }\r\n\r\n    addLine(newLine) { this.lines.push(newLine); }\r\n    deleteLine(lineIndex) { this.lines.splice(lineIndex, 1); }\r\n\r\n    valueOf() {\r\n        return this.toString();\r\n    }\r\n\r\n    toString() {\r\n        let itemsTitled = [];\r\n        if(this.titledLines) for(let titled in this.titledLines) itemsTitled[titled] = titled+': '+this.titledLines[titled]+'\\n';\r\n        return \"AddingDate: \"+this.addingDate.toISOString().slice(0, 19).replace('T', ' ')+\"\\n\"+(this.name.lenght>0 && \"Name: \"+this.name+\"\\n\")+(this.description.length>0 && \"Description: \"+this.description+\"\\n\")+itemsTitled+this.lines.join('\\n');\r\n    }\r\n}\r\n\r\nclass JumperLog extends JumperConsoleEntry {\r\n    name = \"(Unknown Name)\";\r\n    description = \"(Uknown Description)\";\r\n\r\n    constructor(name=\"\", description=\"\", selfExecution=true) {\r\n        super([], description, name, selfExecution);\r\n    }\r\n    execute() {console.log(`Name:\\n\\t${this.name}\\nDescription:\\n\\t${this.description}`);}\r\n}\r\n\r\nexport class JumperError extends JumperConsoleEntry {\r\n    name = \"(Unknown Name)\";\r\n    description = \"(Uknown Description)\";\r\n    no = -1;\r\n\r\n    constructor(no=-1, name=\"\", description=\"\", selfExecution=true) {\r\n        super([], description, name, selfExecution);\r\n        this.no = no;\r\n    }\r\n    execute() {console.error(`Name:\\n\\t${this.name}\\nDescription:\\n\\t${this.description}`);}\r\n}\r\n\r\nexport class JumperWarn extends JumperConsoleEntry {\r\n    name = \"(Unknown Name)\"; \r\n    description = \"(Uknown Description)\";\r\n\r\n    constructor(name=\"\", description=\"\", selfExecution=true) {\r\n        super([], description, name, selfExecution);\r\n    }\r\n    execute() {console.warn(`Name:\\n\\t${this.name}\\nDescription:\\n\\t${this.description}`);}\r\n}\r\n\r\nexport class JumperInfo extends JumperConsoleEntry {\r\n    description = \"(Unknown Description)\";\r\n\r\n    constructor(description=\"\", selfExecution=true) {\r\n        super([], description, \"\", selfExecution);\r\n    }\r\n    execute() {console.info(`Name:\\n\\t${this.name}\\nDescription:\\n\\t${this.description}`);}\r\n}\r\n\r\nclass JumperLocalStack {\r\n    limit = 20;\r\n    _stack = [];\r\n\r\n    constructor(assocOptions={}) {\r\n        for(let assocOption in assocOptions) {\r\n            if(typeof this[assocOption]!=\"undefined\") this[assocOption] = assocOptions[assocOption];\r\n        }\r\n    }\r\n\r\n    push(LogEntry) {\r\n        this._stack.push(LogEntry);\r\n    }\r\n}\r\n\r\nclass JumperConsole {\r\n    _errors = new JumperLocalStack();\r\n    _warns = new JumperLocalStack();\r\n    _infos = new JumperLocalStack();\r\n    _logs = new JumperLocalStack();\r\n    _criticals = new JumperLocalStack();\r\n    _localStacks = {};\r\n    \r\n    //Defines\r\n    _labels = {};\r\n    labelPrefix = Symbol(\"labelPrefix\");\r\n    printByDefault = true;\r\n    ignoreTypes = [];\r\n\r\n    constructor(consoleOptions) {\r\n        this.printByDefault = consoleOptions.printConsoleByDefault;\r\n        this.ignoreTypes = consoleOptions.ignoreTypes;\r\n    }\r\n\r\n    byLabel(labelName) {return [this.labelPrefix, labelName];}\r\n\r\n    defineLabel(name, styles={}) {\r\n        let labelDes = Object.assign({\r\n            styles:{\r\n                log:'',\r\n                warn:'',\r\n                info:'',\r\n                error:''\r\n            }\r\n        }, { styles:styles });\r\n        this._labels[name] = labelDes;\r\n    }\r\n\r\n    log(name, description, label=\"\", lines=[], print=true) {\r\n        let entryObj = new JumperLog(lines, description, name, false);\r\n        this._logs.push(entryObj);\r\n        if(print) console.logS(entryObj.toString());\r\n    }\r\n\r\n    error(errNo=-1, name, description, label=\"\", lines=[], print=true) {\r\n        let entryObj = new JumperError(lines, description, name, false);\r\n        this._errors.push(entryObj);\r\n        if(print) console.errorS(entryObj.toString());\r\n    }\r\n\r\n    warn(name, description, label=\"\", lines=[], print=true) {\r\n        let entryObj = new JumperWarn(lines, description, name, false);\r\n        this._warns.push(entryObj);\r\n        if(print) console.warnS(entryObj.toString());\r\n    }\r\n\r\n    info(description, label=\"\", lines=[], print=true) {\r\n        let entryObj = new JumperInfo(lines, description, false);\r\n        this._infos.push(entryObj);\r\n        if(print) console.infoS(entryObj.toString());\r\n    }\r\n\r\n    critical() {\r\n        this._criticals.push(new JumperCriticalError());\r\n    }\r\n\r\n    print() {\r\n\r\n    }\r\n\r\n    printLogs(label=\"\") {\r\n\r\n    }\r\n\r\n    printInfos(label=\"\") {\r\n\r\n    }\r\n\r\n    printWarns(label=\"\") {\r\n        for(let warnEntry in this._warns) {\r\n            if(label!=\"\") {\r\n                if(this._warns[warnEntry].label==label) this._warns[warnEntry].toString();\r\n            } else console.warnS(this._warns[warnEntry].toString());\r\n        }\r\n    }\r\n\r\n    printErrors(label=\"\") {\r\n\r\n    }\r\n\r\n    traceLocalStack(options) {\r\n        let newLocalStack = new JumperLocalStack(options);\r\n        this._localStacks[Object.keys(this._localStacks).length] = newLocalStack;\r\n        return newLocalStack;\r\n    }\r\n\r\n    get lastError() { return this._errors[this._errors.length - 1]; }\r\n}\r\n\r\nclass JumperBrowser {\r\n    get language() {\r\n        if(typeof window.navigator.languages[0]!=\"undefined\") return window.navigator.languages[0];\r\n        if(typeof window.navigator.language!=\"undefined\") return window.navigator.language;\r\n        else if(typeof window.navigator.userLanguage!=\"undefined\") return window.navigator.userLanguage;\r\n    }\r\n    get hostURL() {\r\n        return window.location.protocol+(window.location.protocol.indexOf(\"file\")>-1 ? \"///\" : \"//\")+window.location.host+\"/\";\r\n    }\r\n    clipboard = (function() {\r\n        var clipboardHistory = [];\r\n        return new class {\r\n            copyText(targetStr) {\r\n                try {\r\n                    if(typeof targetStr!==\"string\") return false;\r\n                    if(typeof document.execCommand!=\"undefined\") {\r\n                        if(typeof document.queryCommandSupported!=\"undefined\") {\r\n                            if(document.queryCommandSupported('copy')) {\r\n                                var avoidCont = document.createElement(\"textarea\");\r\n                                avoidCont.style = { visibility: \"hidden\", position:\"absolute\", left:\"-1000px\", top: \"-1000px\" };\r\n                                avoidCont.value = targetStr.toString();\r\n                                document.body.appendChild(avoidCont);\r\n                                avoidCont.select();\r\n                                let res = document.execCommand('copy');\r\n                                document.body.removeChild(avoidCont);\r\n                                console.log(targetStr);\r\n                                return !!res;\r\n                            } else return false;\r\n                        } else {\r\n                            let res = document.execCommand('copy');\r\n                            return !!res;\r\n                        }\r\n                    } else if(typeof window.clipboardData!=\"undefined\") {\r\n                        window.clipboardData.setData('Text', targetStr);\r\n                    } else throw \"No Method\";\r\n                } catch(clipboardError) {\r\n                    console.error(\"Jumper.Browser.Clipboard.Error: \"+clipboardError.toString());\r\n                }\r\n            }\r\n            async copyTextAwaited(targetStr) {\r\n                try {\r\n                    await navigator.clipboard.writeText(targetStr);\r\n                } catch(clipboardError) {\r\n                    console.error(\"Jumper.Browser.Clipboard.Error: \"+clipboardError.toString());\r\n                }\r\n            }\r\n            copy(copyRes) {\r\n                switch(typeof copyRes) {\r\n                    case \"string\":\r\n                        this.copyText(copyRes);\r\n                }\r\n            }\r\n            async copyAwiated(copyRes) {\r\n                switch(typeof copyRes) {\r\n                    case \"string\":\r\n                        await this.copyTextAwaited(copyRes);\r\n                }\r\n            }\r\n        }\r\n    });\r\n    subwindow = (function() {\r\n        var windowsList = [], activeWindow = null;\r\n        return new class {\r\n            async create(component) {\r\n                if(document.getElementById(\"subwindowContainer\")!=null) return false;\r\n                var windowContainer = document.createElement(\"div\"), windowStyles = `#subwindowContainer { position:fixed; left: 0; top: 0; height: 100vh; width: 100%; background: rgba(0, 0, 0, 0.9); display: flex; justify-content: center; align-items: center; }`, stylesContainer = document.createElement(\"style\"), subwindowHolder = document.createElement(\"div\");\r\n                windowContainer.id = \"subwindowContainer\";\r\n                    stylesContainer.setAttribute(\"type\", \"text/css\");\r\n                    /* Registered Components Styles */\r\n                    let subwindowComponentCSS = \"\";\r\n                    console.log(component);\r\n                    if(typeof component.type.styles!=\"undefined\") {\r\n                    for(let styleContName in component.type.styles) {\r\n                        for(let styleContDef in component.type.styles[styleContName]) {\r\n                            subwindowComponentCSS += ` #subwindowContainer ${styleContDef.replace(\"&\", styleContName)} {`;\r\n                            for(let propDef in component.type.styles[styleContName][styleContDef]) {\r\n                                subwindowComponentCSS += `${propDef}:${component.type.styles[styleContName][styleContDef][propDef]};`;\r\n                            }\r\n                            subwindowComponentCSS += '}';\r\n                        }\r\n                    }};\r\n                    /* END Registered Component Styles */\r\n                    stylesContainer.textContent = windowStyles + subwindowComponentCSS;\r\n                    windowContainer.appendChild(stylesContainer);\r\n                    subwindowHolder.id = \"subwindowHolder\";\r\n                    windowContainer.appendChild(subwindowHolder);\r\n                document.body.appendChild(windowContainer);\r\n                window.subwindow = windowContainer;\r\n                ReactDOM.render(component, subwindowHolder);\r\n            }\r\n            async close(containerHolder) {\r\n                ReactDOM.unmountComponentAtNode(containerHolder);\r\n            }\r\n            async terminate() {\r\n\r\n            }\r\n            async terminateAll() {\r\n                if(window.subwindow==null) { console.error(\"Current subwindow context is inactive\"); return false; }\r\n                window.subwindow.remove();\r\n                window.subwindow = null;\r\n            }\r\n        }\r\n    })\r\n    async share(shareData, component=null) {\r\n        try {\r\n            if(typeof navigator.share!=\"undefined\") {\r\n                await navigator.share(shareData);\r\n            } else if(component!=null) {\r\n                await this.shareViaComponent(shareData, component);\r\n            }\r\n        } catch(ShareError) {\r\n            console.error(ShareError);\r\n        }\r\n    }\r\n    async shareViaComponent(shareData, ShareComponent) {\r\n        try {\r\n            const initiationComponent = <ShareComponent terminateWindow={this.closeWindow} {...shareData}/>;\r\n            await this.createWindow(initiationComponent);\r\n        } catch(ShareError) {\r\n            console.error(ShareError);\r\n        }\r\n    }\r\n    \r\n}\r\n\r\nclass Jumper {\r\n    /*import = function(src, modules=[]) {\r\n        var xhr = new XMLHttpRequest();\r\n        xhr.onload = function() {\r\n            if (this.status === 200) {\r\n                \r\n            } else {\r\n\r\n            }\r\n        }\r\n        xhr.open( \"HEAD\", src, true );\r\n        xhr.send();\r\n    }\r\n    export = function(modules=[]) {\r\n\r\n    }\r\n    importAs = function(src, modules=[], defualtValue=null) {\r\n        //eval(\"(function() { return false; }())\");\r\n        return defualtValue;\r\n    }*/\r\n    Browser = new JumperBrowser();\r\n    Console = Object.create(Object.prototype, {\r\n        init:{\r\n            value:function(defaultInjection=true, otherOptions={}) {\r\n                otherOptions = Object.assign({\r\n                    printConsoleByDefault:true,\r\n                    ignoreTypes:[]\r\n                }, otherOptions);\r\n                let consoleContext = new JumperConsole(otherOptions);\r\n                var consoleLog = console.log, consoleInfo = console.info, consoleWarn = console.warn, consoleError = console.error;\r\n                Object.defineProperties(window.console, {\r\n                    logS:{ value:consoleLog },\r\n                    infoS:{ value:consoleInfo },\r\n                    warnS:{ value:consoleWarn },\r\n                    errorS:{ value:consoleError },\r\n                    label:{ value:consoleContext.labelPrefix },\r\n                    jumper:{ value:consoleContext }\r\n                });\r\n                if(defaultInjection) {\r\n                    consoleContext.defineLabel(\"jumper\", {\r\n                        log:'background: #487796;color:#381b26;padding: 12px;width:100%;display:inline-block;border: 2px solid #29151d;',\r\n                        error:'background: #964865;color:#381b26;padding: 12px;width:100%;display:inline-block;border: 2px solid #29151d;',\r\n                        warn:'background: #48966b;color: #1b382f;padding: 12px;width:100%;display:inline-block;border: 2px solid #152922;',\r\n                        info:'background: #965f48;color:#38271b;padding: 12px;width:100%;display:inline-block;border: 2px solid #291e15;'\r\n                    });\r\n                    /*window.onerror = function (msg, url, lineNo, columnNo, error) {\r\n                    }*/\r\n                    let argumentsArr = [];\r\n                    window.console.log = function() {\r\n                        let consoleEntry = null;\r\n                        if(Array.isArray(arguments[0]) && consoleContext.labelPrefix==arguments[0][0] && typeof this._labels[arguments[0][1]]!=\"undefined\") { \r\n                            //argumentsArr.splice(0, 1);\r\n                            let currLabel = this._labels[arguments[0][1]];\r\n                            for(let argIndex = 1;argIndex<arguments.length;argIndex++) {\r\n                                argumentsArr[argIndex - 1] = \"%c\"+arguments[argIndex];\r\n                                argumentsArr[argIndex] = currLabel.styles.log;\r\n                            }\r\n                            consoleEntry = new JumperConsoleEntry(Array.from(argumentsArr)).setLabel(arguments[0][1]);\r\n                        } else { argumentsArr = arguments; consoleEntry = new JumperConsoleEntry(Array.from(argumentsArr)); }\r\n                        consoleContext._logs.push(consoleEntry);\r\n                        if(!this.ignoreTypes.includes(\"log\")) consoleLog.apply(consoleContext, argumentsArr);\r\n                    }.bind(consoleContext);\r\n                    window.console.warn = function() {\r\n                        let consoleEntry = null;\r\n                        if(Array.isArray(arguments[0]) && consoleContext.labelPrefix==arguments[0][0] && typeof this._labels[arguments[0][1]]!=\"undefined\") { \r\n                            //argumentsArr.splice(0, 1);\r\n                            let currLabel = this._labels[arguments[0].replace(consoleContext.labelPrefix, \"\")];\r\n                            for(let argIndex = 1;argIndex<arguments.length;argIndex++) {\r\n                                argumentsArr[argIndex] = \"%c\"+arguments[argIndex];\r\n                                argumentsArr[argIndex + 1] =  currLabel.styles.log;\r\n                            }\r\n                            consoleEntry = new JumperConsoleEntry(Array.from(argumentsArr)).setLabel(arguments[0][1]);\r\n                        } else { argumentsArr = arguments; consoleEntry = new JumperConsoleEntry(Array.from(argumentsArr)); }\r\n                        consoleContext._warns.push(consoleEntry);\r\n                        if(!this.ignoreTypes.includes(\"warn\")) consoleWarn.apply(consoleContext, argumentsArr);\r\n                    }.bind(consoleContext);\r\n                    window.console.error = function() {\r\n                        let consoleEntry = null;\r\n                        if(Array.isArray(arguments[0]) && consoleContext.labelPrefix==arguments[0][0] && typeof this._labels[arguments[0][1]]!=\"undefined\") { \r\n                            //argumentsArr.splice(0, 1);\r\n                            let currLabel = this._labels[arguments[0].replace(consoleContext.labelPrefix, \"\")];\r\n                            for(let argIndex = 1;argIndex<arguments.length;argIndex++) {\r\n                                argumentsArr[argIndex] = \"%c\"+arguments[argIndex];\r\n                                argumentsArr[argIndex + 1] =  currLabel.styles.log;\r\n                            }\r\n                            consoleEntry = new JumperConsoleEntry(argumentsArr).setLabel(arguments[0][1]);\r\n                        } else { argumentsArr = arguments; consoleEntry = new JumperConsoleEntry(argumentsArr); }\r\n                        consoleContext._errors.push(consoleEntry);\r\n                        if(!this.ignoreTypes.includes(\"error\")) consoleError.apply(consoleContext, argumentsArr);\r\n                    }.bind(consoleContext);\r\n                    window.console.info = function() {\r\n                        let consoleEntry = null;\r\n                        if(Array.isArray(arguments[0]) && consoleContext.labelPrefix==arguments[0][0] && typeof this._labels[arguments[0][1]]!=\"undefined\") { \r\n                            //argumentsArr.splice(0, 1);\r\n                            let currLabel = this._labels[arguments[0].replace(consoleContext.labelPrefix, \"\")];\r\n                            for(let argIndex = 1;argIndex<arguments.length;argIndex++) {\r\n                                argumentsArr[argIndex] = \"%c\"+arguments[argIndex];\r\n                                argumentsArr[argIndex + 1] =  currLabel.styles.log;\r\n                            }\r\n                            consoleEntry = new JumperConsoleEntry(argumentsArr).setLabel(arguments[0][1]);\r\n                        } else { argumentsArr = arguments; consoleEntry = new JumperConsoleEntry(argumentsArr); }\r\n                        consoleContext._infos.push(consoleEntry);\r\n                        if(!this.ignoreTypes.includes(\"info\")) consoleInfo.apply(consoleContext, argumentsArr);\r\n                    }.bind(consoleContext);\r\n                }\r\n                afterConstruct.Console = consoleContext;\r\n                return consoleContext;\r\n            }\r\n        }\r\n    });\r\n\r\n    constructor() {\r\n        Object.defineProperties(this, {\r\n            version: { \r\n                value:0.3,\r\n                writable:false,\r\n                enumerable:false,\r\n                configurable:false\r\n            }\r\n        });\r\n    }\r\n    configure() {\r\n\r\n    }\r\n//Check if given component is a react class component\r\n    isClassComponent(component) {\r\n        return (\r\n            typeof component === 'function' && \r\n            !!component.prototype.isReactComponent\r\n        )\r\n    }\r\n    isFunctionComponent(component) {\r\n        return (\r\n            typeof component === 'function' && \r\n            String(component).includes('return React.createElement')\r\n        )\r\n    } \r\n    isReactComponent(component) {\r\n        return (\r\n            this.isClassComponent(component) || \r\n            this.isFunctionComponent(component)\r\n        )\r\n    }\r\n    \r\n    isElement(element) {\r\n        return React.isValidElement(element);\r\n    }\r\n    \r\n    isDOMTypeElement(element) {\r\n        return this.isElement(element) && typeof element.type === 'string';\r\n    }\r\n    \r\n    isCompositeTypeElement(element) {\r\n        return this.isElement(element) && typeof element.type === 'function';\r\n    }\r\n}\r\n\r\n/*module.exports = new Jumper();*/\r\nvar afterConstruct = new Jumper();\r\nvar Console = afterConstruct.Console, Browser = afterConstruct.Browser;\r\nexport { Console, Browser };\r\nexport default afterConstruct;\r\n//module.exports = afterConstruct;","C:\\xampp\\htdocs\\LabEnv\\labenv\\src\\packages\\Jumper\\languageDescriptor.js",["618","619"],"/* Language Descriptor | Jumper Module | Grano22 Dev | V1 */\r\nimport Jumper from './Jumper.js';\r\n\r\nexport class LanguageDescriptorCollection {\r\n    collection = [];\r\n\r\n    constructor(constructArr, targetLanguage=\"en\") {\r\n        for(let propArr in constructArr) {\r\n            this.collection[propArr] = new LanguageDescriptorItem(constructArr[propArr], targetLanguage);\r\n        }\r\n    }\r\n\r\n    map(fn) {\r\n        return Array.prototype.map.apply(this.collection, [fn]);\r\n    }\r\n\r\n    forEach(fn) {\r\n        return Array.prototype.forEach.apply(this.collection, [fn]);\r\n    }\r\n\r\n    get context() { return Array.prototype.splice.call(this.collection); }\r\n}\r\n\r\nclass LanguageDescriptorDict {\r\n\r\n}\r\n\r\nexport class LanguageDescriptorItem {\r\n    id = \"\";\r\n    name = \"\";\r\n    props = {};\r\n    langs = {};\r\n    targetLanguage = \"en\";\r\n\r\n    constructor(fromObj, targetLanguage=\"en\") {\r\n        this.targetLanguage = targetLanguage;\r\n        for(let fromProp in fromObj) { this[fromProp] = fromObj[fromProp]; }\r\n    }\r\n\r\n    get t() {return this.langs[this.targetLanguage] || this.langs[\"en\"] || \"[[ Invaild Translation ]]\";}\r\n}\r\n\r\nexport default class LanguageDescriptor {\r\n    defaultLanguage = \"en\";\r\n    dict = null;\r\n\r\n    constructor(importedObj, defLang=Jumper.Browser.language) {\r\n        this.defaultLanguage = defLang;\r\n        this.dict = Object.assign({  }, importedObj.dict);\r\n    }\r\n\r\n    getEntry(entryName, entryLang=this.defaultLanguage) {\r\n        for(let dictIndexName in this.dict) {\r\n            if(dictIndexName==entryName) {\r\n                if(typeof this.dict[dictIndexName][\"items\"]!=\"undefined\") {\r\n                    console.log(this.dict[dictIndexName][\"items\"]);\r\n                    return new LanguageDescriptorCollection(this.dict[dictIndexName][\"items\"], entryLang);\r\n                } else { \r\n                    console.log(dictIndexName);\r\n                    return new LanguageDescriptorItem(this.dict[dictIndexName], entryLang);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","C:\\xampp\\htdocs\\LabEnv\\labenv\\src\\packages\\Jumper\\models.js",["620","621","622","623","624","625","626","627","628","629","630","631","632","633","634"],"import React from 'react';\r\nexport function assignTypedProps(obj, propsArr, tgProps={}, options={}) {\r\n    if(typeof obj!=\"object\" && obj!==null) throw \"Current object must be an not empty object\";\r\n    if(typeof tgProps!=\"object\" && tgProps!==null) throw \"Target properties must be an object\";\r\n    options = Object.assign({ firstAssign:false, requireType:true, requireUndefined:false }, options);\r\n    for(let propName of propsArr) {\r\n        let propt = propName.split(\"'\")[0], propn = propName.split(\"'\")[1];\r\n        try {\r\n            if(typeof obj[propn]!=\"undefined\" || !options.firstAssign) {\r\n                if(typeof tgProps[propn]!=\"undefined\") {\r\n                    switch(propt) {\r\n                        case \"f\":\r\n                            if(typeof tgProps[propn]==\"function\") obj[propn] = tgProps[propn].bind(obj); else { if(options.requireType) throw \"functon\"; else obj[propn] = null; }\r\n                        break;\r\n                        case \"a\":\r\n                            if(Array.isArray(tgProps[propn])) obj[propn] = tgProps[propn]; else { if(options.requireType) throw \"array\"; else obj[propn] = new Array(); }\r\n                        break;\r\n                        case \"s\":\r\n                            if(typeof tgProps[propn]==\"string\") obj[propn] = tgProps[propn]; else { if(options.requireType) throw \"string\"; else obj[propn] = tgProps[propn].toString(); }\r\n                        break;\r\n                        case \"n\":\r\n                            if(typeof tgProps[propn]==\"number\") obj[propn] = tgProps[propn]; else throw \"number\";\r\n                        break;\r\n                        case \"fl\":\r\n                            if(Number(tgProps[propn]) === tgProps[propn] && tgProps[propn] % 1 !== 0) obj[propn] = tgProps[propn]; else throw \"float\";\r\n                        break;\r\n                        case \"d\":\r\n                            if(Number(tgProps[propn]) === tgProps[propn] && tgProps[propn] % 1 === 0) obj[propn] = tgProps[propn]; else throw \"decimal\";\r\n                        break;\r\n                        case \"b\":\r\n                            if(typeof tgProps[propn]==\"boolean\") obj[propn] = tgProps[propn]; else throw \"boolean\";\r\n                        break;\r\n                        case \"o\":\r\n                            if(typeof tgProps[propn]==\"number\") obj[propn] = tgProps[propn]; else throw \"number\";\r\n                        break;\r\n                        case \"c\":\r\n                            if(React.isValidElement(tgProps[propn])) obj[propn] = tgProps[propn]; else throw \"react.element\";\r\n                        break;\r\n                    }\r\n                } else if(options.requireUndefined) throw \"Undefined\";\r\n            } else throw \"soc\";\r\n        } catch(PropertyAssertingError) {\r\n            console.error(`Instance ${obj.constructor.name} requires property ${propn} as type ${propt}, actual invaild type is ${typeof tgProps[propn]}`);\r\n        }\r\n    }\r\n}","C:\\xampp\\htdocs\\LabEnv\\labenv\\src\\packages\\Jumper\\performance.js",[],"C:\\xampp\\htdocs\\LabEnv\\labenv\\src\\packages\\Jumper\\service.js",["635"],"import Jumper from 'jumper';\r\nimport { assignTypedProps } from 'jumper/models';\r\n//Jumper.import(\"axios\");\r\n//import axios from 'axios';\r\nvar axios = undefined;\r\n/* Service Lib | 1.0.0 | Grano22 */\r\n\r\nexport class JumperHTTPRequest {\r\n    timeout = 4000;\r\n\r\n    constructor(metaData={}) {\r\n        assignTypedProps(this, [\"d'timeout\"], metaData);\r\n    }\r\n\r\n    get hostURL() { return Jumper.Browser.hostURL; }\r\n\r\n    get(url) {\r\n        try {\r\n            if(typeof axios !== \"undefined\" && axios !== undefined && axios) {\r\n                return axios.get(url);\r\n            } else return this.getNativeAwaited(url);\r\n        } catch(e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n\r\n    post() {\r\n\r\n    }\r\n\r\n    postNative(url, data, cbs) {\r\n        cbs = Object.assign({\r\n            onCompletion:null,\r\n            onError:null,\r\n            onProgress:null,\r\n            onAbort:null,\r\n            onReadyStateChange:null }, cbs);\r\n        var xhr = new XMLHttpRequest();\r\n        xhr.open('POST', url, true);\r\n        xhr.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');\r\n        xhr.onload = function(e) {\r\n            if (xhr.readyState === 4) {\r\n              if (xhr.status === 200) {\r\n                if(cbs.onCompletion!=null) cbs.onCompletion(xhr.responseText, xhr);\r\n              } else if(cbs.onError!=null) cbs.onError(xhr.statusText, xhr.readyState, xhr);\r\n            }\r\n        }\r\n        if(cbs.onError!=null) {\r\n            xhr.onerror = function(e) {\r\n                cbs.onError(xhr.statusText, e, xhr);\r\n            }\r\n        }\r\n        if(cbs.onProgress!=null) xhr.onprogress = cbs.onProgress;\r\n        if(cbs.onAbort!=null) xhr.onAbort = cbs.onAbort;\r\n        if(cbs.onReadyStateChange) xhr.onReadyStateChange = cbs.onReadyStateChange;\r\n        xhr.send(data);\r\n    }\r\n\r\n    getNative(url, cbs) {\r\n        cbs = Object.assign({\r\n            onCompletion:null,\r\n            onError:null,\r\n            onProgress:null,\r\n            onAbort:null,\r\n            onReadyStateChange:null }, cbs);\r\n        var xhr = new XMLHttpRequest();\r\n        xhr.open(\"GET\", url, true);\r\n        xhr.onload = function(e) {\r\n            if (xhr.readyState === 4) {\r\n              if (xhr.status === 200) {\r\n                if(cbs.onCompletion!=null) cbs.onCompletion(xhr.responseText, xhr);\r\n              } else if(cbs.onError!=null) cbs.onError(xhr.statusText, xhr.readyState, xhr);\r\n            }\r\n        }\r\n        if(cbs.onError!=null) {\r\n            xhr.onerror = function(e) {\r\n                cbs.onError(xhr.statusText, e, xhr);\r\n            }\r\n        }\r\n        if(cbs.onProgress!=null) xhr.onprogress = cbs.onProgress;\r\n        if(cbs.onAbort!=null) xhr.onAbort = cbs.onAbort;\r\n        if(cbs.onReadyStateChange) xhr.onReadyStateChange = cbs.onReadyStateChange;\r\n        xhr.send(null);\r\n    }\r\n\r\n    async postNativeAwaited(url, data) {\r\n        var p = new Promise(function(resolve, reject) {\r\n            var xhr = new XMLHttpRequest();\r\n            xhr.open(\"POST\", url, true);\r\n            xhr.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');\r\n            xhr.onload = function(e) {\r\n                if (xhr.readyState === 4) {\r\n                    if (xhr.status === 200) {\r\n                        resolve(xhr.responseText, xhr);\r\n                    } else reject(xhr.statusText, xhr.readyState, xhr);\r\n                }\r\n            }\r\n            xhr.onerror = function(e) { reject(xhr.statusText, e, xhr); }\r\n            xhr.onprogress = this.progress;\r\n            xhr.send(data);\r\n        });\r\n        return p;\r\n    }\r\n\r\n    async getNativeAwaited(url, cbs={}) {\r\n        cbs = Object.assign({\r\n            onDownloadProgress:null\r\n        }, cbs);\r\n        var p = new Promise(function(resolve, reject) {\r\n            var xhr = new XMLHttpRequest();\r\n            xhr.open(\"GET\", url, true);\r\n            xhr.onload = function(e) {\r\n                if (xhr.readyState === 4) {\r\n                    if (xhr.status === 200) {\r\n                        resolve(xhr.responseText, xhr);\r\n                    } else reject(xhr.statusText, xhr.readyState, xhr);\r\n                }\r\n            }\r\n            xhr.onerror = function(e) { reject(xhr.statusText, e, xhr); }\r\n            if(cbs.onDownloadProgress!=null) xhr.onprogress = cbs.onDownloadProgress;\r\n            xhr.send(null);\r\n        });\r\n        return p;\r\n    }\r\n}\r\n\r\nexport default class JumperService {\r\n    component = null;\r\n    lastErrors = [];\r\n    http = new JumperHTTPRequest();\r\n\r\n    constructor() {\r\n\r\n    }\r\n}","C:\\xampp\\htdocs\\LabEnv\\labenv\\src\\reportWebVitals.js",[],"C:\\xampp\\htdocs\\LabEnv\\labenv\\src\\service-worker.js",[],"C:\\xampp\\htdocs\\LabEnv\\labenv\\src\\services\\helpdesk.jsx",[],"C:\\xampp\\htdocs\\LabEnv\\labenv\\src\\services\\latest.jsx",[],"C:\\xampp\\htdocs\\LabEnv\\labenv\\src\\setupTests.js",[],"C:\\xampp\\htdocs\\LabEnv\\labenv\\src\\widgets\\FormulaSearchList.jsx",[],"C:\\xampp\\htdocs\\LabEnv\\labenv\\src\\widgets\\OutputContainer.jsx",["636"],"import React, {Component} from 'react';\r\n\r\nexport default class OutputContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.tagName = props.newTagName || '';\r\n        this.state = {\r\n            dynamicalContent:this.props.newContent || (<></>)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const TagName = this.tagName;\r\n        return TagName==\"\" ? (<>{this.state.dynamicalContent}</>) : (<TagName>{this.state.dynamicalContent}</TagName>)\r\n    }\r\n}","C:\\xampp\\htdocs\\LabEnv\\labenv\\src\\widgets\\SearchList.jsx",["637","638","639","640","641","642","643","644","645","646"],"import React, {Component} from 'react';\r\nimport Jumper from 'jumper';\r\nimport { ListWidget } from 'jumper/components';\r\n\r\nexport class SearchListPropsalItem {\r\n    prepare() {return (<></>);}\r\n    render() {\r\n        return (<li>{this.prepare()}</li>);\r\n    }\r\n}\r\n\r\nexport default class SearchList extends ListWidget {\r\n    filter = function(outputItem, stateData) {\r\n\r\n    };\r\n    searchFilter = function(outputItem, stateData) {\r\n        let outputMatching = [], currIters = 0;\r\n        while(outputItem.indexOf(stateData.searchKeyword)>-1) {\r\n            outputMatching.push(outputItem.substr(outputItem.indexOf(stateData.searchKeyword), stateData.searchKeyword.length));\r\n            outputItem = outputItem.substr(outputItem.indexOf(stateData.searchKeyword) + stateData.searchKeyword.length);\r\n            currIters++;\r\n        }\r\n        return outputMatching; \r\n    }\r\n\r\n    //Events\r\n    onSelectItem() {}\r\n    onSearchItem() {}\r\n\r\n    constructor(props) {\r\n        super(props, [\"f'onSelectItem\", \"f'onSearchItem\"]);\r\n        this.beforeFilterOutputList = this.outputList;\r\n        let self = this;\r\n        this.state = {\r\n            displaySelectList:typeof props.displaySelectList==\"boolean\" ? props.displaySelectList : true,\r\n            title:typeof props.title==\"string\" ? props.title : \"Search list\",\r\n            isHidden:typeof props.isHidden==\"boolean\" ? props.isHidden : true,\r\n            outputType:\"\",\r\n            searchKeyword:\"\",\r\n            selectedCategory:-1\r\n        }\r\n        this.filter = Array.isArray(props.filter) ? props.filter : [];\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    componentWillReceiveProps(newProps) {\r\n        if(typeof newProps.isHidden!=\"undefined\") this.setState({ isHidden: newProps.isHidden });\r\n    }\r\n\r\n    search(ev) {\r\n        let searchKey = ev.currentTarget.value;\r\n        this.state.searchKeyword = searchKey;\r\n        if(searchKey==\"\") { this.outputList = this.beforeFilterOutputList; this.setState({ searchKeyword: searchKey }); return; } else this.outputList = [];\r\n        for(let outputItem in this.beforeFilterOutputList) {\r\n            if(this.beforeFilterOutputList[outputItem].type!=1) {\r\n                let tryMatching = this.searchFilter(this.beforeFilterOutputList[outputItem].name, this.state);\r\n                if(tryMatching.length>0) {\r\n                    for(let matchInStr of tryMatching) {\r\n                        this.beforeFilterOutputList[outputItem].name.replace(matchInStr, \"<strong>\"+matchInStr+\"</strong>\");\r\n                        this.outputList.push(this.beforeFilterOutputList[outputItem]);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this.setState({ searchKeyword: searchKey });\r\n    }\r\n\r\n    onCategorySelect(catID) {\r\n        console.log(catID);\r\n        if(catID==\"all\") { this.outputList = this.sourceOutputList; this.setState({ update:new Date() }); }\r\n        let tempOutput = [], duringIterate = false;\r\n        for(let ind in this.sourceOutputList) {\r\n            if(this.sourceOutputList[ind].name==catID) {\r\n                duringIterate = true;\r\n            } else if(duringIterate) {\r\n                if(this.sourceOutputList[ind].type==1) { duringIterate = false; break; } else tempOutput.push(this.sourceOutputList[ind]);\r\n            }\r\n        }\r\n        if(tempOutput.length>0) { this.outputList = tempOutput; this.setState({ selectedCategory:catID, update:new Date() }); }\r\n        this.beforeFilterOutputList = this.outputList;\r\n    }\r\n\r\n    render() {\r\n        let self = this, categorySelect = [];\r\n        if(this.state.displaySelectList) {\r\n            let prepCat = [];\r\n            this.sourceOutputList.forEach(v=>{\r\n                if(typeof v.type==\"number\" && v.type==1) prepCat.push(<option value={v.id || v.name}>{v.name}</option>);\r\n            });\r\n            categorySelect = (<label className=\"categorySelection\"><select onChange={ev=>this.onCategorySelect(ev.currentTarget.options[ev.currentTarget.selectedIndex].value)}><option value=\"all\" default>{{ en:\"All categories\", pl:\"Wszystkie kategorie\" }[Jumper.Browser.language.substr(0, 2)]}</option>{prepCat}</select></label>)\r\n        }\r\n        return (<div className={this.state.isHidden ? \"searchableDropdown\" : \"searchableDropdown active\"}>\r\n        <div className=\"searchableDropdownHeader\"><h4>{this.state.title || \"Search list\"}</h4><div className=\"toolsBar\"><span className=\"righty closeBtn\" onClick={ev=>self.setState({ isHidden:true, update:new Date() })}>&times;</span></div></div>\r\n        {categorySelect}\r\n        <label className=\"search\"><input type=\"search\" placeholder=\"Wyszukaj\" onInput={ev=>self.search(ev)}/><button>&#128269;</button></label>\r\n        <div className=\"searchableContents\" onClick={ev=>{ if(ev.target.tagName==\"LI\" && !ev.target.classList.contains(\"header\")) { let onsl = self.onSelectItem(ev.target); if(onsl) self.setState(Object.assign({ isHidden: true }, onsl)); } }}>\r\n        {self.output()}\r\n        </div></div>);\r\n    }\r\n}","C:\\xampp\\htdocs\\LabEnv\\labenv\\src\\widgets\\Subwindow.jsx",["647","648"],"import React, {Component} from 'react';\r\n\r\nclass Subwindow extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    static registerComponents(componentsArr) {\r\n        let outputRes = Object.create({\r\n            \".subwindow\":{\r\n                \"&\":{\r\n                    \"min-width\":\"250px\",\r\n                    \"max-width\":\"350px\",\r\n                    \"background-color\":\"#bdbdbd\",\r\n                    \"border\":\"2px solid rgba(115, 115, 115, 0.8)\",\r\n                    \"box-shadow\":\"0 0 0 1px #45A1FF, 0 0 0 4px rgba(69, 161, 255, 0.3)\",\r\n                    \"border-radius\":\"5px\"\r\n                }\r\n            },\r\n            \"header.subwindowHeader\":{\r\n                \"&\":{\r\n                    \"display\":\"inline-block\",\r\n                    \"width\":\"100%\",\r\n                    \"background-color\":\"#b0b0b0\"\r\n                },\r\n                \"& h3\":{ \"text-align\":\"center\" }\r\n            },\r\n            \"#subwindowMain\":{\r\n                \"&\":{\r\n                    \"display\":\"inline-block\",\r\n                    \"width\":\"100%\",\r\n                    \r\n                }\r\n            },\r\n            \"#subwindowFooter\":{\r\n                \"&\":{\r\n                    \"display\":\"inline-block\",\r\n                    \"width\":\"100%\",\r\n                    \r\n                }\r\n            }\r\n        });\r\n        for(let componentEntry of componentsArr) {\r\n            let resClassOutput = new componentEntry();\r\n            outputRes['.'+resClassOutput.className] = resClassOutput.style;\r\n        }\r\n        return outputRes;\r\n    }\r\n\r\n    render() {\r\n        return (<></>);\r\n    }\r\n}\r\n\r\nclass SubwindowComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    get className() {\r\n        return this.__proto__.constructor.name[0].toString().toLowerCase()+this.__proto__.constructor.name.substr(1);\r\n    }\r\n    get style() { return {} }\r\n}\r\n\r\nclass SubwindowOKButton extends SubwindowComponent {\r\n    get style() {\r\n        return {\r\n            \"&\":{\r\n                \"display\":\"inline-block\",\r\n                \"width\":\"100%\",\r\n                \"background\":\"#a1a1a1\",\r\n                \"color\":\"#444\",\r\n                \"text-align\":\"center\",\r\n                \"transition\":\"0.3s ease-out\"\r\n            },\r\n            \"&:hover\":{\r\n                \"color\":\"#888\",\r\n                \"background\":\"#454545\",\r\n                \"cursor\":\"pointer\",\r\n                \"transition\":\"0.3s ease-in\"\r\n            }\r\n        };\r\n    } \r\n    render() {\r\n        return <span className={this.className} onClick={this.props.onClose}>OK</span>;\r\n    }\r\n}\r\n\r\nexport class ShareSubwindow extends Subwindow {\r\n    static styles = this.registerComponents([SubwindowOKButton]);\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            title:'',\r\n            text:'',\r\n            url:''\r\n        }\r\n        for(let prop in props) this.state[prop] = props[prop];\r\n        //if(props.hasOwnProperty(prop))\r\n        console.log(props, this.props);\r\n        this.terminateWindow = this.props.terminateWindow;\r\n    }\r\n\r\n    render() {\r\n        return (<div className=\"subwindow subwindowShare\">\r\n            <header className=\"subwindowHeader\">\r\n                <h3>{this.state.title || \"Udostepnij\"}</h3>\r\n            </header>\r\n            <main className=\"subwindowMain\">\r\n                <div className=\"in\">\r\n                    <p>{this.state.text}</p>\r\n                    <input type=\"text\" defaultValue={this.state.url}/>\r\n                </div>\r\n            </main>\r\n            <footer className=\"subwindowFooter\">\r\n                <SubwindowOKButton onClose={this.terminateWindow}/>\r\n            </footer>\r\n        </div>);\r\n    }\r\n}\r\n\r\n","C:\\xampp\\htdocs\\LabEnv\\labenv\\src\\widgets\\TextViewerConfigurable.jsx",[],"C:\\xampp\\htdocs\\LabEnv\\labenv\\src\\widgets\\UnitsExchanger.jsx",["649","650","651","652","653","654","655","656","657","658","659","660","661","662","663","664","665","666","667","668","669","670"],"import React, {Component} from 'react';\r\nimport Jumper from 'jumper';\r\nimport LanguageDescriptor from 'jumper/languageDescriptor';\r\nimport UnitesNamespaces from '../data/UnitsNotations.json';\r\nimport { MathLinearParser } from '../libraries/MathParser';\r\nimport CurrentComponentLangDescriptor from '../components/Exchanger/Exchanger.langs.json';\r\nimport SearchList from '../widgets/SearchList';\r\nimport { FloatingContainerNextToEvent } from '../libraries/Events';\r\nimport { changeArrayIndex, replaceBetween } from 'jumper/dataProcessing';\r\nconst currLangDictonary = new LanguageDescriptor(CurrentComponentLangDescriptor);\r\n\r\nexport class UnitsExchanger {\r\n    constructor(unitsNamespace) {\r\n        this.ns = unitsNamespace;\r\n        for(let unitCat in this.ns) {\r\n            this.ns[unitCat] = Object.assign({\r\n                operation:\"*\",\r\n\r\n            }, this.ns[unitCat]);\r\n        }\r\n    }\r\n\r\n    getItemsBy(identifiersArr, indentType=\"\") {\r\n        if(Array.isArray(identifiersArr)) {\r\n            for(let i = 0;i<identifiersArr;i++) {\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    convertTo(valueFrom, fromUnit, toUnit, fromUnitIdentifier=\"id\", toUnitIndentifier=\"id\") {\r\n        let fromJM = null, targetJM = null;\r\n        for(let unitCat in this.ns) {\r\n            for(let nsItem in this.ns[unitCat]) {\r\n                if(this.ns[unitCat][nsItem][fromUnitIdentifier] === fromUnit || (typeof this.ns[unitCat][nsItem][fromUnitIdentifier]==\"object\" && this.ns[unitCat][nsItem][fromUnitIdentifier][Jumper.Browser.language.substr(0, 2)] === fromUnit)) {\r\n                    fromJM = this.ns[unitCat][nsItem];\r\n                    if(targetJM!=null) break;\r\n                   \r\n                }\r\n                if(this.ns[unitCat][nsItem][toUnitIndentifier] === toUnit || (typeof this.ns[unitCat][nsItem][toUnitIndentifier]==\"object\" && this.ns[unitCat][nsItem][toUnitIndentifier][Jumper.Browser.language.substr(0, 2)] === toUnit)) {\r\n                    targetJM = this.ns[unitCat][nsItem];\r\n                    if(fromJM!=null) break;\r\n                }\r\n                if(fromJM!=null && targetJM!=null) break;\r\n            }\r\n        }\r\n        if(fromJM!=null && targetJM!=null) {\r\n            let fromJMCalculated = typeof fromJM.notation==\"string\" && fromJM.notation!=\"\" ? new MathLinearParser(\"x \"+(typeof fromJM.operation==\"string\" ? fromJM.operation : \"*\")+\" \"+(fromJM.notation || \"1\")).invertion().bind({x:valueFrom}).calculate()[0] : valueFrom;\r\n            console.log(\"before\", fromJMCalculated);\r\n            let toJMCalculated = new MathLinearParser(\"x \"+(typeof targetJM.operation==\"string\" ? targetJM.operation : \"*\")+\" \"+(targetJM.notation || \"1\")).bind({x:fromJMCalculated}).calculate()[0];\r\n            console.log(\"after\", toJMCalculated);\r\n            return toJMCalculated;\r\n        } else { console.error(\"Unit not detected in namespace \"+fromJM+\" \"+targetJM); return null; }\r\n    }\r\n\r\n    calculateConvertionDiff() {\r\n\r\n    }\r\n\r\n    toSelectable() {\r\n        let localCatItems = [], catItems = [];\r\n        for(let uniCat in this.ns) {\r\n            localCatItems = [];\r\n            for(let elInd in this.ns[uniCat]) {\r\n                if(typeof localCatItems==\"object\") localCatItems.push(<option defaultValue={this.ns[uniCat][elInd].id}>{this.ns[uniCat][elInd].sign}</option>);\r\n            }\r\n            catItems.push(<optgroup label={uniCat}>{localCatItems}</optgroup>);\r\n        }\r\n        return catItems;\r\n    }\r\n\r\n    toData() {\r\n        let outputDataItems = [];\r\n        console.log(this.ns);\r\n        for(let uniCat in this.ns) {\r\n            outputDataItems.push({ name:uniCat, type:1 });\r\n            for(let elInd in this.ns[uniCat]) {\r\n                if(typeof this.ns[uniCat][elInd]==\"object\") outputDataItems.push({\r\n                    id:typeof this.ns[uniCat][elInd][\"id\"]!=\"undefined\" ? this.ns[uniCat][elInd][\"id\"] : undefined,\r\n                    name:typeof this.ns[uniCat][elInd][\"name\"]!=\"undefined\" && typeof this.ns[uniCat][elInd][\"name\"][Jumper.Browser.language.substr(0, 2)]!=\"undefined\" ? this.ns[uniCat][elInd][\"name\"][Jumper.Browser.language.substr(0, 2)] : (typeof this.ns[uniCat][elInd][\"name\"]==\"string\" ? this.ns[uniCat][elInd][\"name\"] : \"Unnamed\"),\r\n                    sign:typeof this.ns[uniCat][elInd][\"sign\"]!=\"undefined\" && typeof this.ns[uniCat][elInd][\"sign\"][Jumper.Browser.language.substr(0, 2)]!=\"undefined\" ? this.ns[uniCat][elInd][\"sign\"][Jumper.Browser.language.substr(0, 2)] : (typeof this.ns[uniCat][elInd][\"sign\"]==\"string\" ? this.ns[uniCat][elInd][\"sign\"] : \"UndUnit\"),\r\n                    category:uniCat,\r\n                    operation:typeof this.ns[uniCat][elInd][\"operation\"]==\"string\" ? this.ns[uniCat][elInd][\"operation\"] : \"\"\r\n                });\r\n            }\r\n        }\r\n        return outputDataItems;\r\n    }\r\n\r\n    prepareSign(signValue) {\r\n        //dangerouslySetInnerHTML={{ __html: \"Hello\" }}\r\n        try {\r\n        let openableTag = \"\", inBracket = 0, closedBrackets = 0, tempText = signValue, openableIndex = -1, textHolder = \"\";\r\n        for(let signChar in signValue) {\r\n            if(signValue[signChar]==\"^\") {\r\n                openableTag = 'sup';\r\n                openableIndex = parseInt(signChar);\r\n            } else if(openableTag!=\"\" && inBracket==closedBrackets+1 && signValue[signChar]==\")\") {\r\n                if(openableIndex<=-1) throw \"Err\";\r\n                tempText = replaceBetween(tempText, openableIndex, parseInt(signChar), \"<\"+openableTag+\">\"+textHolder+\"</\"+openableTag+\">\");\r\n            } else if(openableTag!=\"\" && (signValue[signChar].trim()==\"\" || signValue.length - 1==parseInt(signChar))) {\r\n                if(openableIndex<=-1) throw \"Err\";\r\n                console.log(openableIndex, signChar);\r\n                tempText = replaceBetween(tempText, openableIndex, parseInt(signChar) + 1, \"<\"+openableTag+\">\"+signValue.substring(openableIndex + 1,  signValue.length - 1==parseInt(signChar) ? parseInt(signChar)+1 : parseInt(signChar))+\"</\"+openableTag+\">\");\r\n            } else if(signValue[signChar]==\"(\") {\r\n                inBracket++;\r\n            } else if(signValue[signChar]==\")\") {\r\n                closedBrackets++;\r\n            }\r\n        }\r\n        return tempText;\r\n        } catch(ParserError) {\r\n            console.error(ParserError);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default class UnitsExchangerWidget extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.outputUnitsList = React.createRef();\r\n        this.exchanger = new UnitsExchanger(UnitesNamespaces);\r\n        this.exchangerData = this.exchanger.toData();\r\n        this.state = {\r\n            fromUnitValue:props.fromUnitValue || 0,\r\n            fromUnit:props.fromUnit || this.exchangerData[1].sign,\r\n            toUnits:typeof props[\"toUnits\"]!=\"undefined\" ? props.toUnits : [ \"j\" ],\r\n            outputType:props.outputType || \"\"\r\n        }\r\n    }\r\n\r\n    assignUnits(obj, mergeItems=-1, ignoreWarns=false) {\r\n        try {\r\n        let inputFromUnit = null, inputToUnits = [];\r\n        let fromUnityEntry = null, toUnitsEntries = new Array(obj.toUnit).fill(null);\r\n        if(typeof obj.fromUnit==\"string\" && Array.isArray(obj.toUnits)) {\r\n            inputFromUnit = obj.fromUnit; inputToUnits = obj.toUnit;\r\n        } else if(typeof obj.fromUnit==\"string\") {\r\n            inputFromUnit = obj.fromUnit; inputToUnits = this.state.toUnits;\r\n        } else if(Array.isArray(obj.toUnits)) {\r\n            inputFromUnit = this.state.fromUnit; inputToUnits = obj.toUnits;\r\n        } else if(typeof obj==\"string\" && mergeItems>=0) {\r\n            inputFromUnit = this.state.fromUnit; inputToUnits = this.state.toUnits;\r\n            inputToUnits[mergeItems] = obj;\r\n        } else throw \"Invaild arguments passed \"+arguments;\r\n        for(let entryKey in this.exchangerData) {\r\n            if(this.exchangerData[entryKey].sign==inputFromUnit) fromUnityEntry = this.exchangerData[entryKey];\r\n            for(let unitEntryKey in inputToUnits) { if(this.exchangerData[entryKey].sign==inputToUnits[unitEntryKey]) { toUnitsEntries[unitEntryKey] = this.exchangerData[entryKey]; break; } }\r\n        }\r\n        if(fromUnityEntry==null) { console.error(\"Unit sign doesnt exits in namespace\"); return; }\r\n        for(let unitEntryKey in toUnitsEntries) {\r\n            if(toUnitsEntries[unitEntryKey]==null) { console.error(\"Unit signs doesnt exist in namespace\"); return; }\r\n            if(toUnitsEntries[unitEntryKey].category!=fromUnityEntry.category) { if(!ignoreWarns) console.warn(\"Cannot convert units from different categories\"); console.log(\"weird cat\"+unitEntryKey); if(mergeItems>=0) toUnitsEntries[unitEntryKey] = toUnitsEntries[mergeItems]; else toUnitsEntries[unitEntryKey] = fromUnityEntry; } \r\n        }\r\n        if(mergeItems>=0 && fromUnityEntry.category!=toUnitsEntries[mergeItems].category) fromUnityEntry = toUnitsEntries[mergeItems];\r\n        this.setState({ fromUnit:fromUnityEntry.sign, toUnits:toUnitsEntries.map(v=>v.sign) });\r\n        } catch(AssignError) {\r\n            console.error(AssignError);\r\n        }\r\n    }\r\n    outputTypeChange(ev) {\r\n        let selOpt = ev.currentTarget;\r\n        console.log(selOpt.options[selOpt.selectedIndex].value);\r\n        this.setState({ outputType:selOpt.options[selOpt.selectedIndex].value });\r\n    }\r\n    //Add unit to \r\n    addUnitToOutput() {\r\n        this.state.toUnits.push(this.state.fromUnit);\r\n        this.setState({ toUnits:this.state.toUnits });\r\n    }\r\n    //Remove unit from\r\n    removeUnitFromOutput(evt) {\r\n        let index = parseInt(evt.currentTarget.parentElement.parentElement.getAttribute(\"data-index\"));\r\n        this.state.toUnits.splice(index, 1);\r\n        this.setState({ toUnits:this.state.toUnits });\r\n    }\r\n    //Change unit index\r\n    changeUnitIndex(evt, newIndx) {\r\n        let currIndex = parseInt(evt.currentTarget.parentElement.parentElement.getAttribute(\"data-index\"));\r\n        changeArrayIndex(this.state.toUnits, currIndex, newIndx);\r\n        this.setState({ toUnits:this.state.toUnits });\r\n    }\r\n    //Switch unit type\r\n    switchUnitType() {\r\n        let tempToUnit = this.state.toUnits[0];\r\n        this.state.toUnits[0] = this.state.fromUnit;\r\n        this.setState({ fromUnit:tempToUnit, toUnits:this.state.toUnits });\r\n    }\r\n    //Convert Action\r\n    convertAction() {\r\n        let convertionOutputs = document.getElementsByClassName(\"unitExchangerIndexedItem\"), convertionInput = document.getElementsByClassName(\"unitExchangerFromUnit\")[0];\r\n        const currVal = parseFloat(convertionInput.children[0].value);\r\n        for(let outputItem in convertionOutputs) {\r\n            if(convertionOutputs.hasOwnProperty(outputItem)) {\r\n                console.log(convertionOutputs[outputItem].children[1], currVal, this.state.toUnits[parseInt(outputItem)], this.state.fromUnit);\r\n                convertionOutputs[outputItem].children[1].value = this.exchanger.convertTo(currVal, this.state.fromUnit, this.state.toUnits[parseInt(outputItem)], \"sign\", \"sign\");\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        var self = this, refs = [];\r\n        console.log(this.exchangerData);\r\n        const conversionOutputTypesEl = currLangDictonary.getEntry(\"conversionOutputTypes\").map(et=>(<option defaultValue={et.id}>{et.t}</option>));\r\n        const conversionOutputValues = Array.isArray(this.state.toUnits) && this.state.toUnits.length>0 ? this.state.toUnits.map((uo, ind)=>(<div className=\"unitExchangerOverlap\"><label className=\"medium unitExchangerIndexedItem\" key={ind} data-index={ind}>\r\n        <span className=\"unitExchangerIndex\">{ind}</span>\r\n        <input type=\"number\" placeholder=\"Wynik konwersji\" disabled/>\r\n        <span className=\"unitSymbol\">\r\n            <var onClick={ev=>refs[ind + 1].setState({ isHidden:!refs[ind + 1].state.isHidden })} dangerouslySetInnerHTML={{ __html: this.exchanger.prepareSign(uo) }}></var>\r\n            <SearchList ref={r=>refs.push(r)} outputList={this.exchangerData} childProps={{\"data-index\":\"$i\", key:\"$i\", \"data-value\":\"%s[sign]\"}} structure=\"%s[name]\"  headerStructure=\"<h3>%s[name]</h3>\" title=\"Jednostka\" onSelectItem={(selItem)=>{\r\n                self.assignUnits(selItem.getAttribute(\"data-value\"), ind);\r\n            }}/>\r\n        </span>\r\n        <div className=\"unitExchangerItemOptions\">\r\n            {this.state.toUnits.length>1 && <span onClick={ev=>this.removeUnitFromOutput(ev)}>&times;</span>} {this.state.toUnits.length>1 && ind!=this.state.toUnits.length-1 && <span onClick={evt=>this.changeUnitIndex(evt, \"+1\")}>&#11167;</span>} {this.state.toUnits.length>1 && ind!=0 && <span onClick={evt=>this.changeUnitIndex(evt, \"-1\")}>&#11165;</span>}\r\n        </div>\r\n        </label></div>)) : (<p>Brak jednostek wyjściowych</p>);\r\n        //FloatingContainerNextToEvent(ev)\r\n        return (<div className=\"unitExchangerContainer\">\r\n        <label className=\"medium unitExchangerFromUnit\">\r\n        <input type=\"number\" placeholder=\"Wpisz jednostkę wejściową\"/>\r\n        <span className=\"unitSymbol\">\r\n            <var onClick={ev=>refs[0].setState({ isHidden:!refs[0].state.isHidden })} dangerouslySetInnerHTML={{ __html: this.exchanger.prepareSign(this.state.fromUnit) }}></var>\r\n            <SearchList ref={r=>refs.push(r)} outputList={this.exchangerData} childProps={{\"data-index\":\"$i\", key:\"$i\", \"data-value\":\"%s[sign]\"}} structure=\"%s[name]\" headerStructure=\"<h3>%s[name]</h3>\" title=\"Jednostka\" valueDeterminer=\"sign\" onSelectItem={(selItem)=>{\r\n                self.assignUnits({ fromUnit:selItem.getAttribute(\"data-value\") });\r\n                //self.setState({ fromUnit:selItem.getAttribute(\"data-value\") });\r\n            }}/>\r\n        </span>\r\n        </label>\r\n        <span className=\"unitExchangerSwitchIcon\" onClick={ev=>this.switchUnitType()}>\r\n            &#x21c4;\r\n        </span>\r\n        <div className=\"unitExchangerTree\" ref={er=>this.outputUnitsList = er}>\r\n            <div className=\"unitExchangerItems\">\r\n                {conversionOutputValues}\r\n            </div>\r\n            {this.state.toUnits.length<10 && <button className=\"unitExchangerAddButton\" onClick={ev=>this.addUnitToOutput()}>Dodaj inną jednostkę &#x002B;</button>}\r\n        </div>\r\n        <br/>\r\n        <select onSelect={ev=>this.outputTypeChange(ev)}>{conversionOutputTypesEl}</select>\r\n        <br/>\r\n        <button onClick={ev=>this.convertAction()}>Konwertuj</button>\r\n        </div>);\r\n    }\r\n}",{"ruleId":"671","severity":1,"message":"672","line":2,"column":8,"nodeType":"673","messageId":"674","endLine":2,"endColumn":12},{"ruleId":"671","severity":1,"message":"675","line":4,"column":31,"nodeType":"673","messageId":"674","endLine":4,"endColumn":38},{"ruleId":"671","severity":1,"message":"676","line":5,"column":8,"nodeType":"673","messageId":"674","endLine":5,"endColumn":15},{"ruleId":"677","severity":1,"message":"678","line":15,"column":3,"nodeType":"679","messageId":"680","endLine":17,"endColumn":4},{"ruleId":"681","severity":1,"message":"682","line":66,"column":13,"nodeType":"683","endLine":66,"endColumn":16},{"ruleId":"671","severity":1,"message":"684","line":1,"column":27,"nodeType":"673","messageId":"674","endLine":1,"endColumn":48},{"ruleId":"671","severity":1,"message":"685","line":4,"column":10,"nodeType":"673","messageId":"674","endLine":4,"endColumn":34},{"ruleId":"686","severity":1,"message":"687","line":21,"column":13,"nodeType":"688","messageId":"689","endLine":25,"endColumn":14},{"ruleId":"690","severity":1,"message":"691","line":33,"column":5,"nodeType":"692","messageId":"693","endLine":33,"endColumn":18},{"ruleId":"694","severity":1,"message":"695","line":86,"column":32,"nodeType":"696","messageId":"697","endLine":86,"endColumn":34},{"ruleId":"694","severity":1,"message":"695","line":86,"column":62,"nodeType":"696","messageId":"697","endLine":86,"endColumn":64},{"ruleId":"694","severity":1,"message":"698","line":112,"column":45,"nodeType":"696","messageId":"697","endLine":112,"endColumn":47},{"ruleId":"671","severity":1,"message":"699","line":120,"column":13,"nodeType":"673","messageId":"674","endLine":120,"endColumn":17},{"ruleId":"694","severity":1,"message":"698","line":125,"column":20,"nodeType":"696","messageId":"697","endLine":125,"endColumn":22},{"ruleId":"694","severity":1,"message":"698","line":135,"column":24,"nodeType":"696","messageId":"697","endLine":135,"endColumn":26},{"ruleId":"671","severity":1,"message":"700","line":152,"column":7,"nodeType":"673","messageId":"674","endLine":152,"endColumn":22},{"ruleId":"690","severity":1,"message":"701","line":160,"column":5,"nodeType":"692","messageId":"702","endLine":160,"endColumn":14},{"ruleId":"671","severity":1,"message":"699","line":176,"column":13,"nodeType":"673","messageId":"674","endLine":176,"endColumn":17},{"ruleId":"686","severity":1,"message":"687","line":196,"column":9,"nodeType":"688","messageId":"689","endLine":201,"endColumn":10},{"ruleId":"671","severity":1,"message":"703","line":2,"column":8,"nodeType":"673","messageId":"674","endLine":2,"endColumn":14},{"ruleId":"671","severity":1,"message":"704","line":1,"column":18,"nodeType":"673","messageId":"674","endLine":1,"endColumn":28},{"ruleId":"671","severity":1,"message":"705","line":1,"column":10,"nodeType":"673","messageId":"674","endLine":1,"endColumn":22},{"ruleId":"671","severity":1,"message":"706","line":1,"column":24,"nodeType":"673","messageId":"674","endLine":1,"endColumn":39},{"ruleId":"671","severity":1,"message":"707","line":6,"column":10,"nodeType":"673","messageId":"674","endLine":6,"endColumn":32},{"ruleId":"671","severity":1,"message":"708","line":6,"column":34,"nodeType":"673","messageId":"674","endLine":6,"endColumn":62},{"ruleId":"686","severity":1,"message":"687","line":66,"column":9,"nodeType":"688","messageId":"689","endLine":74,"endColumn":10},{"ruleId":"694","severity":1,"message":"698","line":69,"column":46,"nodeType":"696","messageId":"697","endLine":69,"endColumn":48},{"ruleId":"671","severity":1,"message":"709","line":1,"column":17,"nodeType":"673","messageId":"674","endLine":1,"endColumn":26},{"ruleId":"694","severity":1,"message":"698","line":52,"column":30,"nodeType":"696","messageId":"697","endLine":52,"endColumn":32},{"ruleId":"710","severity":1,"message":"711","line":72,"column":13,"nodeType":"712","messageId":"713","endLine":72,"endColumn":21},{"ruleId":"671","severity":1,"message":"714","line":6,"column":8,"nodeType":"673","messageId":"674","endLine":6,"endColumn":23},{"ruleId":"671","severity":1,"message":"715","line":3,"column":10,"nodeType":"673","messageId":"674","endLine":3,"endColumn":25},{"ruleId":"716","severity":1,"message":"717","line":58,"column":29,"nodeType":"718","messageId":"719","endLine":85,"endColumn":2,"fix":"720"},{"ruleId":"721","severity":1,"message":"722","line":93,"column":27,"nodeType":"723","messageId":"724","endLine":93,"endColumn":31},{"ruleId":"694","severity":1,"message":"698","line":116,"column":16,"nodeType":"696","messageId":"697","endLine":116,"endColumn":18},{"ruleId":"694","severity":1,"message":"698","line":117,"column":26,"nodeType":"696","messageId":"697","endLine":117,"endColumn":28},{"ruleId":"694","severity":1,"message":"698","line":118,"column":36,"nodeType":"696","messageId":"697","endLine":118,"endColumn":38},{"ruleId":"694","severity":1,"message":"695","line":118,"column":63,"nodeType":"696","messageId":"697","endLine":118,"endColumn":65},{"ruleId":"677","severity":1,"message":"678","line":142,"column":5,"nodeType":"679","messageId":"680","endLine":142,"endColumn":21},{"ruleId":"725","severity":1,"message":"726","line":158,"column":30,"nodeType":"718","messageId":"727","endLine":158,"endColumn":41},{"ruleId":"725","severity":1,"message":"726","line":159,"column":31,"nodeType":"718","messageId":"727","endLine":159,"endColumn":42},{"ruleId":"725","severity":1,"message":"726","line":161,"column":19,"nodeType":"718","messageId":"727","endLine":161,"endColumn":30},{"ruleId":"725","severity":1,"message":"726","line":163,"column":22,"nodeType":"718","messageId":"727","endLine":163,"endColumn":33},{"ruleId":"694","severity":1,"message":"698","line":192,"column":92,"nodeType":"696","messageId":"697","endLine":192,"endColumn":94},{"ruleId":"725","severity":1,"message":"726","line":198,"column":40,"nodeType":"718","messageId":"727","endLine":198,"endColumn":51},{"ruleId":"728","severity":1,"message":"729","line":210,"column":115,"nodeType":"730","messageId":"731","endLine":210,"endColumn":239},{"ruleId":"732","severity":1,"message":"733","line":216,"column":49,"nodeType":"734","messageId":"735","endLine":216,"endColumn":50,"suggestions":"736"},{"ruleId":"694","severity":1,"message":"698","line":243,"column":54,"nodeType":"696","messageId":"697","endLine":243,"endColumn":56},{"ruleId":"694","severity":1,"message":"698","line":249,"column":54,"nodeType":"696","messageId":"697","endLine":249,"endColumn":56},{"ruleId":"694","severity":1,"message":"698","line":260,"column":93,"nodeType":"696","messageId":"697","endLine":260,"endColumn":95},{"ruleId":"732","severity":1,"message":"737","line":260,"column":158,"nodeType":"734","messageId":"735","endLine":260,"endColumn":159,"suggestions":"738"},{"ruleId":"694","severity":1,"message":"695","line":260,"column":177,"nodeType":"696","messageId":"697","endLine":260,"endColumn":179},{"ruleId":"694","severity":1,"message":"698","line":262,"column":94,"nodeType":"696","messageId":"697","endLine":262,"endColumn":96},{"ruleId":"732","severity":1,"message":"737","line":262,"column":160,"nodeType":"734","messageId":"735","endLine":262,"endColumn":161,"suggestions":"739"},{"ruleId":"694","severity":1,"message":"695","line":262,"column":179,"nodeType":"696","messageId":"697","endLine":262,"endColumn":181},{"ruleId":"740","severity":1,"message":"741","line":267,"column":12,"nodeType":"742","messageId":"719","endLine":267,"endColumn":84},{"ruleId":"671","severity":1,"message":"743","line":270,"column":41,"nodeType":"673","messageId":"674","endLine":270,"endColumn":51},{"ruleId":"716","severity":1,"message":"717","line":279,"column":96,"nodeType":"718","messageId":"719","endLine":279,"endColumn":148,"fix":"744"},{"ruleId":"716","severity":1,"message":"717","line":302,"column":96,"nodeType":"718","messageId":"719","endLine":302,"endColumn":148,"fix":"745"},{"ruleId":"746","severity":1,"message":"747","line":387,"column":1,"nodeType":"748","endLine":387,"endColumn":73},{"ruleId":"671","severity":1,"message":"715","line":4,"column":10,"nodeType":"673","messageId":"674","endLine":4,"endColumn":25},{"ruleId":"686","severity":1,"message":"687","line":26,"column":9,"nodeType":"688","messageId":"689","endLine":42,"endColumn":10},{"ruleId":"671","severity":1,"message":"749","line":38,"column":34,"nodeType":"673","messageId":"674","endLine":38,"endColumn":40},{"ruleId":"671","severity":1,"message":"750","line":45,"column":10,"nodeType":"673","messageId":"674","endLine":45,"endColumn":24},{"ruleId":"694","severity":1,"message":"698","line":119,"column":30,"nodeType":"696","messageId":"697","endLine":119,"endColumn":32},{"ruleId":"716","severity":1,"message":"717","line":282,"column":29,"nodeType":"718","messageId":"719","endLine":309,"endColumn":2,"fix":"751"},{"ruleId":"721","severity":1,"message":"722","line":317,"column":27,"nodeType":"723","messageId":"724","endLine":317,"endColumn":31},{"ruleId":"694","severity":1,"message":"698","line":340,"column":16,"nodeType":"696","messageId":"697","endLine":340,"endColumn":18},{"ruleId":"694","severity":1,"message":"698","line":341,"column":26,"nodeType":"696","messageId":"697","endLine":341,"endColumn":28},{"ruleId":"694","severity":1,"message":"698","line":342,"column":36,"nodeType":"696","messageId":"697","endLine":342,"endColumn":38},{"ruleId":"694","severity":1,"message":"695","line":342,"column":63,"nodeType":"696","messageId":"697","endLine":342,"endColumn":65},{"ruleId":"677","severity":1,"message":"678","line":366,"column":5,"nodeType":"679","messageId":"680","endLine":366,"endColumn":21},{"ruleId":"725","severity":1,"message":"726","line":382,"column":30,"nodeType":"718","messageId":"727","endLine":382,"endColumn":41},{"ruleId":"725","severity":1,"message":"726","line":383,"column":31,"nodeType":"718","messageId":"727","endLine":383,"endColumn":42},{"ruleId":"725","severity":1,"message":"726","line":385,"column":19,"nodeType":"718","messageId":"727","endLine":385,"endColumn":30},{"ruleId":"725","severity":1,"message":"726","line":387,"column":22,"nodeType":"718","messageId":"727","endLine":387,"endColumn":33},{"ruleId":"694","severity":1,"message":"698","line":429,"column":92,"nodeType":"696","messageId":"697","endLine":429,"endColumn":94},{"ruleId":"725","severity":1,"message":"726","line":435,"column":40,"nodeType":"718","messageId":"727","endLine":435,"endColumn":51},{"ruleId":"728","severity":1,"message":"729","line":447,"column":115,"nodeType":"730","messageId":"731","endLine":447,"endColumn":239},{"ruleId":"732","severity":1,"message":"733","line":453,"column":49,"nodeType":"734","messageId":"735","endLine":453,"endColumn":50,"suggestions":"752"},{"ruleId":"694","severity":1,"message":"698","line":480,"column":54,"nodeType":"696","messageId":"697","endLine":480,"endColumn":56},{"ruleId":"694","severity":1,"message":"698","line":486,"column":54,"nodeType":"696","messageId":"697","endLine":486,"endColumn":56},{"ruleId":"694","severity":1,"message":"698","line":497,"column":93,"nodeType":"696","messageId":"697","endLine":497,"endColumn":95},{"ruleId":"732","severity":1,"message":"737","line":497,"column":158,"nodeType":"734","messageId":"735","endLine":497,"endColumn":159,"suggestions":"753"},{"ruleId":"694","severity":1,"message":"695","line":497,"column":177,"nodeType":"696","messageId":"697","endLine":497,"endColumn":179},{"ruleId":"694","severity":1,"message":"698","line":499,"column":94,"nodeType":"696","messageId":"697","endLine":499,"endColumn":96},{"ruleId":"732","severity":1,"message":"737","line":499,"column":160,"nodeType":"734","messageId":"735","endLine":499,"endColumn":161,"suggestions":"754"},{"ruleId":"694","severity":1,"message":"695","line":499,"column":179,"nodeType":"696","messageId":"697","endLine":499,"endColumn":181},{"ruleId":"740","severity":1,"message":"741","line":505,"column":12,"nodeType":"742","messageId":"719","endLine":505,"endColumn":84},{"ruleId":"671","severity":1,"message":"743","line":508,"column":41,"nodeType":"673","messageId":"674","endLine":508,"endColumn":51},{"ruleId":"716","severity":1,"message":"717","line":517,"column":96,"nodeType":"718","messageId":"719","endLine":517,"endColumn":148,"fix":"755"},{"ruleId":"716","severity":1,"message":"717","line":540,"column":96,"nodeType":"718","messageId":"719","endLine":540,"endColumn":148,"fix":"756"},{"ruleId":"746","severity":1,"message":"747","line":628,"column":1,"nodeType":"748","endLine":628,"endColumn":73},{"ruleId":"716","severity":1,"message":"717","line":5,"column":30,"nodeType":"718","messageId":"719","endLine":119,"endColumn":2,"fix":"757"},{"ruleId":"690","severity":1,"message":"758","line":63,"column":5,"nodeType":"692","messageId":"693","endLine":63,"endColumn":17},{"ruleId":"671","severity":1,"message":"759","line":69,"column":13,"nodeType":"673","messageId":"674","endLine":69,"endColumn":22},{"ruleId":"716","severity":1,"message":"717","line":70,"column":16,"nodeType":"718","messageId":"719","endLine":117,"endColumn":10,"fix":"760"},{"ruleId":"728","severity":1,"message":"729","line":93,"column":28,"nodeType":"730","messageId":"731","endLine":93,"endColumn":46},{"ruleId":"686","severity":1,"message":"687","line":106,"column":17,"nodeType":"688","messageId":"689","endLine":109,"endColumn":18},{"ruleId":"686","severity":1,"message":"687","line":112,"column":17,"nodeType":"688","messageId":"689","endLine":115,"endColumn":18},{"ruleId":"732","severity":1,"message":"761","line":55,"column":40,"nodeType":"734","messageId":"735","endLine":55,"endColumn":41,"suggestions":"762"},{"ruleId":"694","severity":1,"message":"698","line":3,"column":20,"nodeType":"696","messageId":"697","endLine":3,"endColumn":22},{"ruleId":"694","severity":1,"message":"695","line":4,"column":77,"nodeType":"696","messageId":"697","endLine":4,"endColumn":79},{"ruleId":"728","severity":1,"message":"729","line":4,"column":101,"nodeType":"730","messageId":"731","endLine":4,"endColumn":124},{"ruleId":"686","severity":1,"message":"687","line":8,"column":17,"nodeType":"688","messageId":"689","endLine":17,"endColumn":18},{"ruleId":"728","severity":1,"message":"729","line":27,"column":102,"nodeType":"730","messageId":"731","endLine":27,"endColumn":125},{"ruleId":"694","severity":1,"message":"698","line":30,"column":119,"nodeType":"696","messageId":"697","endLine":30,"endColumn":121},{"ruleId":"686","severity":1,"message":"687","line":32,"column":17,"nodeType":"688","messageId":"689","endLine":41,"endColumn":18},{"ruleId":"694","severity":1,"message":"695","line":53,"column":77,"nodeType":"696","messageId":"697","endLine":53,"endColumn":79},{"ruleId":"728","severity":1,"message":"729","line":53,"column":101,"nodeType":"730","messageId":"731","endLine":53,"endColumn":124},{"ruleId":"686","severity":1,"message":"687","line":55,"column":9,"nodeType":"688","messageId":"689","endLine":64,"endColumn":10},{"ruleId":"694","severity":1,"message":"695","line":91,"column":77,"nodeType":"696","messageId":"697","endLine":91,"endColumn":79},{"ruleId":"728","severity":1,"message":"729","line":91,"column":101,"nodeType":"730","messageId":"731","endLine":91,"endColumn":124},{"ruleId":"686","severity":1,"message":"687","line":93,"column":9,"nodeType":"688","messageId":"689","endLine":103,"endColumn":10},{"ruleId":"716","severity":1,"message":"717","line":2,"column":24,"nodeType":"718","messageId":"719","endLine":12,"endColumn":2,"fix":"763"},{"ruleId":"728","severity":1,"message":"729","line":85,"column":113,"nodeType":"730","messageId":"731","endLine":85,"endColumn":180},{"ruleId":"694","severity":1,"message":"698","line":106,"column":29,"nodeType":"696","messageId":"697","endLine":106,"endColumn":31},{"ruleId":"694","severity":1,"message":"698","line":106,"column":59,"nodeType":"696","messageId":"697","endLine":106,"endColumn":61},{"ruleId":"694","severity":1,"message":"698","line":121,"column":29,"nodeType":"696","messageId":"697","endLine":121,"endColumn":31},{"ruleId":"694","severity":1,"message":"698","line":121,"column":59,"nodeType":"696","messageId":"697","endLine":121,"endColumn":61},{"ruleId":"694","severity":1,"message":"698","line":136,"column":29,"nodeType":"696","messageId":"697","endLine":136,"endColumn":31},{"ruleId":"694","severity":1,"message":"698","line":136,"column":59,"nodeType":"696","messageId":"697","endLine":136,"endColumn":61},{"ruleId":"671","severity":1,"message":"764","line":166,"column":17,"nodeType":"673","messageId":"674","endLine":166,"endColumn":28},{"ruleId":"671","severity":1,"message":"765","line":166,"column":34,"nodeType":"673","messageId":"674","endLine":166,"endColumn":43},{"ruleId":"677","severity":1,"message":"678","line":9,"column":5,"nodeType":"679","messageId":"680","endLine":11,"endColumn":6},{"ruleId":"690","severity":1,"message":"701","line":16,"column":5,"nodeType":"692","messageId":"702","endLine":16,"endColumn":14},{"ruleId":"694","severity":1,"message":"695","line":47,"column":23,"nodeType":"696","messageId":"697","endLine":47,"endColumn":25},{"ruleId":"694","severity":1,"message":"698","line":54,"column":98,"nodeType":"696","messageId":"697","endLine":54,"endColumn":100},{"ruleId":"694","severity":1,"message":"698","line":91,"column":44,"nodeType":"696","messageId":"697","endLine":91,"endColumn":46},{"ruleId":"728","severity":1,"message":"729","line":99,"column":32,"nodeType":"730","messageId":"731","endLine":99,"endColumn":95},{"ruleId":"728","severity":1,"message":"729","line":100,"column":32,"nodeType":"730","messageId":"731","endLine":100,"endColumn":65},{"ruleId":"728","severity":1,"message":"729","line":101,"column":28,"nodeType":"730","messageId":"731","endLine":101,"endColumn":65},{"ruleId":"686","severity":1,"message":"687","line":114,"column":13,"nodeType":"688","messageId":"689","endLine":133,"endColumn":14},{"ruleId":"694","severity":1,"message":"695","line":144,"column":60,"nodeType":"696","messageId":"697","endLine":144,"endColumn":62},{"ruleId":"686","severity":1,"message":"687","line":145,"column":13,"nodeType":"688","messageId":"689","endLine":150,"endColumn":14},{"ruleId":"694","severity":1,"message":"695","line":189,"column":55,"nodeType":"696","messageId":"697","endLine":189,"endColumn":57},{"ruleId":"694","severity":1,"message":"695","line":189,"column":159,"nodeType":"696","messageId":"697","endLine":189,"endColumn":161},{"ruleId":"694","severity":1,"message":"695","line":190,"column":68,"nodeType":"696","messageId":"697","endLine":190,"endColumn":70},{"ruleId":"728","severity":1,"message":"729","line":190,"column":75,"nodeType":"730","messageId":"731","endLine":190,"endColumn":114},{"ruleId":"694","severity":1,"message":"698","line":194,"column":64,"nodeType":"696","messageId":"697","endLine":194,"endColumn":66},{"ruleId":"694","severity":1,"message":"695","line":199,"column":64,"nodeType":"696","messageId":"697","endLine":199,"endColumn":66},{"ruleId":"728","severity":1,"message":"729","line":199,"column":71,"nodeType":"730","messageId":"731","endLine":199,"endColumn":150},{"ruleId":"686","severity":1,"message":"687","line":203,"column":17,"nodeType":"688","messageId":"689","endLine":203,"endColumn":99},{"ruleId":"694","severity":1,"message":"698","line":204,"column":34,"nodeType":"696","messageId":"697","endLine":204,"endColumn":36},{"ruleId":"686","severity":1,"message":"687","line":231,"column":17,"nodeType":"688","messageId":"689","endLine":250,"endColumn":18},{"ruleId":"677","severity":1,"message":"678","line":25,"column":5,"nodeType":"679","messageId":"680","endLine":25,"endColumn":21},{"ruleId":"716","severity":1,"message":"717","line":107,"column":136,"nodeType":"718","messageId":"719","endLine":107,"endColumn":163,"fix":"766"},{"ruleId":"716","severity":1,"message":"717","line":119,"column":81,"nodeType":"718","messageId":"719","endLine":119,"endColumn":95,"fix":"767"},{"ruleId":"768","severity":1,"message":"769","line":133,"column":129,"nodeType":"683","endLine":133,"endColumn":148},{"ruleId":"694","severity":1,"message":"695","line":134,"column":106,"nodeType":"696","messageId":"697","endLine":134,"endColumn":108},{"ruleId":"694","severity":1,"message":"695","line":134,"column":190,"nodeType":"696","messageId":"697","endLine":134,"endColumn":192},{"ruleId":"694","severity":1,"message":"698","line":146,"column":68,"nodeType":"696","messageId":"697","endLine":146,"endColumn":70},{"ruleId":"671","severity":1,"message":"770","line":146,"column":83,"nodeType":"673","messageId":"674","endLine":146,"endColumn":95},{"ruleId":"671","severity":1,"message":"715","line":3,"column":10,"nodeType":"673","messageId":"674","endLine":3,"endColumn":25},{"ruleId":"694","severity":1,"message":"698","line":13,"column":16,"nodeType":"696","messageId":"697","endLine":13,"endColumn":18},{"ruleId":"694","severity":1,"message":"698","line":14,"column":26,"nodeType":"696","messageId":"697","endLine":14,"endColumn":28},{"ruleId":"694","severity":1,"message":"698","line":15,"column":36,"nodeType":"696","messageId":"697","endLine":15,"endColumn":38},{"ruleId":"694","severity":1,"message":"695","line":15,"column":63,"nodeType":"696","messageId":"697","endLine":15,"endColumn":65},{"ruleId":"677","severity":1,"message":"678","line":34,"column":5,"nodeType":"679","messageId":"680","endLine":34,"endColumn":21},{"ruleId":"725","severity":1,"message":"726","line":50,"column":30,"nodeType":"718","messageId":"727","endLine":50,"endColumn":41},{"ruleId":"725","severity":1,"message":"726","line":51,"column":31,"nodeType":"718","messageId":"727","endLine":51,"endColumn":42},{"ruleId":"725","severity":1,"message":"726","line":53,"column":48,"nodeType":"718","messageId":"727","endLine":53,"endColumn":59},{"ruleId":"725","severity":1,"message":"726","line":55,"column":22,"nodeType":"718","messageId":"727","endLine":55,"endColumn":33},{"ruleId":"694","severity":1,"message":"698","line":74,"column":31,"nodeType":"696","messageId":"697","endLine":74,"endColumn":33},{"ruleId":"671","severity":1,"message":"771","line":97,"column":18,"nodeType":"673","messageId":"674","endLine":97,"endColumn":40},{"ruleId":"694","severity":1,"message":"698","line":125,"column":92,"nodeType":"696","messageId":"697","endLine":125,"endColumn":94},{"ruleId":"725","severity":1,"message":"726","line":131,"column":40,"nodeType":"718","messageId":"727","endLine":131,"endColumn":51},{"ruleId":"694","severity":1,"message":"698","line":142,"column":75,"nodeType":"696","messageId":"697","endLine":142,"endColumn":77},{"ruleId":"728","severity":1,"message":"729","line":150,"column":47,"nodeType":"730","messageId":"731","endLine":150,"endColumn":145},{"ruleId":"728","severity":1,"message":"729","line":151,"column":64,"nodeType":"730","messageId":"731","endLine":151,"endColumn":188},{"ruleId":"732","severity":1,"message":"733","line":164,"column":94,"nodeType":"734","messageId":"735","endLine":164,"endColumn":95,"suggestions":"772"},{"ruleId":"732","severity":1,"message":"733","line":166,"column":108,"nodeType":"734","messageId":"735","endLine":166,"endColumn":109,"suggestions":"773"},{"ruleId":"728","severity":1,"message":"729","line":183,"column":69,"nodeType":"730","messageId":"731","endLine":183,"endColumn":78},{"ruleId":"728","severity":1,"message":"729","line":184,"column":79,"nodeType":"730","messageId":"731","endLine":184,"endColumn":210},{"ruleId":"728","severity":1,"message":"729","line":186,"column":76,"nodeType":"730","messageId":"731","endLine":186,"endColumn":200},{"ruleId":"732","severity":1,"message":"733","line":199,"column":106,"nodeType":"734","messageId":"735","endLine":199,"endColumn":107,"suggestions":"774"},{"ruleId":"732","severity":1,"message":"733","line":201,"column":120,"nodeType":"734","messageId":"735","endLine":201,"endColumn":121,"suggestions":"775"},{"ruleId":"694","severity":1,"message":"698","line":233,"column":54,"nodeType":"696","messageId":"697","endLine":233,"endColumn":56},{"ruleId":"694","severity":1,"message":"698","line":239,"column":54,"nodeType":"696","messageId":"697","endLine":239,"endColumn":56},{"ruleId":"694","severity":1,"message":"698","line":283,"column":93,"nodeType":"696","messageId":"697","endLine":283,"endColumn":95},{"ruleId":"732","severity":1,"message":"737","line":283,"column":158,"nodeType":"734","messageId":"735","endLine":283,"endColumn":159,"suggestions":"776"},{"ruleId":"694","severity":1,"message":"695","line":283,"column":177,"nodeType":"696","messageId":"697","endLine":283,"endColumn":179},{"ruleId":"694","severity":1,"message":"698","line":285,"column":94,"nodeType":"696","messageId":"697","endLine":285,"endColumn":96},{"ruleId":"732","severity":1,"message":"737","line":285,"column":160,"nodeType":"734","messageId":"735","endLine":285,"endColumn":161,"suggestions":"777"},{"ruleId":"694","severity":1,"message":"695","line":285,"column":179,"nodeType":"696","messageId":"697","endLine":285,"endColumn":181},{"ruleId":"740","severity":1,"message":"741","line":290,"column":12,"nodeType":"742","messageId":"719","endLine":290,"endColumn":89},{"ruleId":"716","severity":1,"message":"717","line":303,"column":96,"nodeType":"718","messageId":"719","endLine":303,"endColumn":148,"fix":"778"},{"ruleId":"716","severity":1,"message":"717","line":326,"column":96,"nodeType":"718","messageId":"719","endLine":326,"endColumn":148,"fix":"779"},{"ruleId":"746","severity":1,"message":"747","line":411,"column":1,"nodeType":"748","endLine":411,"endColumn":73},{"ruleId":"671","severity":1,"message":"715","line":4,"column":10,"nodeType":"673","messageId":"674","endLine":4,"endColumn":25},{"ruleId":"671","severity":1,"message":"780","line":5,"column":10,"nodeType":"673","messageId":"674","endLine":5,"endColumn":17},{"ruleId":"686","severity":1,"message":"687","line":27,"column":9,"nodeType":"688","messageId":"689","endLine":43,"endColumn":10},{"ruleId":"671","severity":1,"message":"749","line":39,"column":34,"nodeType":"673","messageId":"674","endLine":39,"endColumn":40},{"ruleId":"671","severity":1,"message":"750","line":46,"column":10,"nodeType":"673","messageId":"674","endLine":46,"endColumn":24},{"ruleId":"694","severity":1,"message":"698","line":120,"column":30,"nodeType":"696","messageId":"697","endLine":120,"endColumn":32},{"ruleId":"694","severity":1,"message":"698","line":236,"column":16,"nodeType":"696","messageId":"697","endLine":236,"endColumn":18},{"ruleId":"694","severity":1,"message":"698","line":237,"column":26,"nodeType":"696","messageId":"697","endLine":237,"endColumn":28},{"ruleId":"694","severity":1,"message":"698","line":238,"column":36,"nodeType":"696","messageId":"697","endLine":238,"endColumn":38},{"ruleId":"694","severity":1,"message":"695","line":238,"column":63,"nodeType":"696","messageId":"697","endLine":238,"endColumn":65},{"ruleId":"677","severity":1,"message":"678","line":262,"column":5,"nodeType":"679","messageId":"680","endLine":262,"endColumn":21},{"ruleId":"725","severity":1,"message":"726","line":278,"column":30,"nodeType":"718","messageId":"727","endLine":278,"endColumn":41},{"ruleId":"725","severity":1,"message":"726","line":279,"column":31,"nodeType":"718","messageId":"727","endLine":279,"endColumn":42},{"ruleId":"725","severity":1,"message":"726","line":281,"column":19,"nodeType":"718","messageId":"727","endLine":281,"endColumn":30},{"ruleId":"725","severity":1,"message":"726","line":283,"column":22,"nodeType":"718","messageId":"727","endLine":283,"endColumn":33},{"ruleId":"694","severity":1,"message":"698","line":303,"column":31,"nodeType":"696","messageId":"697","endLine":303,"endColumn":33},{"ruleId":"671","severity":1,"message":"771","line":330,"column":18,"nodeType":"673","messageId":"674","endLine":330,"endColumn":40},{"ruleId":"694","severity":1,"message":"698","line":366,"column":23,"nodeType":"696","messageId":"697","endLine":366,"endColumn":25},{"ruleId":"694","severity":1,"message":"698","line":381,"column":92,"nodeType":"696","messageId":"697","endLine":381,"endColumn":94},{"ruleId":"725","severity":1,"message":"726","line":387,"column":40,"nodeType":"718","messageId":"727","endLine":387,"endColumn":51},{"ruleId":"694","severity":1,"message":"698","line":398,"column":75,"nodeType":"696","messageId":"697","endLine":398,"endColumn":77},{"ruleId":"728","severity":1,"message":"729","line":407,"column":47,"nodeType":"730","messageId":"731","endLine":407,"endColumn":145},{"ruleId":"728","severity":1,"message":"729","line":408,"column":64,"nodeType":"730","messageId":"731","endLine":408,"endColumn":188},{"ruleId":"732","severity":1,"message":"733","line":421,"column":94,"nodeType":"734","messageId":"735","endLine":421,"endColumn":95,"suggestions":"781"},{"ruleId":"732","severity":1,"message":"733","line":423,"column":108,"nodeType":"734","messageId":"735","endLine":423,"endColumn":109,"suggestions":"782"},{"ruleId":"728","severity":1,"message":"729","line":440,"column":69,"nodeType":"730","messageId":"731","endLine":440,"endColumn":78},{"ruleId":"728","severity":1,"message":"729","line":441,"column":79,"nodeType":"730","messageId":"731","endLine":441,"endColumn":210},{"ruleId":"728","severity":1,"message":"729","line":443,"column":76,"nodeType":"730","messageId":"731","endLine":443,"endColumn":200},{"ruleId":"732","severity":1,"message":"733","line":456,"column":106,"nodeType":"734","messageId":"735","endLine":456,"endColumn":107,"suggestions":"783"},{"ruleId":"732","severity":1,"message":"733","line":458,"column":120,"nodeType":"734","messageId":"735","endLine":458,"endColumn":121,"suggestions":"784"},{"ruleId":"694","severity":1,"message":"698","line":490,"column":54,"nodeType":"696","messageId":"697","endLine":490,"endColumn":56},{"ruleId":"694","severity":1,"message":"698","line":496,"column":54,"nodeType":"696","messageId":"697","endLine":496,"endColumn":56},{"ruleId":"694","severity":1,"message":"698","line":543,"column":93,"nodeType":"696","messageId":"697","endLine":543,"endColumn":95},{"ruleId":"732","severity":1,"message":"737","line":543,"column":158,"nodeType":"734","messageId":"735","endLine":543,"endColumn":159,"suggestions":"785"},{"ruleId":"694","severity":1,"message":"695","line":543,"column":177,"nodeType":"696","messageId":"697","endLine":543,"endColumn":179},{"ruleId":"694","severity":1,"message":"698","line":545,"column":94,"nodeType":"696","messageId":"697","endLine":545,"endColumn":96},{"ruleId":"732","severity":1,"message":"737","line":545,"column":160,"nodeType":"734","messageId":"735","endLine":545,"endColumn":161,"suggestions":"786"},{"ruleId":"694","severity":1,"message":"695","line":545,"column":179,"nodeType":"696","messageId":"697","endLine":545,"endColumn":181},{"ruleId":"740","severity":1,"message":"741","line":550,"column":12,"nodeType":"742","messageId":"719","endLine":550,"endColumn":89},{"ruleId":"716","severity":1,"message":"717","line":563,"column":96,"nodeType":"718","messageId":"719","endLine":563,"endColumn":148,"fix":"787"},{"ruleId":"716","severity":1,"message":"717","line":586,"column":96,"nodeType":"718","messageId":"719","endLine":586,"endColumn":148,"fix":"788"},{"ruleId":"746","severity":1,"message":"747","line":692,"column":1,"nodeType":"748","endLine":692,"endColumn":99},{"ruleId":"671","severity":1,"message":"789","line":3,"column":10,"nodeType":"673","messageId":"674","endLine":3,"endColumn":17},{"ruleId":"694","severity":1,"message":"698","line":14,"column":54,"nodeType":"696","messageId":"697","endLine":14,"endColumn":56},{"ruleId":"694","severity":1,"message":"695","line":14,"column":101,"nodeType":"696","messageId":"697","endLine":14,"endColumn":103},{"ruleId":"694","severity":1,"message":"695","line":15,"column":36,"nodeType":"696","messageId":"697","endLine":15,"endColumn":38},{"ruleId":"694","severity":1,"message":"698","line":18,"column":37,"nodeType":"696","messageId":"697","endLine":18,"endColumn":39},{"ruleId":"694","severity":1,"message":"698","line":18,"column":71,"nodeType":"696","messageId":"697","endLine":18,"endColumn":73},{"ruleId":"694","severity":1,"message":"698","line":27,"column":45,"nodeType":"696","messageId":"697","endLine":27,"endColumn":47},{"ruleId":"694","severity":1,"message":"698","line":28,"column":50,"nodeType":"696","messageId":"697","endLine":28,"endColumn":52},{"ruleId":"694","severity":1,"message":"695","line":34,"column":46,"nodeType":"696","messageId":"697","endLine":34,"endColumn":48},{"ruleId":"694","severity":1,"message":"698","line":34,"column":75,"nodeType":"696","messageId":"697","endLine":34,"endColumn":77},{"ruleId":"694","severity":1,"message":"698","line":34,"column":117,"nodeType":"696","messageId":"697","endLine":34,"endColumn":119},{"ruleId":"694","severity":1,"message":"698","line":34,"column":142,"nodeType":"696","messageId":"697","endLine":34,"endColumn":144},{"ruleId":"694","severity":1,"message":"698","line":34,"column":169,"nodeType":"696","messageId":"697","endLine":34,"endColumn":171},{"ruleId":"694","severity":1,"message":"698","line":34,"column":209,"nodeType":"696","messageId":"697","endLine":34,"endColumn":211},{"ruleId":"694","severity":1,"message":"695","line":34,"column":258,"nodeType":"696","messageId":"697","endLine":34,"endColumn":260},{"ruleId":"694","severity":1,"message":"698","line":38,"column":41,"nodeType":"696","messageId":"697","endLine":38,"endColumn":43},{"ruleId":"694","severity":1,"message":"698","line":39,"column":46,"nodeType":"696","messageId":"697","endLine":39,"endColumn":48},{"ruleId":"694","severity":1,"message":"698","line":47,"column":48,"nodeType":"696","messageId":"697","endLine":47,"endColumn":50},{"ruleId":"694","severity":1,"message":"698","line":47,"column":72,"nodeType":"696","messageId":"697","endLine":47,"endColumn":74},{"ruleId":"694","severity":1,"message":"698","line":48,"column":45,"nodeType":"696","messageId":"697","endLine":48,"endColumn":47},{"ruleId":"728","severity":1,"message":"729","line":48,"column":72,"nodeType":"730","messageId":"731","endLine":48,"endColumn":132},{"ruleId":"694","severity":1,"message":"698","line":49,"column":37,"nodeType":"696","messageId":"697","endLine":49,"endColumn":39},{"ruleId":"694","severity":1,"message":"698","line":49,"column":61,"nodeType":"696","messageId":"697","endLine":49,"endColumn":63},{"ruleId":"694","severity":1,"message":"698","line":51,"column":37,"nodeType":"696","messageId":"697","endLine":51,"endColumn":39},{"ruleId":"694","severity":1,"message":"698","line":51,"column":79,"nodeType":"696","messageId":"697","endLine":51,"endColumn":81},{"ruleId":"694","severity":1,"message":"698","line":51,"column":104,"nodeType":"696","messageId":"697","endLine":51,"endColumn":106},{"ruleId":"694","severity":1,"message":"698","line":52,"column":41,"nodeType":"696","messageId":"697","endLine":52,"endColumn":43},{"ruleId":"694","severity":1,"message":"698","line":55,"column":37,"nodeType":"696","messageId":"697","endLine":55,"endColumn":39},{"ruleId":"694","severity":1,"message":"698","line":55,"column":61,"nodeType":"696","messageId":"697","endLine":55,"endColumn":63},{"ruleId":"694","severity":1,"message":"698","line":55,"column":101,"nodeType":"696","messageId":"697","endLine":55,"endColumn":103},{"ruleId":"728","severity":1,"message":"729","line":61,"column":279,"nodeType":"730","messageId":"731","endLine":61,"endColumn":346},{"ruleId":"694","severity":1,"message":"698","line":71,"column":38,"nodeType":"696","messageId":"697","endLine":71,"endColumn":40},{"ruleId":"694","severity":1,"message":"698","line":71,"column":55,"nodeType":"696","messageId":"697","endLine":71,"endColumn":57},{"ruleId":"694","severity":1,"message":"698","line":71,"column":80,"nodeType":"696","messageId":"697","endLine":71,"endColumn":82},{"ruleId":"694","severity":1,"message":"698","line":71,"column":120,"nodeType":"696","messageId":"697","endLine":71,"endColumn":122},{"ruleId":"694","severity":1,"message":"698","line":82,"column":45,"nodeType":"696","messageId":"697","endLine":82,"endColumn":47},{"ruleId":"728","severity":1,"message":"729","line":83,"column":38,"nodeType":"730","messageId":"731","endLine":83,"endColumn":110},{"ruleId":"694","severity":1,"message":"695","line":83,"column":131,"nodeType":"696","messageId":"697","endLine":83,"endColumn":133},{"ruleId":"694","severity":1,"message":"698","line":89,"column":50,"nodeType":"696","messageId":"697","endLine":89,"endColumn":52},{"ruleId":"694","severity":1,"message":"698","line":95,"column":35,"nodeType":"696","messageId":"697","endLine":95,"endColumn":37},{"ruleId":"790","severity":1,"message":"791","line":95,"column":40,"nodeType":"673","messageId":"697","endLine":95,"endColumn":50},{"ruleId":"694","severity":1,"message":"698","line":109,"column":54,"nodeType":"696","messageId":"697","endLine":109,"endColumn":56},{"ruleId":"694","severity":1,"message":"695","line":109,"column":101,"nodeType":"696","messageId":"697","endLine":109,"endColumn":103},{"ruleId":"694","severity":1,"message":"695","line":110,"column":36,"nodeType":"696","messageId":"697","endLine":110,"endColumn":38},{"ruleId":"694","severity":1,"message":"698","line":113,"column":37,"nodeType":"696","messageId":"697","endLine":113,"endColumn":39},{"ruleId":"694","severity":1,"message":"698","line":113,"column":71,"nodeType":"696","messageId":"697","endLine":113,"endColumn":73},{"ruleId":"694","severity":1,"message":"698","line":119,"column":36,"nodeType":"696","messageId":"697","endLine":119,"endColumn":38},{"ruleId":"694","severity":1,"message":"698","line":131,"column":45,"nodeType":"696","messageId":"697","endLine":131,"endColumn":47},{"ruleId":"694","severity":1,"message":"698","line":132,"column":50,"nodeType":"696","messageId":"697","endLine":132,"endColumn":52},{"ruleId":"694","severity":1,"message":"695","line":138,"column":46,"nodeType":"696","messageId":"697","endLine":138,"endColumn":48},{"ruleId":"694","severity":1,"message":"698","line":138,"column":75,"nodeType":"696","messageId":"697","endLine":138,"endColumn":77},{"ruleId":"694","severity":1,"message":"698","line":138,"column":117,"nodeType":"696","messageId":"697","endLine":138,"endColumn":119},{"ruleId":"694","severity":1,"message":"698","line":138,"column":142,"nodeType":"696","messageId":"697","endLine":138,"endColumn":144},{"ruleId":"694","severity":1,"message":"698","line":138,"column":169,"nodeType":"696","messageId":"697","endLine":138,"endColumn":171},{"ruleId":"694","severity":1,"message":"698","line":138,"column":209,"nodeType":"696","messageId":"697","endLine":138,"endColumn":211},{"ruleId":"694","severity":1,"message":"695","line":138,"column":258,"nodeType":"696","messageId":"697","endLine":138,"endColumn":260},{"ruleId":"694","severity":1,"message":"698","line":142,"column":41,"nodeType":"696","messageId":"697","endLine":142,"endColumn":43},{"ruleId":"694","severity":1,"message":"698","line":143,"column":46,"nodeType":"696","messageId":"697","endLine":143,"endColumn":48},{"ruleId":"694","severity":1,"message":"698","line":149,"column":48,"nodeType":"696","messageId":"697","endLine":149,"endColumn":50},{"ruleId":"694","severity":1,"message":"698","line":149,"column":72,"nodeType":"696","messageId":"697","endLine":149,"endColumn":74},{"ruleId":"694","severity":1,"message":"698","line":150,"column":45,"nodeType":"696","messageId":"697","endLine":150,"endColumn":47},{"ruleId":"728","severity":1,"message":"729","line":150,"column":72,"nodeType":"730","messageId":"731","endLine":150,"endColumn":132},{"ruleId":"694","severity":1,"message":"698","line":151,"column":37,"nodeType":"696","messageId":"697","endLine":151,"endColumn":39},{"ruleId":"694","severity":1,"message":"698","line":151,"column":61,"nodeType":"696","messageId":"697","endLine":151,"endColumn":63},{"ruleId":"694","severity":1,"message":"698","line":153,"column":37,"nodeType":"696","messageId":"697","endLine":153,"endColumn":39},{"ruleId":"694","severity":1,"message":"698","line":153,"column":79,"nodeType":"696","messageId":"697","endLine":153,"endColumn":81},{"ruleId":"694","severity":1,"message":"698","line":153,"column":104,"nodeType":"696","messageId":"697","endLine":153,"endColumn":106},{"ruleId":"694","severity":1,"message":"698","line":154,"column":41,"nodeType":"696","messageId":"697","endLine":154,"endColumn":43},{"ruleId":"694","severity":1,"message":"698","line":157,"column":37,"nodeType":"696","messageId":"697","endLine":157,"endColumn":39},{"ruleId":"694","severity":1,"message":"698","line":157,"column":61,"nodeType":"696","messageId":"697","endLine":157,"endColumn":63},{"ruleId":"694","severity":1,"message":"698","line":157,"column":101,"nodeType":"696","messageId":"697","endLine":157,"endColumn":103},{"ruleId":"694","severity":1,"message":"695","line":161,"column":40,"nodeType":"696","messageId":"697","endLine":161,"endColumn":42},{"ruleId":"694","severity":1,"message":"698","line":171,"column":38,"nodeType":"696","messageId":"697","endLine":171,"endColumn":40},{"ruleId":"694","severity":1,"message":"698","line":171,"column":55,"nodeType":"696","messageId":"697","endLine":171,"endColumn":57},{"ruleId":"694","severity":1,"message":"698","line":171,"column":80,"nodeType":"696","messageId":"697","endLine":171,"endColumn":82},{"ruleId":"694","severity":1,"message":"698","line":171,"column":120,"nodeType":"696","messageId":"697","endLine":171,"endColumn":122},{"ruleId":"694","severity":1,"message":"698","line":180,"column":45,"nodeType":"696","messageId":"697","endLine":180,"endColumn":47},{"ruleId":"728","severity":1,"message":"729","line":181,"column":38,"nodeType":"730","messageId":"731","endLine":181,"endColumn":110},{"ruleId":"694","severity":1,"message":"695","line":181,"column":131,"nodeType":"696","messageId":"697","endLine":181,"endColumn":133},{"ruleId":"694","severity":1,"message":"698","line":187,"column":50,"nodeType":"696","messageId":"697","endLine":187,"endColumn":52},{"ruleId":"694","severity":1,"message":"698","line":193,"column":35,"nodeType":"696","messageId":"697","endLine":193,"endColumn":37},{"ruleId":"790","severity":1,"message":"791","line":193,"column":40,"nodeType":"673","messageId":"697","endLine":193,"endColumn":50},{"ruleId":"716","severity":1,"message":"717","line":199,"column":30,"nodeType":"718","messageId":"719","endLine":207,"endColumn":2,"fix":"792"},{"ruleId":"677","severity":1,"message":"678","line":200,"column":5,"nodeType":"679","messageId":"680","endLine":202,"endColumn":6},{"ruleId":"686","severity":1,"message":"687","line":221,"column":13,"nodeType":"688","messageId":"689","endLine":243,"endColumn":14},{"ruleId":"728","severity":1,"message":"729","line":223,"column":101,"nodeType":"730","messageId":"731","endLine":223,"endColumn":117},{"ruleId":"728","severity":1,"message":"729","line":226,"column":86,"nodeType":"730","messageId":"731","endLine":226,"endColumn":100},{"ruleId":"728","severity":1,"message":"729","line":229,"column":88,"nodeType":"730","messageId":"731","endLine":229,"endColumn":103},{"ruleId":"728","severity":1,"message":"729","line":232,"column":88,"nodeType":"730","messageId":"731","endLine":232,"endColumn":103},{"ruleId":"728","severity":1,"message":"729","line":235,"column":89,"nodeType":"730","messageId":"731","endLine":235,"endColumn":105},{"ruleId":"728","severity":1,"message":"729","line":238,"column":88,"nodeType":"730","messageId":"731","endLine":238,"endColumn":103},{"ruleId":"728","severity":1,"message":"729","line":241,"column":96,"nodeType":"730","messageId":"731","endLine":241,"endColumn":118},{"ruleId":"671","severity":1,"message":"793","line":287,"column":86,"nodeType":"673","messageId":"674","endLine":287,"endColumn":97},{"ruleId":"694","severity":1,"message":"698","line":291,"column":56,"nodeType":"696","messageId":"697","endLine":291,"endColumn":58},{"ruleId":"671","severity":1,"message":"699","line":302,"column":13,"nodeType":"673","messageId":"674","endLine":302,"endColumn":17},{"ruleId":"694","severity":1,"message":"698","line":3,"column":20,"nodeType":"696","messageId":"697","endLine":3,"endColumn":22},{"ruleId":"694","severity":1,"message":"698","line":28,"column":37,"nodeType":"696","messageId":"697","endLine":28,"endColumn":39},{"ruleId":"694","severity":1,"message":"698","line":28,"column":65,"nodeType":"696","messageId":"697","endLine":28,"endColumn":67},{"ruleId":"728","severity":1,"message":"729","line":31,"column":18,"nodeType":"730","messageId":"731","endLine":31,"endColumn":94},{"ruleId":"694","severity":1,"message":"698","line":61,"column":46,"nodeType":"696","messageId":"697","endLine":61,"endColumn":48},{"ruleId":"694","severity":1,"message":"695","line":80,"column":102,"nodeType":"696","messageId":"697","endLine":80,"endColumn":104},{"ruleId":"694","severity":1,"message":"698","line":80,"column":129,"nodeType":"696","messageId":"697","endLine":80,"endColumn":131},{"ruleId":"694","severity":1,"message":"695","line":80,"column":175,"nodeType":"696","messageId":"697","endLine":80,"endColumn":177},{"ruleId":"694","severity":1,"message":"698","line":82,"column":59,"nodeType":"696","messageId":"697","endLine":82,"endColumn":61},{"ruleId":"694","severity":1,"message":"698","line":83,"column":25,"nodeType":"696","messageId":"697","endLine":83,"endColumn":27},{"ruleId":"728","severity":1,"message":"729","line":83,"column":84,"nodeType":"730","messageId":"731","endLine":83,"endColumn":153},{"ruleId":"694","severity":1,"message":"698","line":84,"column":25,"nodeType":"696","messageId":"697","endLine":84,"endColumn":27},{"ruleId":"694","severity":1,"message":"698","line":87,"column":59,"nodeType":"696","messageId":"697","endLine":87,"endColumn":61},{"ruleId":"694","severity":1,"message":"695","line":91,"column":50,"nodeType":"696","messageId":"697","endLine":91,"endColumn":52},{"ruleId":"694","severity":1,"message":"698","line":96,"column":67,"nodeType":"696","messageId":"697","endLine":96,"endColumn":69},{"ruleId":"728","severity":1,"message":"729","line":98,"column":46,"nodeType":"730","messageId":"731","endLine":98,"endColumn":100},{"ruleId":"728","severity":1,"message":"729","line":99,"column":72,"nodeType":"730","messageId":"731","endLine":99,"endColumn":141},{"ruleId":"694","severity":1,"message":"695","line":105,"column":59,"nodeType":"696","messageId":"697","endLine":105,"endColumn":61},{"ruleId":"694","severity":1,"message":"695","line":105,"column":84,"nodeType":"696","messageId":"697","endLine":105,"endColumn":86},{"ruleId":"728","severity":1,"message":"729","line":105,"column":246,"nodeType":"730","messageId":"731","endLine":105,"endColumn":309},{"ruleId":"686","severity":1,"message":"687","line":119,"column":21,"nodeType":"688","messageId":"689","endLine":141,"endColumn":22},{"ruleId":"728","severity":1,"message":"729","line":126,"column":59,"nodeType":"730","messageId":"731","endLine":126,"endColumn":120},{"ruleId":"728","severity":1,"message":"729","line":143,"column":24,"nodeType":"730","messageId":"731","endLine":143,"endColumn":117},{"ruleId":"728","severity":1,"message":"729","line":144,"column":20,"nodeType":"730","messageId":"731","endLine":144,"endColumn":122},{"ruleId":"694","severity":1,"message":"695","line":205,"column":21,"nodeType":"696","messageId":"697","endLine":205,"endColumn":23},{"ruleId":"694","severity":1,"message":"698","line":206,"column":48,"nodeType":"696","messageId":"697","endLine":206,"endColumn":50},{"ruleId":"690","severity":1,"message":"758","line":225,"column":5,"nodeType":"692","messageId":"693","endLine":225,"endColumn":17},{"ruleId":"671","severity":1,"message":"794","line":234,"column":13,"nodeType":"673","messageId":"674","endLine":234,"endColumn":29},{"ruleId":"716","severity":1,"message":"717","line":235,"column":16,"nodeType":"718","messageId":"719","endLine":282,"endColumn":10,"fix":"795"},{"ruleId":"728","severity":1,"message":"729","line":258,"column":28,"nodeType":"730","messageId":"731","endLine":258,"endColumn":46},{"ruleId":"686","severity":1,"message":"687","line":271,"column":17,"nodeType":"688","messageId":"689","endLine":274,"endColumn":18},{"ruleId":"686","severity":1,"message":"687","line":277,"column":17,"nodeType":"688","messageId":"689","endLine":280,"endColumn":18},{"ruleId":"671","severity":1,"message":"796","line":285,"column":13,"nodeType":"673","messageId":"674","endLine":285,"endColumn":24},{"ruleId":"671","severity":1,"message":"797","line":285,"column":31,"nodeType":"673","messageId":"674","endLine":285,"endColumn":43},{"ruleId":"716","severity":1,"message":"717","line":286,"column":16,"nodeType":"718","messageId":"719","endLine":325,"endColumn":10,"fix":"798"},{"ruleId":"694","severity":1,"message":"698","line":399,"column":85,"nodeType":"696","messageId":"697","endLine":399,"endColumn":87},{"ruleId":"694","severity":1,"message":"698","line":413,"column":85,"nodeType":"696","messageId":"697","endLine":413,"endColumn":87},{"ruleId":"694","severity":1,"message":"698","line":427,"column":85,"nodeType":"696","messageId":"697","endLine":427,"endColumn":87},{"ruleId":"694","severity":1,"message":"698","line":441,"column":85,"nodeType":"696","messageId":"697","endLine":441,"endColumn":87},{"ruleId":"671","severity":1,"message":"799","line":24,"column":7,"nodeType":"673","messageId":"674","endLine":24,"endColumn":29},{"ruleId":"694","severity":1,"message":"698","line":54,"column":29,"nodeType":"696","messageId":"697","endLine":54,"endColumn":31},{"ruleId":"728","severity":1,"message":"729","line":3,"column":44,"nodeType":"730","messageId":"731","endLine":3,"endColumn":95},{"ruleId":"728","severity":1,"message":"729","line":4,"column":52,"nodeType":"730","messageId":"731","endLine":4,"endColumn":96},{"ruleId":"686","severity":1,"message":"687","line":11,"column":21,"nodeType":"688","messageId":"689","endLine":39,"endColumn":22},{"ruleId":"728","severity":1,"message":"729","line":13,"column":137,"nodeType":"730","messageId":"731","endLine":13,"endColumn":153},{"ruleId":"728","severity":1,"message":"729","line":16,"column":123,"nodeType":"730","messageId":"731","endLine":16,"endColumn":137},{"ruleId":"725","severity":1,"message":"726","line":16,"column":156,"nodeType":"718","messageId":"727","endLine":16,"endColumn":167},{"ruleId":"728","severity":1,"message":"729","line":19,"column":125,"nodeType":"730","messageId":"731","endLine":19,"endColumn":140},{"ruleId":"728","severity":1,"message":"729","line":22,"column":99,"nodeType":"730","messageId":"731","endLine":22,"endColumn":114},{"ruleId":"728","severity":1,"message":"729","line":25,"column":137,"nodeType":"730","messageId":"731","endLine":25,"endColumn":151},{"ruleId":"728","severity":1,"message":"729","line":28,"column":137,"nodeType":"730","messageId":"731","endLine":28,"endColumn":153},{"ruleId":"728","severity":1,"message":"729","line":31,"column":100,"nodeType":"730","messageId":"731","endLine":31,"endColumn":116},{"ruleId":"728","severity":1,"message":"729","line":34,"column":99,"nodeType":"730","messageId":"731","endLine":34,"endColumn":114},{"ruleId":"728","severity":1,"message":"729","line":37,"column":104,"nodeType":"730","messageId":"731","endLine":37,"endColumn":126},{"ruleId":"728","severity":1,"message":"729","line":40,"column":53,"nodeType":"730","messageId":"731","endLine":40,"endColumn":71},{"ruleId":"728","severity":1,"message":"729","line":41,"column":20,"nodeType":"730","messageId":"731","endLine":41,"endColumn":32},{"ruleId":"677","severity":1,"message":"678","line":132,"column":5,"nodeType":"679","messageId":"680","endLine":134,"endColumn":6},{"ruleId":"694","severity":1,"message":"698","line":14,"column":23,"nodeType":"696","messageId":"697","endLine":14,"endColumn":25},{"ruleId":"671","severity":1,"message":"709","line":1,"column":16,"nodeType":"673","messageId":"674","endLine":1,"endColumn":25},{"ruleId":"671","severity":1,"message":"800","line":21,"column":13,"nodeType":"673","messageId":"674","endLine":21,"endColumn":22},{"ruleId":"671","severity":1,"message":"699","line":33,"column":13,"nodeType":"673","messageId":"674","endLine":33,"endColumn":17},{"ruleId":"694","severity":1,"message":"698","line":57,"column":21,"nodeType":"696","messageId":"697","endLine":57,"endColumn":23},{"ruleId":"694","severity":1,"message":"695","line":59,"column":60,"nodeType":"696","messageId":"697","endLine":59,"endColumn":62},{"ruleId":"694","severity":1,"message":"698","line":74,"column":17,"nodeType":"696","messageId":"697","endLine":74,"endColumn":19},{"ruleId":"694","severity":1,"message":"698","line":77,"column":47,"nodeType":"696","messageId":"697","endLine":77,"endColumn":49},{"ruleId":"694","severity":1,"message":"698","line":80,"column":51,"nodeType":"696","messageId":"697","endLine":80,"endColumn":53},{"ruleId":"694","severity":1,"message":"698","line":92,"column":53,"nodeType":"696","messageId":"697","endLine":92,"endColumn":55},{"ruleId":"694","severity":1,"message":"698","line":100,"column":80,"nodeType":"696","messageId":"697","endLine":100,"endColumn":82},{"ruleId":"677","severity":1,"message":"678","line":4,"column":5,"nodeType":"679","messageId":"680","endLine":6,"endColumn":6},{"ruleId":"677","severity":1,"message":"678","line":56,"column":5,"nodeType":"679","messageId":"680","endLine":58,"endColumn":6},{"ruleId":"671","severity":1,"message":"708","line":8,"column":10,"nodeType":"673","messageId":"674","endLine":8,"endColumn":38},{"ruleId":"694","severity":1,"message":"695","line":48,"column":87,"nodeType":"696","messageId":"697","endLine":48,"endColumn":89},{"ruleId":"694","severity":1,"message":"698","line":95,"column":35,"nodeType":"696","messageId":"697","endLine":95,"endColumn":37},{"ruleId":"694","severity":1,"message":"695","line":98,"column":34,"nodeType":"696","messageId":"697","endLine":98,"endColumn":36},{"ruleId":"694","severity":1,"message":"698","line":98,"column":51,"nodeType":"696","messageId":"697","endLine":98,"endColumn":53},{"ruleId":"694","severity":1,"message":"698","line":98,"column":92,"nodeType":"696","messageId":"697","endLine":98,"endColumn":94},{"ruleId":"728","severity":1,"message":"729","line":99,"column":39,"nodeType":"730","messageId":"731","endLine":99,"endColumn":51},{"ruleId":"694","severity":1,"message":"695","line":101,"column":34,"nodeType":"696","messageId":"697","endLine":101,"endColumn":36},{"ruleId":"694","severity":1,"message":"698","line":101,"column":69,"nodeType":"696","messageId":"697","endLine":101,"endColumn":71},{"ruleId":"694","severity":1,"message":"698","line":101,"column":97,"nodeType":"696","messageId":"697","endLine":101,"endColumn":99},{"ruleId":"728","severity":1,"message":"729","line":102,"column":39,"nodeType":"730","messageId":"731","endLine":102,"endColumn":51},{"ruleId":"694","severity":1,"message":"698","line":104,"column":172,"nodeType":"696","messageId":"697","endLine":104,"endColumn":174},{"ruleId":"694","severity":1,"message":"698","line":105,"column":42,"nodeType":"696","messageId":"697","endLine":105,"endColumn":44},{"ruleId":"694","severity":1,"message":"698","line":107,"column":42,"nodeType":"696","messageId":"697","endLine":107,"endColumn":44},{"ruleId":"728","severity":1,"message":"729","line":146,"column":16,"nodeType":"730","messageId":"731","endLine":146,"endColumn":60},{"ruleId":"694","severity":1,"message":"698","line":148,"column":49,"nodeType":"696","messageId":"697","endLine":148,"endColumn":51},{"ruleId":"694","severity":1,"message":"698","line":149,"column":89,"nodeType":"696","messageId":"697","endLine":149,"endColumn":91},{"ruleId":"694","severity":1,"message":"695","line":154,"column":53,"nodeType":"696","messageId":"697","endLine":154,"endColumn":55},{"ruleId":"694","severity":1,"message":"695","line":156,"column":52,"nodeType":"696","messageId":"697","endLine":156,"endColumn":54},{"ruleId":"801","severity":1,"message":"802","line":187,"column":9,"nodeType":"803","endLine":187,"endColumn":27},{"ruleId":"694","severity":1,"message":"695","line":216,"column":146,"nodeType":"696","messageId":"697","endLine":216,"endColumn":148},{"ruleId":"694","severity":1,"message":"695","line":216,"column":284,"nodeType":"696","messageId":"697","endLine":216,"endColumn":286},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'NavLink' is defined but never used.","'MathAdv' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'ActionResumeOperation' is defined but never used.","'CalcValueCellPreparation' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","getter-return","Expected getter 'dimension' to always return a value.","FunctionExpression","expectedAlways","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","'self' is assigned a value but never used.","'MathEnvCalcCell' is defined but never used.","Expected to return a value in getter 'value'.","expected","'Jumper' is defined but never used.","'Labolatory' is assigned a value but never used.","'ActionsStack' is defined but never used.","'ActionOperation' is defined but never used.","'FloatingContainerEvent' is defined but never used.","'FloatingContainerNextToEvent' is defined but never used.","'Component' is defined but never used.","no-fallthrough","Expected a 'break' statement before 'default'.","SwitchCase","default","'reportWebVitals' is defined but never used.","'basicHashString' is defined but never used.","new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"804","text":"805"},"no-this-before-super","'this' is not allowed before 'super()'.","ThisExpression","noBeforeSuper","no-array-constructor","The array literal notation [] is preferable.","preferLiteral","no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object","no-useless-escape","Unnecessary escape character: \\#.","Literal","unnecessaryEscape",["806","807"],"Unnecessary escape character: \\&.",["808","809"],["810","811"],"no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","'resActions' is assigned a value but never used.",{"range":"812","text":"805"},{"range":"813","text":"805"},"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'sizeOf' is defined but never used.","'formatByteSize' is defined but never used.",{"range":"814","text":"805"},["815","816"],["817","818"],["819","820"],{"range":"821","text":"805"},{"range":"822","text":"805"},{"range":"823","text":"805"},"Expected getter 'language' to always return a value.","'lastError' is assigned a value but never used.",{"range":"824","text":"805"},"Unnecessary escape character: \\%.",["825","826"],{"range":"827","text":"805"},"'movedHeight' is assigned a value but never used.","'maxHeight' is assigned a value but never used.",{"range":"828","text":"805"},{"range":"829","text":"805"},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'currListItem' is assigned a value but never used.","'onComponentWillUnmount' is defined but never used.",["830","831"],["832","833"],["834","835"],["836","837"],["838","839"],["840","841"],{"range":"842","text":"805"},{"range":"843","text":"805"},"'Console' is defined but never used.",["844","845"],["846","847"],["848","849"],["850","851"],["852","853"],["854","855"],{"range":"856","text":"805"},{"range":"857","text":"805"},"'RawHTML' is defined but never used.","no-ex-assign","Do not assign to the exception parameter.",{"range":"858","text":"805"},"'parentProps' is assigned a value but never used.","'clipboardHistory' is assigned a value but never used.",{"range":"859","text":"805"},"'windowsList' is assigned a value but never used.","'activeWindow' is assigned a value but never used.",{"range":"860","text":"805"},"'LanguageDescriptorDict' is defined but never used.","'currIters' is assigned a value but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression",[2270,2270],"()",{"messageId":"861","fix":"862","desc":"863"},{"messageId":"864","fix":"865","desc":"866"},{"messageId":"861","fix":"867","desc":"863"},{"messageId":"864","fix":"868","desc":"866"},{"messageId":"861","fix":"869","desc":"863"},{"messageId":"864","fix":"870","desc":"866"},[11030,11030],[12577,12577],[16822,16822],{"messageId":"861","fix":"871","desc":"863"},{"messageId":"864","fix":"872","desc":"866"},{"messageId":"861","fix":"873","desc":"863"},{"messageId":"864","fix":"874","desc":"866"},{"messageId":"861","fix":"875","desc":"863"},{"messageId":"864","fix":"876","desc":"866"},[26443,26443],[27990,27990],[5835,5835],[5825,5825],{"messageId":"861","fix":"877","desc":"863"},{"messageId":"864","fix":"878","desc":"866"},[640,640],[2870,2870],[3405,3405],{"messageId":"861","fix":"879","desc":"863"},{"messageId":"864","fix":"880","desc":"866"},{"messageId":"861","fix":"881","desc":"863"},{"messageId":"864","fix":"882","desc":"866"},{"messageId":"861","fix":"883","desc":"863"},{"messageId":"864","fix":"884","desc":"866"},{"messageId":"861","fix":"885","desc":"863"},{"messageId":"864","fix":"886","desc":"866"},{"messageId":"861","fix":"887","desc":"863"},{"messageId":"864","fix":"888","desc":"866"},{"messageId":"861","fix":"889","desc":"863"},{"messageId":"864","fix":"890","desc":"866"},[16386,16386],[17938,17938],{"messageId":"861","fix":"891","desc":"863"},{"messageId":"864","fix":"892","desc":"866"},{"messageId":"861","fix":"893","desc":"863"},{"messageId":"864","fix":"894","desc":"866"},{"messageId":"861","fix":"895","desc":"863"},{"messageId":"864","fix":"896","desc":"866"},{"messageId":"861","fix":"897","desc":"863"},{"messageId":"864","fix":"898","desc":"866"},{"messageId":"861","fix":"899","desc":"863"},{"messageId":"864","fix":"900","desc":"866"},{"messageId":"861","fix":"901","desc":"863"},{"messageId":"864","fix":"902","desc":"866"},[32434,32434],[33986,33986],[13829,13829],[9664,9664],[12270,12270],"removeEscape",{"range":"903","text":"904"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"905","text":"906"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"907","text":"904"},{"range":"908","text":"906"},{"range":"909","text":"904"},{"range":"910","text":"906"},{"range":"911","text":"904"},{"range":"912","text":"906"},{"range":"913","text":"904"},{"range":"914","text":"906"},{"range":"915","text":"904"},{"range":"916","text":"906"},{"range":"917","text":"904"},{"range":"918","text":"906"},{"range":"919","text":"904"},{"range":"920","text":"906"},{"range":"921","text":"904"},{"range":"922","text":"906"},{"range":"923","text":"904"},{"range":"924","text":"906"},{"range":"925","text":"904"},{"range":"926","text":"906"},{"range":"927","text":"904"},{"range":"928","text":"906"},{"range":"929","text":"904"},{"range":"930","text":"906"},{"range":"931","text":"904"},{"range":"932","text":"906"},{"range":"933","text":"904"},{"range":"934","text":"906"},{"range":"935","text":"904"},{"range":"936","text":"906"},{"range":"937","text":"904"},{"range":"938","text":"906"},{"range":"939","text":"904"},{"range":"940","text":"906"},{"range":"941","text":"904"},{"range":"942","text":"906"},[7113,7114],"",[7113,7113],"\\",[9603,9604],[9603,9603],[9908,9909],[9908,9908],[22468,22469],[22468,22468],[24958,24959],[24958,24958],[25263,25264],[25263,25263],[2116,2117],[2116,2116],[6945,6946],[6945,6945],[7292,7293],[7292,7292],[10357,10358],[10357,10357],[10728,10729],[10728,10728],[14982,14983],[14982,14982],[15292,15293],[15292,15292],[22980,22981],[22980,22980],[23327,23328],[23327,23327],[26392,26393],[26392,26392],[26763,26764],[26763,26763],[31030,31031],[31030,31030],[31340,31341],[31340,31340]]